{"timestamp":"2024-10-28 15:42:32.629","prompt":"\n[Skip to content][1][Skip to navigation][2][Skip to topbar][3]\n\n[Go to the Twilio Docs home page][4]\nTwilio Docs\n[General Usage][5]\nGet started\n[Use your free Twilio trial accountTwilio Messaging Documentation][6][How to\nWork with your Twilio Free Trial Account (US only)Twilio Messaging\nDocumentation][7][Your request to Twilio][8][Twilio’s response][9][Mutation and\nConflict Resolution][10][API best practices][11][A Beginner’s Guide to the\nCommand Line][12]\nSet up your local development environment\n[C# and ASP.NET MVC][13][Java][14][Node.js and Express][15][PHP][16][Python and\nFlask][17][Ruby and Sinatra][18][Go and Gin][19]\nREST API\n[Twilio’s Rest APIs][20][REST API requests in PowerShell][21]\nAccounts\n[OverviewTwilio Identity Access Management Documentation][22][SubaccountsTwilio\nIdentity Access Management Documentation][23]\n[Addresses][24][Applications][25]\nBulkExport API\n[Overview][26][Export Configuration][27][Custom Job Creation][28][Job\nResource][29][Day Resource][30]\n[Keys][31][Usage records][32][Usage triggers][33]\nMonitor REST API\n[Alerts][34][Events][35]\n[Browse all of Twilio's APIsTwilio API Documentation and Error Codes][36]\nWebhooks\n[Introduction][37][Overview][38][Getting Started][39][Webhooks Connection\nOverrides][40][FAQ][41][Security][42]\nPreventing Fraud\n[Anti-Fraud Developer’s Guide][43][Global Safe List API][44]\nTroubleshooting and Security\n[Debug your Twilio application][45][Debug events\nwebhooks][46][Alarms][47][Alternative representations and data\ntypes][48][Availability and Reliability][49][Security][50][ISO/IEC\nCertification][51][Reporting security vulnerabilities][52][Store Your Twilio\nCredentials Securely][53]\nSecure your app by validating incoming Twilio requests\n[C# / ASP.NET][54][C# / ASP.NET Core][55][C# / ASP.NET WEB API][56][Java /\nServlets][57][Node.js / Express][58][PHP / Lumen][59][Python /\nDjango][60][Python / Flask][61][Ruby / SinatraAdditional Twilio\nDocumentation][62][Go / Gin][63]\nTwilio products: API docs, quickstarts, and tutorials\n[Programmable MessagingTwilio Messaging Documentation][64][Programmable\nVoiceTwilio Voice Documentation][65][Programmable WirelessTwilio Internet of\nThings Documentation][66][Super SIMTwilio Internet of Things\nDocumentation][67][Verify APITwilio Verify Documentation][68]\n\n[Twilio Logo\nTwilio Docs\n][69]\nSearchK\nSearchK\n\n* [Messaging][70]\n* [Voice][71]\n* [Serverless][72]\n* [Flex][73]\n* [Studio][74]\n* [All docs...][75]\n\n* [SDKs][76]\n* [\n  HelpHelp\n  ][77]\nSearchK\n\n* [Log in][78]\n* [Sign up][79]\n\n\nOn this page\n\n* [What is a REST API, anyway?][80]\n* [Working with Twilio's APIs][81]\n* [Authenticate with HTTP][82]\n* [Expected Content Type for API Requests][83]\n* [Authenticate using the Twilio SDKs][84]\n* [How Twilio's APIs use webhooks][85]\n* [Explore the APIs][86]\n* [Send an SMS with Twilio's API][87]\n* [Explore Twilio's other APIs][88]\nOn this page\n[\nWhat is a REST API, anyway?\n][89][\nWorking with Twilio's APIs\n][90][\nAuthenticate with HTTP\n][91][\nExpected Content Type for API Requests\n][92][\nAuthenticate using the Twilio SDKs\n][93][\nHow Twilio's APIs use webhooks\n][94][\nExplore the APIs\n][95][\nSend an SMS with Twilio's API\n][96][\nExplore Twilio's other APIs\n][97]\n\n# How to Use Our REST APIs\n\n\nPositive FeedbackNegative Feedback\n\nTwilio's APIs ([Application Programming Interfaces][98]) power its platform for\ncommunications. Behind these APIs is a software layer connecting and optimizing\ncommunications networks around the world to allow your users to call and message\nanyone, globally.\n\n(information)\n\n## Info\n\nTwilio has a whole host of APIs, from SMS to Voice to Wireless. You can find\nTwilio's API reference documentation throughout our product documentation. You\ncan [browse the various APIs here][99], or jump straight to the API reference\nfor [Programmable SMS][100] or [Programmable Voice][101].\n\n\n\n## What is a REST API, anyway?\n\n[what-is-a-rest-api-anyway page anchor][102]\nPositive FeedbackNegative Feedback\n\n[API][103] is short for 'Application Programming Interface' . An API is a set of\nrules that lets programs talk to each other, exposing data and functionality\nacross the Internet in a consistent format.\n\nREST stands for '[Representational State Transfer(link takes you to an external\npage)][104]'. This is an architectural pattern that describes how distributed\nsystems can expose a consistent interface. When people use the term 'REST API',\nthey are generally referring to an API accessed using the HTTP protocol at a\npredefined set of URLs.\n\nThese URLs represent various resources — any information or content accessed at\nthat location, which can be returned as JSON, HTML, audio files, or images.\nOften resources have one or more methods that can be performed on them over\nHTTP, like `GET`, `POST`, `PUT`, and `DELETE`. The action represented by the\nfirst and last of these is clear, but `POST` and `PUT` have specific meanings.\nHow they are defined is confusing, but the general rule is: use `POST` to create\nresources, and `PUT` to update resources.\n\nTwilio, for example, provides many separate REST APIs for sending text messages,\nmaking phone calls, looking up phone numbers, managing your accounts, and a\nwhole lot more. In Twilio's ecosystem, each product is its own API, but you will\nwork with each of them in roughly the same way, whether directly over HTTP or\nusing [Twilio's helper libraries][105] for several different programming\nlanguages.\n\n\n## Working with Twilio's APIs\n\n[working-with-twilios-apis page anchor][106]\nPositive FeedbackNegative Feedback\n\n\n\n### Authenticate with HTTP\n\n[authenticate-with-http page anchor][107]\nPositive FeedbackNegative Feedback\n\nTwilio supports [HTTP Basic authentication(link takes you to an external\npage)][108]. This allows you to protect the URLs on your web server so that only\nyou and Twilio can access them. In order to authenticate with HTTP, you may\nprovide a username and password with the following URL format:\n\nCopy code block\nhttps://username:password@api.twilio.com/2010-04-01/your_desired_path\n\nFor HTTP Basic authentication, you will use your Twilio account SID as your\nusername and your auth token as your password:\n\nCopy code block\n1\ncurl -G https://api.twilio.com/2010-04-01/Accounts \\\n2\n  -u '<YOUR_ACCOUNT_SID>:<YOUR_AUTH_TOKEN>'\n\nYou can find both your account SID and auth token in the [Twilio Console(link\ntakes you to an external page)][109] after [signing up for a free Twilio trial\naccount(link takes you to an external page)][110].\n\n[Reveal Your Auth Token.]Expand image\n\nIf you want to use [API keys][111] to authenticate instead of your Twilio\naccount SID and auth token, then use the API key as your username and your API\nkey's Secret as your password:\n\nCopy code block\n1\ncurl -G https://api.twilio.com/2010-04-01/Accounts \\\n2\n  -u '<YOUR_API_KEY>:<YOUR_API_KEY_SECRET>'\n\nThe API key type has to be created as `Main` for the above command to access\nyour accounts. Keys of type `Standard` can only be used on commands where you\nalso provide the Account SID as part of the API. For example:\n\nCopy code block\n1\ncurl -X GET https://api.twilio.com/2010-04-01/Accounts/\\\n2\n  '<YOUR_ACCOUNT_SID>/Applications.json' \\\n3\n  -u $'<YOUR_API_KEY>:<YOUR_API_KEY_SECRET>'\n\nTwilio will authenticate to your web server using the provided username and\npassword and will remain logged in for the duration of the action.\n\nYou can learn more about how Twilio handles authentication in our [security\ndocumentation][112].\n\n\n### Expected Content Type for API Requests\n\n[expected-content-type-for-api-requests page anchor][113]\nPositive FeedbackNegative Feedback\n\nTwilio's APIs expect the content type of API requests to be either\n`application/x-www-form-urlencoded` or `multipart/form-data`. It is important to\nnote that although Twilio returns responses in JSON format, the API requests\nthemselves should be formatted as either www-urlencoded or multiparty form data.\n\nPlease ensure that your API requests are formatted correctly using the\nappropriate content type to ensure successful communication with the Twilio\nAPIs. Using the wrong content type may result in unexpected behavior or errors.\n\n\n### Authenticate using the Twilio SDKs\n\n[authenticate-using-the-twilio-sdks page anchor][114]\nPositive FeedbackNegative Feedback\n\nAt this time, Twilio offers officially supported server-side libraries in the\nfollowing languages:\n\n* [C#(link takes you to an external page)][115]\n* [Java(link takes you to an external page)][116]\n* [Node.js(link takes you to an external page)][117]\n* [PHP(link takes you to an external page)][118]\n* [Python(link takes you to an external page)][119]\n* [Ruby(link takes you to an external page)][120]\n* [Go(link takes you to an external page)][121]\n\nAll of these helper libraries come with a `Utilities` class that facilitates\nrequest validation by passing your Account SID and Auth Token (found in the\n[Console(link takes you to an external page)][122]) to the library.\n\n(error)\n\n## Danger\n\nYou should always use environment variables to keep your Account SID and Auth\nToken secret before sharing any code or deploying to production. Check out [our\nguidance for setting environment variables(link takes you to an external\npage)][123] to learn more.\n\n\n\n### How Twilio's APIs use webhooks\n\n[how-twilios-apis-use-webhooks page anchor][124]\nPositive FeedbackNegative Feedback\n\n[Webhooks][125] are user-defined HTTP callbacks triggered by an event in a web\napplication. Twilio uses webhooks to let your application know when events\nhappen, like getting an incoming call or receiving an SMS message. Webhooks are\ntriggered asynchronously.\n\nWhen the webhook event occurs, Twilio makes an HTTP request (usually [`POST` or\n`GET`(link takes you to an external page)][126]) to the URL you have configured\nfor your webhook. Twilio's request to your application includes details of the\nevent like the body of an incoming message or the incoming phone number. Your\napplication can then perform whatever logic is necessary, then reply to Twilio\nwith a response containing the instructions you'd like Twilio to perform.\n\nTo handle a webhook when you use Twilio, you need to build a small web\napplication that can accept HTTP requests. Check out our [officially supported\nhelper libraries][127] to get up and running quickly.\n\n\n## Explore the APIs\n\n[explore-the-apis page anchor][128]\nPositive FeedbackNegative Feedback\n\n\n\n### Send an SMS with Twilio's API\n\n[send-an-sms-with-twilios-api page anchor][129]\nPositive FeedbackNegative Feedback\n\nTwilio's Programmable SMS API helps you send and receive [SMS messages][130].\nYou'll need to sign up for a [free Twilio account(link takes you to an external\npage)][131] to get started.\n\n\nSend a simple SMS using the Programmable SMS API[Link to code sample: Send a\nsimple SMS using the Programmable SMS API][132]\nNode.jsPythonC#JavaGoPHPRubytwilio-clicurl\nCopy code block\n1\n// Download the helper library from https://www.twilio.com/docs/node/install\n2\nconst twilio = require(\"twilio\"); // Or, for ESM: import twilio from \"twilio\";\n3\n\n4\n// Find your Account SID and Auth Token at twilio.com/console\n5\n// and set the environment variables. See http://twil.io/secure\n6\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\n7\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\n8\nconst client = twilio(accountSid, authToken);\n9\n\n10\nasync function createMessage() {\n11\n  const message = await client.messages.create({\n12\n    body: \"This is the ship that made the Kessel Run in fourteen parsecs?\",\n13\n    from: \"+15017122661\",\n14\n    to: \"+15558675310\",\n15\n  });\n16\n\n17\n  console.log(message.body);\n18\n}\n19\n\n20\ncreateMessage();\n\n### Output\n\nCopy output\n1\n{\n2\n  \"account_sid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n3\n  \"api_version\": \"2010-04-01\",\n4\n  \"body\": \"This is the ship that made the Kessel Run in fourteen parsecs?\",\n5\n  \"date_created\": \"Thu, 24 Aug 2023 05:01:45 +0000\",\n6\n  \"date_sent\": \"Thu, 24 Aug 2023 05:01:45 +0000\",\n7\n  \"date_updated\": \"Thu, 24 Aug 2023 05:01:45 +0000\",\n8\n  \"direction\": \"outbound-api\",\n9\n  \"error_code\": null,\n10\n  \"error_message\": null,\n11\n  \"from\": \"+15017122661\",\n12\n  \"num_media\": \"0\",\n13\n  \"num_segments\": \"1\",\n14\n  \"price\": null,\n15\n  \"price_unit\": null,\n16\n  \"messaging_service_sid\": \"MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n17\n  \"sid\": \"SMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n18\n  \"status\": \"queued\",\n19\n  \"subresource_uris\": {\n20\n    \"media\": \"/2010-04-01/Accounts/ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Messages/S\nMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Media.json\"\n21\n  },\n22\n  \"tags\": {\n23\n    \"campaign_name\": \"Spring Sale 2022\",\n24\n    \"message_type\": \"cart_abandoned\"\n25\n  },\n26\n  \"to\": \"+15558675310\",\n27\n  \"uri\": \"/2010-04-01/Accounts/ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Messages/SMaaa\naaaaaaaaaaaaaaaaaaaaaaaaaaaaa.json\"\n28\n}\n\nFor a complete step-by-step guide to sending and receiving messages with Twilio,\ncheck out our Quickstarts for Programmable SMS. Just select your server-side\nprogramming language of choice and dive in:\n\n* [C#/.NET][133]\n* [Java][134]\n* [Node.js][135]\n* [PHP][136]\n* [Python][137]\n* [Ruby][138]\n* [Go][139]\n\n\n\n### Explore Twilio's other APIs\n\n[explore-twilios-other-apis page anchor][140]\nPositive FeedbackNegative Feedback\n\nTwilio has a number of REST APIs that can help you build powerful communications\ninto your applications, including [Programmable Voice][141], [Programmable\nVideo][142], [Super SIM][143], and [Verify][144] for two-factor authentication\nand passwordless login.\n\nWe can't wait to see what you build!\n\n## Need some help?\n\nWe all do sometimes; code is hard. Get help now from our [support team(link\ntakes you to an external page)][145], or lean on the wisdom of the crowd by\nvisiting Twilio's [Stack Overflow Collective(link takes you to an external\npage)][146] or browsing the [Twilio tag(link takes you to an external\npage)][147] on Stack Overflow.\n\n[Terms of service][148]\n[Privacy Policy][149]\n\nCopyright © 2024 Twilio Inc.\n\n[Twilio][150]\n\n\n\n\nCopy code block\n\nCopy code block\n\nCopy code block\n\nCopy code block\n\nSelect sample\n\nCopy code block\n\nCopy output\n\n\n\n\n[1]: #twilio-docs-content-area\n[2]: #twilio-docs-sidebar-nav\n[3]: #twilio-docs-topbar\n[4]: /docs\n[5]: /docs/usage\n[6]: /docs/messaging/guides/how-to-use-your-free-trial-account\n[7]: /docs/messaging/guides/how-to-work-with-your-twilio-free-trial-account-us-o\nnly\n[8]: /docs/usage/requests-to-twilio\n[9]: /docs/usage/twilios-response\n[10]: /docs/usage/mutation-and-conflict-resolution\n[11]: /docs/usage/rest-api-best-practices\n[12]: /docs/usage/tutorials/a-beginners-guide-to-the-command-line\n[13]: /docs/usage/tutorials/how-to-set-up-your-csharp-and-asp-net-mvc-developmen\nt-environment\n[14]: /docs/usage/tutorials/how-to-set-up-your-java-development-environment\n[15]: /docs/usage/tutorials/how-to-set-up-your-node-js-and-express-development-e\nnvironment\n[16]: /docs/usage/tutorials/how-to-set-up-your-php-development-environment\n[17]: /docs/usage/tutorials/how-to-set-up-your-python-and-flask-development-envi\nronment\n[18]: /docs/usage/tutorials/how-to-set-up-your-ruby-and-sinatra-development-envi\nronment\n[19]: /docs/usage/tutorials/how-to-set-up-your-go-and-gin-development-environmen\nt\n[20]: /docs/usage/api\n[21]: /docs/usage/tutorials/how-to-make-http-basic-request-twilio-powershell\n[22]: /docs/iam/api/account\n[23]: /docs/iam/api/subaccounts\n[24]: /docs/usage/api/address\n[25]: /docs/usage/api/applications\n[26]: /docs/usage/bulkexport\n[27]: /docs/usage/bulkexport/exportconfiguration\n[28]: /docs/usage/bulkexport/export-custom-job\n[29]: /docs/usage/bulkexport/job\n[30]: /docs/usage/bulkexport/day\n[31]: /docs/usage/api/keys\n[32]: /docs/usage/api/usage-record\n[33]: /docs/usage/api/usage-trigger\n[34]: /docs/usage/monitor-alert\n[35]: /docs/usage/monitor-events\n[36]: /docs/api\n[37]: /docs/usage/webhooks\n[38]: /docs/usage/webhooks/webhooks-overview\n[39]: /docs/usage/webhooks/getting-started-twilio-webhooks\n[40]: /docs/usage/webhooks/webhooks-connection-overrides\n[41]: /docs/usage/webhooks/webhooks-faq\n[42]: /docs/usage/webhooks/webhooks-security\n[43]: /docs/usage/anti-fraud-developer-guide\n[44]: /docs/usage/global-safe-list\n[45]: /docs/usage/troubleshooting/debugging-your-application\n[46]: /docs/usage/troubleshooting/debugging-event-webhooks\n[47]: /docs/usage/troubleshooting/alarms\n[48]: /docs/usage/troubleshooting/data-types\n[49]: /docs/usage/security/availability-reliability\n[50]: /docs/usage/security\n[51]: /docs/usage/security/iso-iec-certification\n[52]: /docs/usage/security/reporting-vulnerabilities\n[53]: /docs/usage/secure-credentials\n[54]: /docs/usage/tutorials/how-to-secure-your-csharp-aspnet-app-by-validating-i\nncoming-twilio-requests\n[55]: /docs/usage/tutorials/how-to-secure-your-csharp-aspnet-core-app-by-validat\ning-incoming-twilio-requests\n[56]: /docs/usage/tutorials/how-to-secure-your-csharp-aspnet-web-api-app-by-vali\ndating-incoming-twilio-requests\n[57]: /docs/usage/tutorials/how-to-secure-your-servlet-app-by-validating-incomin\ng-twilio-requests\n[58]: /docs/usage/tutorials/how-to-secure-your-express-app-by-validating-incomin\ng-twilio-requests\n[59]: /docs/usage/tutorials/how-to-secure-your-lumen-app-by-validating-incoming-\ntwilio-requests\n[60]: /docs/usage/tutorials/how-to-secure-your-django-project-by-validating-inco\nming-twilio-requests\n[61]: /docs/usage/tutorials/how-to-secure-your-flask-app-by-validating-incoming-\ntwilio-requests\n[62]: /blog/secure-your-sinatra-app-validating-incoming-twilio-requests\n[63]: /docs/usage/tutorials/how-to-secure-your-gin-project-by-validating-incomin\ng-twilio-requests\n[64]: /docs/messaging\n[65]: /docs/voice\n[66]: /docs/iot/wireless\n[67]: /docs/iot/supersim\n[68]: /docs/verify/api\n[69]: /docs\n[70]: /docs/messaging\n[71]: /docs/voice\n[72]: /docs/serverless\n[73]: /docs/flex\n[74]: /docs/studio\n[75]: /docs\n[76]: /docs/libraries\n[77]: https://help.twilio.com\n[78]: https://www.twilio.com/login\n[79]: https://www.twilio.com/try-twilio\n[80]: #what-is-a-rest-api-anyway\n[81]: #working-with-twilios-apis\n[82]: #authenticate-with-http\n[83]: #expected-content-type-for-api-requests\n[84]: #authenticate-using-the-twilio-sdks\n[85]: #how-twilios-apis-use-webhooks\n[86]: #explore-the-apis\n[87]: #send-an-sms-with-twilios-api\n[88]: #explore-twilios-other-apis\n[89]: #what-is-a-rest-api-anyway\n[90]: #working-with-twilios-apis\n[91]: #authenticate-with-http\n[92]: #expected-content-type-for-api-requests\n[93]: #authenticate-using-the-twilio-sdks\n[94]: #how-twilios-apis-use-webhooks\n[95]: #explore-the-apis\n[96]: #send-an-sms-with-twilios-api\n[97]: #explore-twilios-other-apis\n[98]: /docs/glossary/what-is-an-api\n[99]: /docs\n[100]: /docs/messaging/api\n[101]: /docs/voice/api\n[102]: #what-is-a-rest-api-anyway\n[103]: /docs/glossary/what-is-an-api\n[104]: http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm\n[105]: /docs/libraries\n[106]: #working-with-twilios-apis\n[107]: #authenticate-with-http\n[108]: https://en.wikipedia.org/wiki/Basic_access_authentication\n[109]: https://www.twilio.com/console\n[110]: https://www.twilio.com/try-twilio\n[111]: /docs/iam/api-keys/key-resource-v2010\n[112]: /docs/usage/security\n[113]: #expected-content-type-for-api-requests\n[114]: #authenticate-using-the-twilio-sdks\n[115]: https://github.com/twilio/twilio-csharp\n[116]: https://github.com/twilio/twilio-java\n[117]: https://github.com/twilio/twilio-node\n[118]: https://github.com/twilio/twilio-php\n[119]: https://github.com/twilio/twilio-python\n[120]: https://github.com/twilio/twilio-ruby\n[121]: https://github.com/twilio/twilio-go\n[122]: https://www.twilio.com/console\n[123]: https://www.twilio.com/blog/how-to-set-environment-variables.html\n[124]: #how-twilios-apis-use-webhooks\n[125]: /docs/glossary/what-is-a-webhook\n[126]: https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods\n[127]: /docs/libraries\n[128]: #explore-the-apis\n[129]: #send-an-sms-with-twilios-api\n[130]: /docs/glossary/what-is-an-sms-short-message-service\n[131]: https://www.twilio.com/try-twilio\n[132]: #code-send-a-simple-sms-using-the-programmable-sms-api\n[133]: /docs/messaging/quickstart/csharp-dotnet-framework\n[134]: /docs/messaging/quickstart/java\n[135]: /docs/messaging/quickstart/node\n[136]: /docs/messaging/quickstart/php\n[137]: /docs/messaging/quickstart/python\n[138]: /docs/messaging/quickstart/ruby\n[139]: /docs/messaging/quickstart/go\n[140]: #explore-twilios-other-apis\n[141]: /docs/voice\n[142]: /docs/video\n[143]: /docs/iot/supersim\n[144]: /docs/verify/api\n[145]: https://help.twilio.com\n[146]: https://stackoverflow.com/collectives/twilio\n[147]: https://stackoverflow.com/questions/tagged/twilio\n[148]: /en-us/legal/tos\n[149]: /en-us/legal/privacy\n[150]: https://twilio.com/en-us\n","response":"# How to Use Our REST APIs\n\nTwilio's APIs (Application Programming Interfaces) power its platform for communications. Behind these APIs is a software layer that connects and optimizes communications networks, allowing users to call and message anyone globally.\n\n## Info\n\nTwilio offers a variety of APIs, including SMS, Voice, and Wireless. You can find Twilio's API reference documentation throughout our product documentation. You can [browse the various APIs here](https://www.twilio.com/docs), or jump straight to the API reference for [Programmable SMS](https://www.twilio.com/docs/messaging/api) or [Programmable Voice](https://www.twilio.com/docs/voice/api).\n\n## What is a REST API, anyway?\n\nAn API is a set of rules that lets programs communicate, exposing data and functionality across the internet in a consistent format. REST stands for \"Representational State Transfer,\" describing how distributed systems expose a consistent interface. REST APIs are typically accessed via HTTP at predefined URLs, representing resources that can return data in formats such as JSON or XML.\n\n**Common HTTP Methods:**\n- **GET:** Retrieve data\n- **POST:** Create a new resource\n- **PUT:** Update an existing resource\n- **DELETE:** Remove a resource\n\nTwilio offers several separate REST APIs for tasks like sending text messages, making calls, and managing account data.\n\n## Working with Twilio's APIs\n\n### Authenticate with HTTP\n\nTwilio supports HTTP Basic authentication. To authenticate, use the following URL format:\n\n```\nhttps://username:password@api.twilio.com/2010-04-01/your_desired_path\n```\n\nFor Basic authentication, use your Twilio account SID as the username and your auth token as the password:\n\n```bash\ncurl -G https://api.twilio.com/2010-04-01/Accounts -u '<YOUR_ACCOUNT_SID>:<YOUR_AUTH_TOKEN>'\n```\n\nYou can find your account SID and auth token in the [Twilio Console](https://www.twilio.com/console).\n\nYou can also use API keys for authentication:\n\n```bash\ncurl -G https://api.twilio.com/2010-04-01/Accounts -u '<YOUR_API_KEY>:<YOUR_API_KEY_SECRET>'\n```\n\n### Expected Content Type for API Requests\n\nTwilio's APIs expect the content type of requests to be either `application/x-www-form-urlencoded` or `multipart/form-data`. Responses are typically in JSON format, but requests should use the specified content types to ensure successful communication.\n\n### Authenticate using the Twilio SDKs\n\nTwilio offers officially supported server-side libraries for several programming languages:\n- [C#](https://github.com/twilio/twilio-csharp)\n- [Java](https://github.com/twilio/twilio-java)\n- [Node.js](https://github.com/twilio/twilio-node)\n- [PHP](https://github.com/twilio/twilio-php)\n- [Python](https://github.com/twilio/twilio-python)\n- [Ruby](https://github.com/twilio/twilio-ruby)\n- [Go](https://github.com/twilio/twilio-go)\n\nAlways use environment variables to keep your Account SID and Auth Token secret.\n\n### How Twilio's APIs use webhooks\n\nWebhooks are user-defined HTTP callbacks triggered by specific events. Twilio uses webhooks to notify your application of events, such as incoming calls or SMS messages. When a webhook event occurs, Twilio sends an HTTP request to your configured URL, providing details of the event.\n\nTo handle a webhook, build a web application that can accept HTTP requests. Check our [helper libraries](https://www.twilio.com/docs/libraries) for quick setup.\n\n## Explore the APIs\n\n### Send an SMS with Twilio's API\n\nUse Twilio's Programmable SMS API to send and receive SMS messages. Sign up for a [free Twilio account](https://www.twilio.com/try-twilio) to get started.\n\n**Sample Code to Send SMS (Node.js)**\n\n```javascript\nconst twilio = require(\"twilio\");\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\nconst client = twilio(accountSid, authToken);\n\nasync function createMessage() {\n  const message = await client.messages.create({\n    body: \"This is a test message\",\n    from: \"+15017122661\",\n    to: \"+15558675310\",\n  });\n\n  console.log(message.body);\n}\n\ncreateMessage();\n```\n\nFor a comprehensive guide on sending and receiving messages, check our Quickstarts for Programmable SMS in your preferred programming language:\n- [C#/.NET](https://www.twilio.com/docs/messaging/quickstart/csharp-dotnet-framework)\n- [Java](https://www.twilio.com/docs/messaging/quickstart/java)\n- [Node.js](https://www.twilio.com/docs/messaging/quickstart/node)\n- [PHP](https://www.twilio.com/docs/messaging/quickstart/php)\n- [Python](https://www.twilio.com/docs/messaging/quickstart/python)\n- [Ruby](https://www.twilio.com/docs/messaging/quickstart/ruby)\n- [Go](https://www.twilio.com/docs/messaging/quickstart/go)\n\n### Explore Twilio's other APIs\n\nTwilio offers various REST APIs to enhance your applications, including [Programmable Voice](https://www.twilio.com/docs/voice), [Programmable Video](https://www.twilio.com/docs/video), [Super SIM](https://www.twilio.com/docs/iot/supersim), and [Verify](https://www.twilio.com/docs/verify/api).\n\n## Need some help?\n\nIf you encounter issues, get assistance from our [support team](https://help.twilio.com) or visit [Stack Overflow](https://stackoverflow.com/questions/tagged/twilio) for community support.\n\n---\n\n**Copyright © 2024 Twilio Inc.**  \n[Terms of Service](https://www.twilio.com/en-us/legal/tos) | [Privacy Policy](https://www.twilio.com/en-us/legal/privacy)  \n[Twilio](https://twilio.com/en-us)  "}
{"timestamp":"2024-10-28 15:43:02.291","prompt":"\n[Skip to content][1][Skip to navigation][2][Skip to topbar][3]\n\n[Go to the Twilio Docs home page][4]\nTwilio Docs\n\nTwilio Essentials DocumentationTwilio essentials\n[General usage][5][Global infrastructure][6][Helper libraries][7][IAM][8][Setup\nTwilio phone number][9][Pricing][10][Try Twilio][11]\nTwilio Developer ToolsDeveloper tools\n[Code Exchange][12][Functions][13][Marketplace][14][Open\nAPI][15][Serverless][16][Studio][17][TwiML Bins][18][Twilio CLI][19]\nTwilio Developer ResourcesDeveloper resources\n[API status][20][Changelog][21][Error codes][22][Glossary][23]\nProducts\n[Content Template Builder][24][Conversations][25][Elastic SIP\nTrunking][26][Event\nStreams][27][Flex][28][Interconnect][29][Lookup][30][Marketing\nCampaigns][31][Network Traversal Service][32][Notify][33][Programmable\nMessaging][34][Proxy][35][Segment][36][Salesforce][37][SendGrid\nEmail][38][Studio][39][Sync][40][TaskRouter][41][Trust Hub][42][Twilio\nEngage][43][Unified Profiles][44][Verify][45][Voice][46][Voice\nIntelligence][47][WhatsApp][48]\n\n[Twilio Logo\nTwilio Docs\n][49]\nSearchK\nSearchK\n\n* [Messaging][50]\n* [Voice][51]\n* [Serverless][52]\n* [Flex][53]\n* [Studio][54]\n* [All docs...][55]\n\n* [SDKs][56]\n* [\n  HelpHelp\n  ][57]\nSearchK\n\n* [Log in][58]\n* [Sign up][59]\n\n\n# Twilio Docs\n\n## Build better and engage your customers across all channels with our API\n## reference documentation, quickstarts, SDKs and multi-language code samples.\n\n[Discover our featured content][60]\n[Get started with Twilio essentials][61]\n[Start building with our developer toolkit][62]\n\n## Explore Documentation by...\n\nProduct category\nUse case\n\n[Communications][63][Customer Data][64][Engagement applications][65]\n\n\n### Communications\n\n\nTwilio SendGrid Documentation\n[SendGrid Email][66]\n\nReach customers with Twilio's Email API and scalable marketing tools for all the\nemail that you send.\n\n\nTwilio Messaging Documentation\n[Messaging][67]\n\nSend and receive SMS/MMS and WhatsApp messages using the programming languages\nyou already know and love.\n\n\nTwilio Voice Documentation\n[Voice][68]\n\nBuild unique phone call experiences with one API to make, receive, control, and\nmonitor calls around the globe.\n\n\nTwilio Elastic SIP Trunking Documentation\n[Elastic SIP Trunking][69]\n\nInstantly achieve global connectivity for VoIP infrastructure using our SIP\ntrunking service.\n\n\nTwilio Phone Numbers Documentation\n[Phone Numbers][70]\n\nPurchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric\nSender IDs to deliver your communications.\n\n\nTwilio Event Streams Documentation\n[Event Streams][71]\n\nConfigure a centralized stream of Twilio event data that you can send to any\nteam.\n\n\nTwilio TrustHub Documentation\n[Trust Hub][72]\n\nCreate a Twilio identity and unlock services such as SHAKEN/STIR, A2P Messaging,\nand Branded Calls.\n\n\nTwilio WhatsApp Business Platform Documentation\n[WhatsApp][73]\n\nReach users on the world's most popular messaging app through one streamlined\nAPI, officially supported by WhatsApp.\n\n\nTwilio Verify Documentation\n[Verify][74]\n\nQuickly verify phone number ownership via SMS or Voice, reduce fraudulent\naccounts, and speed up account onboarding.\n\n\nTwilio Lookup Documentation\n[Lookup][75]\n\nDetermine local-friendly number formats, phone types, fraud risk, and more,\nthrough mobile-based authoritative signals.\n\n\nTwilio Conversations Documentation\n[Conversations][76]\n\nBuild conversational messaging across Chat, SMS, WhatsApp, and more with a\nsingle API.\n\n\n### Customer data\n\n\nTwilio Segment Documentation\n[Segment][77]\n\nCollect, responsibly manage, and integrate your customer data with hundreds of\ntools.\n\n\nTwilio Voice Intelligence Documentation\n[Voice Intelligence][78]\n\nIdentify important signals from unstructured dataCall transcription and\nAI-powered language operators.\n\n\n### Engagement applications\n\n\nDescription of icon\n[Twilio Engage][79]\n\nPersonalize omnichannel campaigns on a unified, data-first platform.\n\n\nTwilio Flex Documentation\n[Twilio Flex][80]\n\nBuild digital engagement for your contact center, sales conversations, and\npersonalized support.\n\n\nDescription of icon\n[Marketing Campaigns][81]\n\nDesign and send engaging emails at scale with our suite of email marketing\ntools.\n\n\n## Featured content\n\nDive into our handpicked selection of developer-focused content.\n\n[\nOne-time password (OTP)\n\n### Create your first verification\n\nQuickly verify users via SMS, Passkeys, Silent Network Auth, Voice, WhatsApp,\nTOTP, Push, Silent Device Approval, and Email.\n\n][82]\n[\nFraud prevention\n\n### Format and validate phone numbers\n\nFormat and validate phone numbers to increase deliverability. Add on data\npackages to get even more in-depth carrier and caller information.\n\n][83]\n\n\n## Twilio Essentials\n\n[General Usage][84]\n\nLearn how to interact with the REST API for account management, development\ntesting, and fraud protection.\n\n[IAM][85]\n\nManage your projects, securely authenticate REST API requests, and learn best\npractices for accessing Twilio's resources.\n\n[Global Infrastructure][86]\n\nControl where your application's Twilio-related data is routed, processed, and\nstored.\n\n[Helper Libraries][87]\n\nFamiliarize yourself with Twilio's server-side, front-end, and mobile SDKs,\nOpenAPI specifications and Postman collections.\n\n[Phone numbers][88]\n\nPurchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric\nSender IDs to deliver your communications.\n\n[Regulatory & Compliance][89]\n\nCompiled resources to help ensure you're communicating effectively and\ncompliantly around the world.\n\n\n## Developer Toolkit\n\nExplore essential tools, resources, and community links, all designed to help\nelevate your project and keep you informed.\n\n## Tools\n\n[Code Exchange][90]\nGet started and build faster with usable code samples for common Twilio use\ncases.\n[Functions][91]\nA serverless environment to quickly create production-grade, event-driven Twilio\napplications.\n[Marketplace][92]\nSeamlessly integrate third-party's partner technology into your Twilio\napplications.\n[OpenAPI][93]\nIntegrate our API with community tools for mocking, testing, generating\nlibraries, Postman integrations, and more.\n[Serverless][94]\nQuickly build and deploy communication apps with no servers to spin up or\ninfrastructure to maintain.\n[Studio][95]\nA drag-and-drop builder to create communication workflows.\n[TwiML Bins][96]\nProvide Twilio-hosted instructions to your Twilio applications.\n[Twilio CLI][97]\nManage your Twilio resources from your terminal or command prompt.\n\n## Resources\n\n[API status][98]\nCheck real time monitoring of APIs and all services.\n[Changelog][99]\nSee updates and additions to Twilio products.\n[Error codes][100]\nFull list of all possible Twilio REST API error codes.\n[Glossary][101]\nUnderstand our key terms and concepts.\n\n## Community\n\n[Blog][102]\nRead tutorials, community projects and product updates.\n[Champions][103]\nBecome a Twilio community champion.\n[Developer Events][104]\nJoin upcoming group events.\n[Stack Overflow][105]\nAsk the Twilio community for help.\n\n## Twilio is the trusted platform for data-driven customer engagement across any\n## channel.\n\n[Twilio logo][Twilio Segment logo][Twilio Sendgrid logo]\n\n## Need some help?\n\nWe all do sometimes; code is hard. Get help now from our [support team(link\ntakes you to an external page)][106], or lean on the wisdom of the crowd by\nvisiting Twilio's [Stack Overflow Collective(link takes you to an external\npage)][107] or browsing the [Twilio tag(link takes you to an external\npage)][108] on Stack Overflow.\n\n[Terms of service][109]\n[Privacy Policy][110]\n\nCopyright © 2024 Twilio Inc.\n\n[Twilio][111]\n\n\n\n\n\n\n[1]: #twilio-docs-content-area\n[2]: #twilio-docs-sidebar-nav\n[3]: #twilio-docs-topbar\n[4]: /docs\n[5]: /docs/usage\n[6]: /docs/global-infrastructure\n[7]: /docs/libraries\n[8]: /docs/iam\n[9]: /docs/phone-numbers\n[10]: https://www.twilio.com/en-us/pricing\n[11]: https://www.twilio.com/try-twilio\n[12]: https://www.twilio.com/code-exchange\n[13]: /docs/serverless/functions-assets\n[14]: /docs/marketplace\n[15]: /docs/openapi\n[16]: /docs/serverless\n[17]: /docs/studio\n[18]: /docs/serverless/twiml-bins\n[19]: /docs/twilio-cli\n[20]: https://status.twilio.com/api\n[21]: https://www.twilio.com/en-us/changelog\n[22]: /docs/api/errors\n[23]: /docs/glossary\n[24]: /docs/content\n[25]: /docs/conversations\n[26]: /docs/sip-trunking\n[27]: /docs/events\n[28]: /docs/flex\n[29]: /docs/interconnect\n[30]: /docs/lookup\n[31]: /docs/sendgrid/ui/sending-email/how-to-send-email-with-marketing-campaigns\n[32]: /docs/stun-turn\n[33]: /docs/notify\n[34]: /docs/messaging\n[35]: /docs/proxy\n[36]: https://segment.com/docs\n[37]: /docs/salesforce\n[38]: /docs/sendgrid\n[39]: /docs/studio\n[40]: /docs/sync\n[41]: /docs/taskrouter\n[42]: /docs/trust-hub\n[43]: https://segment.com/docs/engage\n[44]: /docs/unified-profiles\n[45]: /docs/verify\n[46]: /docs/voice\n[47]: /docs/voice/intelligence\n[48]: /docs/whatsapp\n[49]: /docs\n[50]: /docs/messaging\n[51]: /docs/voice\n[52]: /docs/serverless\n[53]: /docs/flex\n[54]: /docs/studio\n[55]: /docs\n[56]: /docs/libraries\n[57]: https://help.twilio.com\n[58]: https://www.twilio.com/login\n[59]: https://www.twilio.com/try-twilio\n[60]: /docs#featured-content\n[61]: /docs#twilio-essentials\n[62]: /docs#developer-toolkit\n[63]: #communications\n[64]: #customer-data\n[65]: #engagement-applications\n[66]: /docs/sendgrid\n[67]: /docs/messaging\n[68]: /docs/voice\n[69]: /docs/sip-trunking\n[70]: /docs/phone-numbers\n[71]: /docs/events\n[72]: /docs/trust-hub\n[73]: /docs/whatsapp\n[74]: /docs/verify\n[75]: /docs/lookup\n[76]: /docs/conversations\n[77]: https://segment.com/docs\n[78]: /docs/voice/intelligence\n[79]: https://segment.com/docs/engage\n[80]: /docs/flex\n[81]: /docs/sendgrid/ui/sending-email/how-to-send-email-with-marketing-campaigns\n[82]: /docs/verify/quickstarts\n[83]: /docs/lookup/quickstart\n[84]: /docs/usage\n[85]: /docs/iam\n[86]: /docs/global-infrastructure\n[87]: /docs/libraries\n[88]: /docs/phone-numbers\n[89]: https://www.twilio.com/en-us/guidelines\n[90]: https://www.twilio.com/code-exchange\n[91]: /docs/serverless/functions-assets\n[92]: /docs/marketplace\n[93]: /docs/openapi\n[94]: /docs/serverless\n[95]: /docs/studio\n[96]: /docs/serverless/twiml-bins\n[97]: /docs/twilio-cli\n[98]: https://status.twilio.com/\n[99]: https://www.twilio.com/en-us/changelog\n[100]: /docs/api/errors\n[101]: /docs/glossary\n[102]: https://www.twilio.com/en-us/blog\n[103]: https://www.twilio.com/en-us/champions\n[104]: https://www.twilio.com/en-us/events\n[105]: https://stackoverflow.com/collectives/twilio\n[106]: https://help.twilio.com\n[107]: https://stackoverflow.com/collectives/twilio\n[108]: https://stackoverflow.com/questions/tagged/twilio\n[109]: /en-us/legal/tos\n[110]: /en-us/legal/privacy\n[111]: https://twilio.com/en-us\n","response":"# Twilio Docs\n\n## Build better and engage your customers across all channels with our API reference documentation, quickstarts, SDKs and multi-language code samples.\n\n- [Discover our featured content](#)\n- [Get started with Twilio essentials](#)\n- [Start building with our developer toolkit](#)\n\n## Explore Documentation by...\n\n**Product category**\n- [Communications](#)\n- [Customer Data](#)\n- [Engagement applications](#)\n\n### Communications\n\n- **[Twilio SendGrid Documentation](https://www.twilio.com/docs/sendgrid)**: Reach customers with Twilio's Email API and scalable marketing tools for all the email that you send.\n- **[Twilio Messaging Documentation](https://www.twilio.com/docs/messaging)**: Send and receive SMS/MMS and WhatsApp messages using the programming languages you already know and love.\n- **[Twilio Voice Documentation](https://www.twilio.com/docs/voice)**: Build unique phone call experiences with one API to make, receive, control, and monitor calls around the globe.\n- **[Twilio Elastic SIP Trunking Documentation](https://www.twilio.com/docs/sip-trunking)**: Instantly achieve global connectivity for VoIP infrastructure using our SIP trunking service.\n- **[Twilio Phone Numbers Documentation](https://www.twilio.com/docs/phone-numbers)**: Purchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric Sender IDs to deliver your communications.\n- **[Twilio Event Streams Documentation](https://www.twilio.com/docs/events)**: Configure a centralized stream of Twilio event data that you can send to any team.\n- **[Twilio TrustHub Documentation](https://www.twilio.com/docs/trust-hub)**: Create a Twilio identity and unlock services such as SHAKEN/STIR, A2P Messaging, and Branded Calls.\n- **[Twilio WhatsApp Business Platform Documentation](https://www.twilio.com/docs/whatsapp)**: Reach users on the world's most popular messaging app through one streamlined API, officially supported by WhatsApp.\n- **[Twilio Verify Documentation](https://www.twilio.com/docs/verify)**: Quickly verify phone number ownership via SMS or Voice, reduce fraudulent accounts, and speed up account onboarding.\n- **[Twilio Lookup Documentation](https://www.twilio.com/docs/lookup)**: Determine local-friendly number formats, phone types, fraud risk, and more, through mobile-based authoritative signals.\n- **[Twilio Conversations Documentation](https://www.twilio.com/docs/conversations)**: Build conversational messaging across Chat, SMS, WhatsApp, and more with a single API.\n\n### Customer Data\n\n- **[Twilio Segment Documentation](https://segment.com/docs)**: Collect, responsibly manage, and integrate your customer data with hundreds of tools.\n- **[Twilio Voice Intelligence Documentation](https://www.twilio.com/docs/voice/intelligence)**: Identify important signals from unstructured data, call transcription, and AI-powered language operators.\n\n### Engagement Applications\n\n- **[Twilio Engage](https://segment.com/docs/engage)**: Personalize omnichannel campaigns on a unified, data-first platform.\n- **[Twilio Flex Documentation](https://www.twilio.com/docs/flex)**: Build digital engagement for your contact center, sales conversations, and personalized support.\n- **[Marketing Campaigns](https://www.twilio.com/docs/sendgrid/ui/sending-email/how-to-send-email-with-marketing-campaigns)**: Design and send engaging emails at scale with our suite of email marketing tools.\n\n## Featured Content\n\nDive into our handpicked selection of developer-focused content.\n\n- **[One-time password (OTP)](https://www.twilio.com/docs/verify/quickstarts)**: Create your first verification via SMS, Passkeys, Silent Network Auth, Voice, WhatsApp, TOTP, Push, Silent Device Approval, and Email.\n- **[Fraud prevention](https://www.twilio.com/docs/lookup/quickstart)**: Format and validate phone numbers to increase deliverability. Add on data packages to get even more in-depth carrier and caller information.\n\n## Twilio Essentials\n\n- **[General Usage](https://www.twilio.com/docs/usage)**: Learn how to interact with the REST API for account management, development testing, and fraud protection.\n- **[IAM](https://www.twilio.com/docs/iam)**: Manage your projects, securely authenticate REST API requests, and learn best practices for accessing Twilio's resources.\n- **[Global Infrastructure](https://www.twilio.com/docs/global-infrastructure)**: Control where your application's Twilio-related data is routed, processed, and stored.\n- **[Helper Libraries](https://www.twilio.com/docs/libraries)**: Familiarize yourself with Twilio's server-side, front-end, and mobile SDKs, OpenAPI specifications, and Postman collections.\n- **[Phone Numbers](https://www.twilio.com/docs/phone-numbers)**: Purchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric Sender IDs to deliver your communications.\n- **[Regulatory & Compliance](https://www.twilio.com/en-us/guidelines)**: Compiled resources to help ensure you're communicating effectively and compliantly around the world.\n\n## Developer Toolkit\n\nExplore essential tools, resources, and community links, all designed to help elevate your project and keep you informed.\n\n### Tools\n\n- **[Code Exchange](https://www.twilio.com/code-exchange)**: Get started and build faster with usable code samples for common Twilio use cases.\n- **[Functions](https://www.twilio.com/docs/serverless/functions-assets)**: A serverless environment to quickly create production-grade, event-driven Twilio applications.\n- **[Marketplace](https://www.twilio.com/docs/marketplace)**: Seamlessly integrate third-party's partner technology into your Twilio applications.\n- **[OpenAPI](https://www.twilio.com/docs/openapi)**: Integrate our API with community tools for mocking, testing, generating libraries, Postman integrations, and more.\n- **[Serverless](https://www.twilio.com/docs/serverless)**: Quickly build and deploy communication apps with no servers to spin up or infrastructure to maintain.\n- **[Studio](https://www.twilio.com/docs/studio)**: A drag-and-drop builder to create communication workflows.\n- **[TwiML Bins](https://www.twilio.com/docs/serverless/twiml-bins)**: Provide Twilio-hosted instructions to your Twilio applications.\n- **[Twilio CLI](https://www.twilio.com/docs/twilio-cli)**: Manage your Twilio resources from your terminal or command prompt.\n\n### Resources\n\n- **[API status](https://status.twilio.com/)**: Check real-time monitoring of APIs and all services.\n- **[Changelog](https://www.twilio.com/en-us/changelog)**: See updates and additions to Twilio products.\n- **[Error Codes](https://www.twilio.com/docs/api/errors)**: Full list of all possible Twilio REST API error codes.\n- **[Glossary](https://www.twilio.com/docs/glossary)**: Understand our key terms and concepts.\n\n## Community\n\n- **[Blog](https://www.twilio.com/en-us/blog)**: Read tutorials, community projects and product updates.\n- **[Champions](https://www.twilio.com/en-us/champions)**: Become a Twilio community champion.\n- **[Developer Events](https://www.twilio.com/en-us/events)**: Join upcoming group events.\n- **[Stack Overflow](https://stackoverflow.com/collectives/twilio)**: Ask the Twilio community for help.\n\n## Twilio is the trusted platform for data-driven customer engagement across any channel.\n\n## Need some help?\n\nWe all do sometimes; code is hard. Get help now from our [support team](https://help.twilio.com), or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio) or browsing the [Twilio tag](https://stackoverflow.com/questions/tagged/twilio) on Stack Overflow.\n\n**[Terms of service](https://www.twilio.com/en-us/legal/tos)** | **[Privacy Policy](https://www.twilio.com/en-us/legal/privacy)**\n\nCopyright © 2024 Twilio Inc.\n\n[Twilio](https://twilio.com/en-us)"}
{"timestamp":"2024-10-28 15:45:53.810","prompt":"twilio_rest_apis_guide","response":"twilio_rest_apis_guide"}
{"timestamp":"2024-10-28 15:46:19.689","prompt":"# How to Use Our REST APIs\n\nTwilio's APIs (Application Programming Interfaces) power its platform for communications. Behind these APIs is a software layer connecting and optimizing communications networks around the world to allow your users to call and message anyone, globally.\n\n## Info\n\nTwilio has a wide range of APIs, from SMS to Voice to Wireless. You can find Twilio's API reference documentation throughout our product documentation. You can [browse the various APIs here](https://www.twilio.com/docs/apis), or jump straight to the API reference for [Programmable SMS](https://www.twilio.com/docs/messaging/api) or [Programmable Voice](https://www.twilio.com/docs/voice/api).\n\n## What is a REST API, anyway?\n\nAn API (Application Programming Interface) is a set of rules that allows programs to communicate with each other, exposing data and functionality across the Internet in a consistent format.\n\nREST stands for \"Representational State Transfer\". This architectural pattern describes how distributed systems can expose a consistent interface. When people use the term \"REST API\", they typically refer to an API accessed using the HTTP protocol at predefined URLs.\n\n### Resources and Methods\nThese URLs represent various resources, which can be returned as JSON, HTML, audio files, or images. Resources often have methods that can be performed over HTTP, like `GET`, `POST`, `PUT`, and `DELETE`. Generally:\n- Use `POST` to create resources.\n- Use `PUT` to update resources.\n\nTwilio provides many separate REST APIs for sending text messages, making phone calls, managing accounts, and more. Each product is its own API but interacts similarly, whether directly over HTTP or through [Twilio's helper libraries](https://www.twilio.com/docs/libraries) available for various programming languages.\n\n## Working with Twilio's APIs\n\n### Authenticate with HTTP\n\nTwilio supports [HTTP Basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). This protects URLs on your server so that only you and Twilio can access them. \n\nTo authenticate:\n```\nhttps://username:password@api.twilio.com/2010-04-01/your_desired_path\n```\n\nFor HTTP Basic authentication, use your Twilio account SID as your username and your auth token as your password:\n```bash\ncurl -G https://api.twilio.com/2010-04-01/Accounts \\\n-u '<YOUR_ACCOUNT_SID>:<YOUR_AUTH_TOKEN>'\n```\n\nYou can find both your account SID and auth token in the [Twilio Console](https://www.twilio.com/console) after [signing up for a free trial](https://www.twilio.com/try-twilio).\n\nIf you want to use [API keys](https://www.twilio.com/docs/iam/api-keys/key-resource-v2010) instead, authenticate as follows:\n```bash\ncurl -G https://api.twilio.com/2010-04-01/Accounts \\\n-u '<YOUR_API_KEY>:<YOUR_API_KEY_SECRET>'\n```\n\n### Expected Content Type for API Requests\n\nTwilio's APIs expect the content type of API requests to be either `application/x-www-form-urlencoded` or `multipart/form-data`. While Twilio returns responses in JSON format, the API requests themselves should be formatted as mentioned.\n\n### Authenticate using the Twilio SDKs\n\nCurrently, Twilio offers officially supported server-side libraries in the following languages:\n- [C#](https://github.com/twilio/twilio-csharp)\n- [Java](https://github.com/twilio/twilio-java)\n- [Node.js](https://github.com/twilio/twilio-node)\n- [PHP](https://github.com/twilio/twilio-php)\n- [Python](https://github.com/twilio/twilio-python)\n- [Ruby](https://github.com/twilio/twilio-ruby)\n- [Go](https://github.com/twilio/twilio-go)\n\nThese libraries include a `Utilities` class for request validation, requiring your Account SID and Auth Token found in the [Console](https://www.twilio.com/console).\n\n> **Danger**: Always use environment variables to keep your Account SID and Auth Token secret before sharing any code or deploying to production. Check [our guidance](https://www.twilio.com/blog/how-to-set-environment-variables.html) for setting environment variables.\n\n### How Twilio's APIs use webhooks\n\n[Webhooks](https://www.twilio.com/docs/glossary/what-is-a-webhook) are user-defined HTTP callbacks triggered by events in a web application. Twilio uses webhooks to notify your application when events occur, such as incoming calls or SMS messages. Webhooks are triggered asynchronously.\n\nWhen the event occurs, Twilio makes an HTTP request (usually `POST` or `GET`) to your configured webhook URL. The request includes details like the body of an incoming message or the incoming phone number, allowing your application to process the event and respond with the necessary instructions.\n\nTo handle webhooks with Twilio, you need to build a small web application that can accept HTTP requests. Check our [helper libraries](https://www.twilio.com/docs/libraries) to get started quickly.\n\n## Explore the APIs\n\n### Send an SMS with Twilio's API\n\nTwilio's Programmable SMS API enables sending and receiving [SMS messages](https://www.twilio.com/docs/glossary/what-is-an-sms-short-message-service). Sign up for a [free Twilio account](https://www.twilio.com/try-twilio) to get started.\n\n#### Example: Send a simple SMS using the Programmable SMS API\n##### Node.js\n```javascript\n// Download the helper library from https://www.twilio.com/docs/node/install\nconst twilio = require(\"twilio\");\n\n// Set up your account SID and auth token\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\nconst client = twilio(accountSid, authToken);\n\nasync function createMessage() {\n    const message = await client.messages.create({\n        body: \"This is the ship that made the Kessel Run in fourteen parsecs?\",\n        from: \"+15017122661\",\n        to: \"+15558675310\",\n    });\n\n    console.log(message.body);\n}\n\ncreateMessage();\n```\n\n#### Example Output\n```json\n{\n    \"account_sid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"body\": \"This is the ship that made the Kessel Run in fourteen parsecs?\",\n    \"from\": \"+15017122661\",\n    \"to\": \"+15558675310\",\n    \"status\": \"queued\",\n    ...\n}\n```\n\nFor a complete step-by-step guide to sending and receiving messages with Twilio, check out our [Quickstarts for Programmable SMS](https://www.twilio.com/docs/messaging/quickstart).\n\n### Explore Twilio's other APIs\n\nTwilio offers various REST APIs to integrate powerful communications into your applications, including:\n- [Programmable Voice](https://www.twilio.com/docs/voice)\n- [Programmable Video](https://www.twilio.com/docs/video)\n- [Super SIM](https://www.twilio.com/docs/iot/supersim)\n- [Verify](https://www.twilio.com/docs/verify/api) for two-factor authentication\n\n## Need some help?\n\nIf you need assistance, reach out to our [support team](https://help.twilio.com), or leverage the community at Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio) or browse the [Twilio tag](https://stackoverflow.com/questions/tagged/twilio) on Stack Overflow.","response":"# How to Use Our REST APIs\n\nTwilio's APIs (Application Programming Interfaces) power its platform for communications. Behind these APIs is a software layer connecting and optimizing communications networks around the world to allow your users to call and message anyone, globally.\n\n## Info\n\nTwilio has a wide range of APIs, from SMS to Voice to Wireless. You can find Twilio's API reference documentation throughout our product documentation. You can [browse the various APIs here](https://www.twilio.com/docs/apis), or jump straight to the API reference for [Programmable SMS](https://www.twilio.com/docs/messaging/api) or [Programmable Voice](https://www.twilio.com/docs/voice/api).\n\n## What is a REST API, anyway?\n\nAn API (Application Programming Interface) is a set of rules that allows programs to communicate with each other, exposing data and functionality across the Internet in a consistent format.\n\nREST stands for \"Representational State Transfer\". This architectural pattern describes how distributed systems can expose a consistent interface. When people use the term \"REST API\", they typically refer to an API accessed using the HTTP protocol at predefined URLs.\n\n### Resources and Methods\nThese URLs represent various resources, which can be returned as JSON, HTML, audio files, or images. Resources often have methods that can be performed over HTTP, like `GET`, `POST`, `PUT`, and `DELETE`. Generally:\n- Use `POST` to create resources.\n- Use `PUT` to update resources.\n\nTwilio provides many separate REST APIs for sending text messages, making phone calls, managing accounts, and more. Each product is its own API but interacts similarly, whether directly over HTTP or through [Twilio's helper libraries](https://www.twilio.com/docs/libraries) available for various programming languages.\n\n## Working with Twilio's APIs\n\n### Authenticate with HTTP\n\nTwilio supports [HTTP Basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). This protects URLs on your server so that only you and Twilio can access them. \n\nTo authenticate:\n```\nhttps://username:password@api.twilio.com/2010-04-01/your_desired_path\n```\n\nFor HTTP Basic authentication, use your Twilio account SID as your username and your auth token as your password:\n```bash\ncurl -G https://api.twilio.com/2010-04-01/Accounts \\\n-u '<YOUR_ACCOUNT_SID>:<YOUR_AUTH_TOKEN>'\n```\n\nYou can find both your account SID and auth token in the [Twilio Console](https://www.twilio.com/console) after [signing up for a free trial](https://www.twilio.com/try-twilio).\n\nIf you want to use [API keys](https://www.twilio.com/docs/iam/api-keys/key-resource-v2010) instead, authenticate as follows:\n```bash\ncurl -G https://api.twilio.com/2010-04-01/Accounts \\\n-u '<YOUR_API_KEY>:<YOUR_API_KEY_SECRET>'\n```\n\n### Expected Content Type for API Requests\n\nTwilio's APIs expect the content type of API requests to be either `application/x-www-form-urlencoded` or `multipart/form-data`. While Twilio returns responses in JSON format, the API requests themselves should be formatted as mentioned.\n\n### Authenticate using the Twilio SDKs\n\nCurrently, Twilio offers officially supported server-side libraries in the following languages:\n- [C#](https://github.com/twilio/twilio-csharp)\n- [Java](https://github.com/twilio/twilio-java)\n- [Node.js](https://github.com/twilio/twilio-node)\n- [PHP](https://github.com/twilio/twilio-php)\n- [Python](https://github.com/twilio/twilio-python)\n- [Ruby](https://github.com/twilio/twilio-ruby)\n- [Go](https://github.com/twilio/twilio-go)\n\nThese libraries include a `Utilities` class for request validation, requiring your Account SID and Auth Token found in the [Console](https://www.twilio.com/console).\n\n> **Danger**: Always use environment variables to keep your Account SID and Auth Token secret before sharing any code or deploying to production. Check [our guidance](https://www.twilio.com/blog/how-to-set-environment-variables.html) for setting environment variables.\n\n### How Twilio's APIs use webhooks\n\n[Webhooks](https://www.twilio.com/docs/glossary/what-is-a-webhook) are user-defined HTTP callbacks triggered by events in a web application. Twilio uses webhooks to notify your application when events occur, such as incoming calls or SMS messages. Webhooks are triggered asynchronously.\n\nWhen the event occurs, Twilio makes an HTTP request (usually `POST` or `GET`) to your configured webhook URL. The request includes details like the body of an incoming message or the incoming phone number, allowing your application to process the event and respond with the necessary instructions.\n\nTo handle webhooks with Twilio, you need to build a small web application that can accept HTTP requests. Check our [helper libraries](https://www.twilio.com/docs/libraries) to get started quickly.\n\n## Explore the APIs\n\n### Send an SMS with Twilio's API\n\nTwilio's Programmable SMS API enables sending and receiving [SMS messages](https://www.twilio.com/docs/glossary/what-is-an-sms-short-message-service). Sign up for a [free Twilio account](https://www.twilio.com/try-twilio) to get started.\n\n#### Example: Send a simple SMS using the Programmable SMS API\n##### Node.js\n```javascript\n// Download the helper library from https://www.twilio.com/docs/node/install\nconst twilio = require(\"twilio\");\n\n// Set up your account SID and auth token\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\nconst client = twilio(accountSid, authToken);\n\nasync function createMessage() {\n    const message = await client.messages.create({\n        body: \"This is the ship that made the Kessel Run in fourteen parsecs?\",\n        from: \"+15017122661\",\n        to: \"+15558675310\",\n    });\n\n    console.log(message.body);\n}\n\ncreateMessage();\n```\n\n#### Example Output\n```json\n{\n    \"account_sid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"body\": \"This is the ship that made the Kessel Run in fourteen parsecs?\",\n    \"from\": \"+15017122661\",\n    \"to\": \"+15558675310\",\n    \"status\": \"queued\",\n    ...\n}\n```\n\nFor a complete step-by-step guide to sending and receiving messages with Twilio, check out our [Quickstarts for Programmable SMS](https://www.twilio.com/docs/messaging/quickstart).\n\n### Explore Twilio's other APIs\n\nTwilio offers various REST APIs to integrate powerful communications into your applications, including:\n- [Programmable Voice](https://www.twilio.com/docs/voice)\n- [Programmable Video](https://www.twilio.com/docs/video)\n- [Super SIM](https://www.twilio.com/docs/iot/supersim)\n- [Verify](https://www.twilio.com/docs/verify/api) for two-factor authentication\n\n## Need some help?\n\nIf you need assistance, reach out to our [support team](https://help.twilio.com), or leverage the community at Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio) or browse the [Twilio tag](https://stackoverflow.com/questions/tagged/twilio) on Stack Overflow."}
{"timestamp":"2024-10-28 15:46:29.633","prompt":"twilio_documentation_overview","response":"twilio_documentation_overview"}
{"timestamp":"2024-10-28 15:46:56.076","prompt":"# Twilio Docs\n\n## Build better and engage your customers across all channels with our API reference documentation, quickstarts, SDKs, and multi-language code samples.\n\n- [Discover our featured content](#)\n- [Get started with Twilio essentials](#)\n- [Start building with our developer toolkit](#)\n\n## Explore Documentation by...\n\n### Product Category\n- [Communications](#)\n- [Customer Data](#)\n- [Engagement Applications](#)\n\n### Communications\n- **[Twilio SendGrid Documentation](#)**  \n  Reach customers with Twilio's Email API and scalable marketing tools for all the email that you send.\n\n- **[Twilio Messaging Documentation](#)**  \n  Send and receive SMS/MMS and WhatsApp messages using the programming languages you already know and love.\n\n- **[Twilio Voice Documentation](#)**  \n  Build unique phone call experiences with one API to make, receive, control, and monitor calls around the globe.\n\n- **[Twilio Elastic SIP Trunking Documentation](#)**  \n  Instantly achieve global connectivity for VoIP infrastructure using our SIP trunking service.\n\n- **[Twilio Phone Numbers Documentation](#)**  \n  Purchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric Sender IDs to deliver your communications.\n\n- **[Twilio Event Streams Documentation](#)**  \n  Configure a centralized stream of Twilio event data that you can send to any team.\n\n- **[Twilio TrustHub Documentation](#)**  \n  Create a Twilio identity and unlock services such as SHAKEN/STIR, A2P Messaging, and Branded Calls.\n\n- **[Twilio WhatsApp Business Platform Documentation](#)**  \n  Reach users on the world's most popular messaging app through one streamlined API, officially supported by WhatsApp.\n\n- **[Twilio Verify Documentation](#)**  \n  Quickly verify phone number ownership via SMS or Voice, reduce fraudulent accounts, and speed up account onboarding.\n\n- **[Twilio Lookup Documentation](#)**  \n  Determine local-friendly number formats, phone types, fraud risk, and more through mobile-based authoritative signals.\n\n- **[Twilio Conversations Documentation](#)**  \n  Build conversational messaging across Chat, SMS, WhatsApp, and more with a single API.\n\n### Customer Data\n- **[Twilio Segment Documentation](#)**  \n  Collect, responsibly manage, and integrate your customer data with hundreds of tools.\n\n- **[Twilio Voice Intelligence Documentation](#)**  \n  Identify important signals from unstructured data, Call transcription, and AI-powered language operators.\n\n### Engagement Applications\n- **[Twilio Engage](#)**  \n  Personalize omnichannel campaigns on a unified, data-first platform.\n\n- **[Twilio Flex Documentation](#)**  \n  Build digital engagement for your contact center, sales conversations, and personalized support.\n\n- **[Marketing Campaigns](#)**  \n  Design and send engaging emails at scale with our suite of email marketing tools.\n\n## Featured Content\nDive into our handpicked selection of developer-focused content.\n\n- **[One-time password (OTP)](#)**  \n  Create your first verification quickly via SMS, Passkeys, Silent Network Auth, Voice, WhatsApp, TOTP, Push, Silent Device Approval, and Email.\n\n- **[Fraud Prevention](#)**  \n  Format and validate phone numbers to increase deliverability. Add on data packages to get even more in-depth carrier and caller information.\n\n## Twilio Essentials\n- **[General Usage](#)**  \n  Learn how to interact with the REST API for account management, development testing, and fraud protection.\n\n- **[IAM](#)**  \n  Manage your projects, securely authenticate REST API requests, and learn best practices for accessing Twilio's resources.\n\n- **[Global Infrastructure](#)**  \n  Control where your application's Twilio-related data is routed, processed, and stored.\n\n- **[Helper Libraries](#)**  \n  Familiarize yourself with Twilio's server-side, front-end, and mobile SDKs, OpenAPI specifications and Postman collections.\n\n- **[Phone Numbers](#)**  \n  Purchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric Sender IDs to deliver your communications.\n\n- **[Regulatory & Compliance](#)**  \n  Compiled resources to help ensure you're communicating effectively and compliantly around the world.\n\n## Developer Toolkit\nExplore essential tools, resources, and community links, all designed to help elevate your project and keep you informed.\n\n### Tools\n- **[Code Exchange](#)**  \n  Get started and build faster with usable code samples for common Twilio use cases.\n\n- **[Functions](#)**  \n  A serverless environment to quickly create production-grade, event-driven Twilio applications.\n\n- **[Marketplace](#)**  \n  Seamlessly integrate third-party partner technology into your Twilio applications.\n\n- **[OpenAPI](#)**  \n  Integrate our API with community tools for mocking, testing, generating libraries, Postman integrations, and more.\n\n- **[Serverless](#)**  \n  Quickly build and deploy communication apps with no servers to spin up or infrastructure to maintain.\n\n- **[Studio](#)**  \n  A drag-and-drop builder to create communication workflows.\n\n- **[TwiML Bins](#)**  \n  Provide Twilio-hosted instructions to your Twilio applications.\n\n- **[Twilio CLI](#)**  \n  Manage your Twilio resources from your terminal or command prompt.\n\n### Resources\n- **[API Status](#)**  \n  Check real-time monitoring of APIs and all services.\n\n- **[Changelog](#)**  \n  See updates and additions to Twilio products.\n\n- **[Error Codes](#)**  \n  Full list of all possible Twilio REST API error codes.\n\n- **[Glossary](#)**  \n  Understand our key terms and concepts.\n\n### Community\n- **[Blog](#)**  \n  Read tutorials, community projects, and product updates.\n\n- **[Champions](#)**  \n  Become a Twilio community champion.\n\n- **[Developer Events](#)**  \n  Join upcoming group events.\n\n- **[Stack Overflow](#)**  \n  Ask the Twilio community for help.\n\n## Need Some Help?\nWe all do sometimes; code is hard. Get help now from our [support team](#) or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective](#) or browsing the [Twilio tag](#) on Stack Overflow.\n\n---\n\nCopyright © 2024 Twilio Inc.  \n[Terms of Service](#) | [Privacy Policy](#)  \n[Twilio](#)  \n","response":"# Twilio Docs\n\n## Build better and engage your customers across all channels with our API reference documentation, quickstarts, SDKs, and multi-language code samples.\n\n- [Discover our featured content](#)\n- [Get started with Twilio essentials](#)\n- [Start building with our developer toolkit](#)\n\n## Explore Documentation by...\n\n### Product Category\n- [Communications](#)\n- [Customer Data](#)\n- [Engagement Applications](#)\n\n### Communications\n- **[Twilio SendGrid Documentation](#)**  \n  Reach customers with Twilio's Email API and scalable marketing tools for all the email that you send.\n\n- **[Twilio Messaging Documentation](#)**  \n  Send and receive SMS/MMS and WhatsApp messages using the programming languages you already know and love.\n\n- **[Twilio Voice Documentation](#)**  \n  Build unique phone call experiences with one API to make, receive, control, and monitor calls around the globe.\n\n- **[Twilio Elastic SIP Trunking Documentation](#)**  \n  Instantly achieve global connectivity for VoIP infrastructure using our SIP trunking service.\n\n- **[Twilio Phone Numbers Documentation](#)**  \n  Purchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric Sender IDs to deliver your communications.\n\n- **[Twilio Event Streams Documentation](#)**  \n  Configure a centralized stream of Twilio event data that you can send to any team.\n\n- **[Twilio TrustHub Documentation](#)**  \n  Create a Twilio identity and unlock services such as SHAKEN/STIR, A2P Messaging, and Branded Calls.\n\n- **[Twilio WhatsApp Business Platform Documentation](#)**  \n  Reach users on the world's most popular messaging app through one streamlined API, officially supported by WhatsApp.\n\n- **[Twilio Verify Documentation](#)**  \n  Quickly verify phone number ownership via SMS or Voice, reduce fraudulent accounts, and speed up account onboarding.\n\n- **[Twilio Lookup Documentation](#)**  \n  Determine local-friendly number formats, phone types, fraud risk, and more through mobile-based authoritative signals.\n\n- **[Twilio Conversations Documentation](#)**  \n  Build conversational messaging across Chat, SMS, WhatsApp, and more with a single API.\n\n### Customer Data\n- **[Twilio Segment Documentation](#)**  \n  Collect, responsibly manage, and integrate your customer data with hundreds of tools.\n\n- **[Twilio Voice Intelligence Documentation](#)**  \n  Identify important signals from unstructured data, Call transcription, and AI-powered language operators.\n\n### Engagement Applications\n- **[Twilio Engage](#)**  \n  Personalize omnichannel campaigns on a unified, data-first platform.\n\n- **[Twilio Flex Documentation](#)**  \n  Build digital engagement for your contact center, sales conversations, and personalized support.\n\n- **[Marketing Campaigns](#)**  \n  Design and send engaging emails at scale with our suite of email marketing tools.\n\n## Featured Content\nDive into our handpicked selection of developer-focused content.\n\n- **[One-time password (OTP)](#)**  \n  Create your first verification quickly via SMS, Passkeys, Silent Network Auth, Voice, WhatsApp, TOTP, Push, Silent Device Approval, and Email.\n\n- **[Fraud Prevention](#)**  \n  Format and validate phone numbers to increase deliverability. Add on data packages to get even more in-depth carrier and caller information.\n\n## Twilio Essentials\n- **[General Usage](#)**  \n  Learn how to interact with the REST API for account management, development testing, and fraud protection.\n\n- **[IAM](#)**  \n  Manage your projects, securely authenticate REST API requests, and learn best practices for accessing Twilio's resources.\n\n- **[Global Infrastructure](#)**  \n  Control where your application's Twilio-related data is routed, processed, and stored.\n\n- **[Helper Libraries](#)**  \n  Familiarize yourself with Twilio's server-side, front-end, and mobile SDKs, OpenAPI specifications and Postman collections.\n\n- **[Phone Numbers](#)**  \n  Purchase Toll-free, 10-digit long code (10DLC), short codes, and Alphanumeric Sender IDs to deliver your communications.\n\n- **[Regulatory & Compliance](#)**  \n  Compiled resources to help ensure you're communicating effectively and compliantly around the world.\n\n## Developer Toolkit\nExplore essential tools, resources, and community links, all designed to help elevate your project and keep you informed.\n\n### Tools\n- **[Code Exchange](#)**  \n  Get started and build faster with usable code samples for common Twilio use cases.\n\n- **[Functions](#)**  \n  A serverless environment to quickly create production-grade, event-driven Twilio applications.\n\n- **[Marketplace](#)**  \n  Seamlessly integrate third-party partner technology into your Twilio applications.\n\n- **[OpenAPI](#)**  \n  Integrate our API with community tools for mocking, testing, generating libraries, Postman integrations, and more.\n\n- **[Serverless](#)**  \n  Quickly build and deploy communication apps with no servers to spin up or infrastructure to maintain.\n\n- **[Studio](#)**  \n  A drag-and-drop builder to create communication workflows.\n\n- **[TwiML Bins](#)**  \n  Provide Twilio-hosted instructions to your Twilio applications.\n\n- **[Twilio CLI](#)**  \n  Manage your Twilio resources from your terminal or command prompt.\n\n### Resources\n- **[API Status](#)**  \n  Check real-time monitoring of APIs and all services.\n\n- **[Changelog](#)**  \n  See updates and additions to Twilio products.\n\n- **[Error Codes](#)**  \n  Full list of all possible Twilio REST API error codes.\n\n- **[Glossary](#)**  \n  Understand our key terms and concepts.\n\n### Community\n- **[Blog](#)**  \n  Read tutorials, community projects, and product updates.\n\n- **[Champions](#)**  \n  Become a Twilio community champion.\n\n- **[Developer Events](#)**  \n  Join upcoming group events.\n\n- **[Stack Overflow](#)**  \n  Ask the Twilio community for help.\n\n## Need Some Help?\nWe all do sometimes; code is hard. Get help now from our [support team](#) or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective](#) or browsing the [Twilio tag](#) on Stack Overflow.\n\n---\n\nCopyright © 2024 Twilio Inc.  \n[Terms of Service](#) | [Privacy Policy](#)  \n[Twilio](#)  \n"}
{"timestamp":"2024-10-28 15:53:41.336","prompt":"```json\n[\n    \"https://developers.google.com/gmail/api/guides\",\n    \"https://sendgrid.com/en-us/solutions/email-api\",\n    \"https://www.mailgun.com/products/send/email-api/\",\n    \"https://postmarkapp.com/email-api\",\n    \"https://www.mailersend.com/blog/guide-to-using-email-apis\"\n]\n```","response":"```json\n[\n    \"https://developers.google.com/gmail/api/guides\",\n    \"https://sendgrid.com/en-us/solutions/email-api\",\n    \"https://www.mailgun.com/products/send/email-api/\",\n    \"https://postmarkapp.com/email-api\",\n    \"https://www.mailersend.com/blog/guide-to-using-email-apis\"\n]\n```"}
{"timestamp":"2024-10-28 16:01:42.882","prompt":"```json\n[\n    \"https://postmarkapp.com/developer/api/email-api\",\n    \"https://postmarkapp.com/developer/user-guide/send-email-with-api\",\n    \"https://postmarkapp.com/developer/api/overview\",\n    \"https://rollout.com/integration-guides/postmark/api-essentials\",\n    \"https://postmarkapp.com/blog/what-is-an-email-api\"\n]\n```","response":"```json\n[\n    \"https://postmarkapp.com/developer/api/email-api\",\n    \"https://postmarkapp.com/developer/user-guide/send-email-with-api\",\n    \"https://postmarkapp.com/developer/api/overview\",\n    \"https://rollout.com/integration-guides/postmark/api-essentials\",\n    \"https://postmarkapp.com/blog/what-is-an-email-api\"\n]\n```"}
{"timestamp":"2024-10-28 16:03:20.813","prompt":"postmark_email_api_overview_and_integration","response":"postmark_email_api_overview_and_integration"}
{"timestamp":"2024-10-28 16:04:42.708","prompt":"# Postmark\n\n[Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n\n## Product\n\n### Features\n\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Pricing\n\n[Pricing](https://postmarkapp.com/pricing)\n\n## Resources\n\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [Labs](https://postmarkapp.com/labs)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n\n## Start Free Trial\n\n[Start free trial](https://account.postmarkapp.com/sign_up)\n\nAlready have an account? [Log in →](https://account.postmarkapp.com/login)\n\n### Overview\n\n- [Introduction](https://postmarkapp.com/developer)\n\n### Integration\n\n- [Official libraries](https://postmarkapp.com/developer/integration/official-libraries)\n- [Community libraries](https://postmarkapp.com/developer/integration/community-libraries)\n- [Tools and Integrations](https://postmarkapp.com/developer/integration/other-tools-and-integrations)\n\n### User Guide\n\n- [Sending email with API](https://postmarkapp.com/developer/user-guide/send-email-with-api)\n- [Sending email with SMTP](https://postmarkapp.com/developer/user-guide/send-email-with-smtp)\n- [Processing email](https://postmarkapp.com/developer/user-guide/inbound)\n- [Tracking opens](https://postmarkapp.com/developer/user-guide/tracking-opens)\n- [Tracking links](https://postmarkapp.com/developer/user-guide/tracking-links)\n- [Managing your account](https://postmarkapp.com/developer/user-guide/managing-your-account)\n- [Sandbox mode](https://postmarkapp.com/developer/user-guide/sandbox-mode)\n\n### API Reference\n\n- [Overview](https://postmarkapp.com/developer/api/overview)\n- [Email API](https://postmarkapp.com/developer/api/email-api)\n  - [Send a single email](https://postmarkapp.com/developer/api/email-api#send-a-single-email)\n  - [Send batch emails](https://postmarkapp.com/developer/api/email-api#send-batch-emails)\n- [Bulk](https://postmarkapp.com/developer/api/bulk-email)\n- [Bounce](https://postmarkapp.com/developer/api/bounce-api)\n- [Templates](https://postmarkapp.com/developer/api/templates-api)\n- [Server](https://postmarkapp.com/developer/api/server-api)\n- [Servers](https://postmarkapp.com/developer/api/servers-api)\n- [Message Streams](https://postmarkapp.com/developer/api/message-streams-api)\n- [Messages](https://postmarkapp.com/developer/api/messages-api)\n- [Domains](https://postmarkapp.com/developer/api/domains-api)\n- [Sender signatures](https://postmarkapp.com/developer/api/signatures-api)\n- [Stats](https://postmarkapp.com/developer/api/stats-api)\n- [Triggers: Inbound rules](https://postmarkapp.com/developer/api/inbound-rules-triggers-api)\n- [Webhooks](https://postmarkapp.com/developer/api/webhooks-api)\n- [Suppressions](https://postmarkapp.com/developer/api/suppressions-api)\n- [Data Removal](https://postmarkapp.com/developer/api/data-removals-api)\n\n### Webhooks\n\n- [Webhooks overview](https://postmarkapp.com/developer/webhooks/webhooks-overview)\n- [Bounce webhook](https://postmarkapp.com/developer/webhooks/bounce-webhook)\n- [Inbound webhook](https://postmarkapp.com/developer/webhooks/inbound-webhook)\n- [Open tracking webhook](https://postmarkapp.com/developer/webhooks/open-tracking-webhook)\n- [Delivery webhook](https://postmarkapp.com/developer/webhooks/delivery-webhook)\n- [Click webhook](https://postmarkapp.com/developer/webhooks/click-webhook)\n- [Spam complaint webhook](https://postmarkapp.com/developer/webhooks/spam-complaint-webhook)\n- [Subscription change webhook](https://postmarkapp.com/developer/webhooks/subscription-change-webhook)\n- [SMTP API Error](https://postmarkapp.com/developer/webhooks/smtp-api-error)\n\n## Email API\n\nThis endpoint is solely responsible for sending emails with Postmark through a specific server. Note that the batch endpoint accepts up to 500 messages per API call and up to 50 MB payload size, including attachments.\n\n### Send a Single Email\n\n**POST** `/email`\n\n#### Request Headers\n\n```\nContent-Type: application/json\nAccept: application/json\nX-Postmark-Server-Token: <server_token>\n```\n\n#### Example Request with curl\n\n```bash\ncurl \"https://api.postmarkapp.com/email\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Subject\": \"Postmark test\",\n  \"TextBody\": \"Hello dear Postmark user.\",\n  \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n  \"MessageStream\": \"outbound\"\n}'\n```\n\n#### Body Format\n\n| Key         | Type  | Description                                                                                   |\n|-------------|-------|-----------------------------------------------------------------------------------------------|\n| From        | string| Required: The sender email address (must have a registered and confirmed Sender Signature).  |\n| To          | string| Required: Recipient email address (max 50, comma-separated).                                 |\n| Cc          | string| Cc recipient email address (max 50, comma-separated).                                       |\n| Bcc         | string| Bcc recipient email address (max 50, comma-separated).                                      |\n| Subject     | string| Email subject                                                                                 |\n| Tag         | string| Email tag to categorize outgoing emails (max 1000 characters).                              |\n| HtmlBody    | string| Required if no `TextBody` specified (HTML email message).                                   |\n| TextBody    | string| Required if no `HtmlBody` specified (Plain text email message).                             |\n| ReplyTo     | string| Reply To override email address (multiple addresses can be comma-separated).                 |\n| Headers      | array | List of custom headers to include.                                                           |\n| TrackOpens  | bool  | Activate open tracking for this email.                                                      |\n| TrackLinks  | string| Activate link tracking for this email (options: `None`, `HtmlAndText`, `HtmlOnly`, `TextOnly`). |\n| Metadata    | object| Custom metadata key/value pairs.                                                             |\n| Attachments | array | List of attachments.                                                                          |\n| MessageStream | string| Set message stream ID (defaults to \"outbound\").                                            |\n\n#### Example Body Format\n\n```json\n{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Cc\": \"copied@example.com\",\n  \"Bcc\": \"blind-copied@example.com\",\n  \"Subject\": \"Test\",\n  \"Tag\": \"Invitation\",\n  \"HtmlBody\": \"<b>Hello</b> <img src=\\\"cid:image.jpg\\\"/>\",\n  \"TextBody\": \"Hello\",\n  \"ReplyTo\": \"reply@example.com\",\n  \"Headers\": [\n    {\n      \"Name\": \"CUSTOM-HEADER\",\n      \"Value\": \"value\"\n    }\n  ],\n  \"TrackOpens\": true,\n  \"TrackLinks\": \"None\",\n  \"Attachments\": [\n    {\n      \"Name\": \"readme.txt\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"text/plain\"\n    },\n    {\n      \"Name\": \"report.pdf\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"application/octet-stream\"\n    },\n    {\n      \"Name\": \"image.jpg\",\n      \"ContentID\": \"cid:image.jpg\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"image/jpeg\"\n    }\n  ],\n  \"Metadata\": {\n      \"color\": \"blue\",\n      \"client-id\": \"12345\"\n   },\n  \"MessageStream\": \"outbound\"\n}\n```\n\n#### Response\n\n| Key        | Type    | Description                          |\n|------------|---------|--------------------------------------|\n| To         | string  | Recipient email address              |\n| SubmittedAt| string  | Timestamp                            |\n| MessageID  | string  | ID of message                        |\n| ErrorCode  | integer | [API Error Codes](https://postmarkapp.com/developer/api/overview#error-codes) |\n| Message    | string  | Response message                     |\n\n#### Example Response\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n        \"To\": \"receiver@example.com\",\n        \"SubmittedAt\": \"2014-02-17T07:25:01.4178645-05:00\",\n        \"MessageID\": \"0a129aee-e1cd-480d-b08d-4f48548ff48d\",\n        \"ErrorCode\": 0,\n        \"Message\": \"OK\"\n}\n```\n\n### Send Batch Emails\n\n**POST** `/email/batch`\n\n#### Request Headers\n\n```\nContent-Type: application/json\nAccept: application/json\nX-Postmark-Server-Token: <server_token>\n```\n\n#### Example Request with curl\n\n```bash\ncurl \"https://api.postmarkapp.com/email/batch\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '[\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver1@example.com\",\n    \"Subject\": \"Postmark test #1\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  },\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver2@example.com\",\n    \"Subject\": \"Postmark test #2\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  }\n]'\n```\n\n#### Body Format\n\nEach message in the batch should follow the same format as the single email endpoint.\n\n#### Example Body Format\n\n```json\n[\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver1@example.com\",\n    \"Cc\": \"copied@example.com\",\n    \"Bcc\": \"blank-copied@example.com\",\n    \"Subject\": \"Test\",\n    \"Tag\": \"Invitation\",\n    \"HtmlBody\": \"<b>Hello</b> <img src=\\\"cid:image.jpg\\\"/>\",\n    \"TextBody\": \"Hello\",\n    \"ReplyTo\": \"reply@example.com\",\n    \"Headers\": [\n      {\n        \"Name\": \"CUSTOM-HEADER\",\n        \"Value\": \"value\"\n      }\n    ],\n    \"TrackOpens\": true,\n    \"TrackLinks\": \"None\",\n    \"Attachments\": [\n      {\n        \"Name\": \"readme.txt\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"text/plain\"\n      },\n      {\n        \"Name\": \"report.pdf\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"application/octet-stream\"\n      },\n     {\n       \"Name\": \"image.jpg\",\n       \"ContentID\": \"cid:image.jpg\",\n       \"Content\": \"dGVzdCBjb250ZW50\",\n       \"ContentType\": \"image/jpeg\"\n     }\n    ],\n    \"Metadata\": {\n      \"color\": \"green\",\n      \"client-id\": \"12345\"\n   },\n    \"MessageStream\": \"outbound\"\n  },\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver2@example.com\",\n    \"Cc\": \"copied@example.com\",\n    \"Bcc\": \"blank-copied@example.com\",\n    \"Subject\": \"Test\",\n    \"Tag\": \"Invitation\",\n    \"HtmlBody\": \"<b>Hello</b> <img src=\\\"cid:image.jpg\\\"/>\",\n    \"TextBody\": \"Hello\",\n    \"ReplyTo\": \"reply@example.com\",\n    \"Headers\": [\n      {\n        \"Name\": \"CUSTOM-HEADER\",\n        \"Value\": \"value\"\n      }\n    ],\n    \"TrackOpens\": true,\n    \"TrackLinks\": \"None\",\n    \"Attachments\": [\n      {\n        \"Name\": \"readme.txt\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"text/plain\"\n      },\n      {\n        \"Name\": \"report.pdf\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"application/octet-stream\"\n      },\n     {\n       \"Name\": \"image.jpg\",\n       \"ContentID\": \"cid:image.jpg\",\n       \"Content\": \"dGVzdCBjb250ZW50\",\n       \"ContentType\": \"image/jpeg\"\n     }\n    ],\n    \"Metadata\": {\n      \"color\": \"blue\",\n      \"client-id\": \"54321\"\n   },\n    \"MessageStream\": \"outbound\"\n  }\n]\n```\n\n#### Response\n\nThe `/batch` endpoint will return a 200-level HTTP status even if individual messages may fail. Users should check the success and error code for each message in the response.\n\n| Key        | Type    | Description                          |\n|------------|---------|--------------------------------------|\n| To         | string  | Recipient email address              |\n| SubmittedAt| string  | Timestamp                            |\n| MessageID  | string  | ID of message                        |\n| ErrorCode  | integer | [API Error Codes](https://postmarkapp.com/developer/api/overview#error-codes) |\n| Message    | string  | Response message                     |\n\n#### Example Response\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n[\n  {\n    \"ErrorCode\": 0,\n    \"Message\": \"OK\",\n    \"MessageID\": \"b7bc2f4a-e38e-4336-af7d-e6c392c2f817\",\n    \"SubmittedAt\": \"2010-11-26T12:01:05.1794748-05:00\",\n    \"To\": \"receiver1@example.com\"\n  },\n  {\n    \"ErrorCode\": 406,\n    \"Message\": \"You tried to send to a recipient that has been marked as inactive.\"\n  }\n]\n```\n\n## Product\n\n- [Pricing](https://postmarkapp.com/pricing)\n- [Customers](https://postmarkapp.com/customers)\n- [Reviews](https://postmarkapp.com/reviews)\n- [Dedicated IPs](https://postmarkapp.com/dedicated-ips)\n- [iOS App](https://postmarkapp.com/ios)\n- [Referral Partner Program](https://postmarkapp.com/lp/referral-partner-program)\n- [Latest Updates](https://postmarkapp.com/updates)\n\n## Features\n\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n- [Webhooks](https://postmarkapp.com/email-webhooks)\n- [Security](https://postmarkapp.com/security)\n- [Email Experts](https://postmarkapp.com/email-experts)\n- [Rebound](https://postmarkapp.com/rebound)\n\n## Postmark For\n\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n- [Developers](https://postmarkapp.com/send-email)\n\n## Postmark vs.\n\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Resources\n\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Labs](https://postmarkapp.com/labs)\n- [Migration Guides](https://postmarkapp.com/migration-guides)\n- [Newsletter](https://postmarkapp.com/newsletter)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Service Status](https://status.postmarkapp.com)\n\n## Visit ActiveCampaign for:\n\n- [Marketing Automation](https://www.activecampaign.com/marketing-automation?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [CRM & Sales Automation](https://www.activecampaign.com/sales-crm?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [Landing Pages](https://www.activecampaign.com/omnichannel/landing-pages?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [SMS Automation](https://www.activecampaign.com/omnichannel/sms-marketing?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n\n### Legal\n\n- [Privacy Policy](https://postmarkapp.com/privacy-policy)\n- [Cookie Policy](https://postmarkapp.com/cookie-policy)\n- [Terms of Service](https://postmarkapp.com/terms-of-service)\n- [EU Data Protection](https://postmarkapp.com/eu-privacy)\n\n© ActiveCampaign, LLC, 2024.","response":"# Postmark\n\n[Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n\n## Product\n\n### Features\n\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Pricing\n\n[Pricing](https://postmarkapp.com/pricing)\n\n## Resources\n\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [Labs](https://postmarkapp.com/labs)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n\n## Start Free Trial\n\n[Start free trial](https://account.postmarkapp.com/sign_up)\n\nAlready have an account? [Log in →](https://account.postmarkapp.com/login)\n\n### Overview\n\n- [Introduction](https://postmarkapp.com/developer)\n\n### Integration\n\n- [Official libraries](https://postmarkapp.com/developer/integration/official-libraries)\n- [Community libraries](https://postmarkapp.com/developer/integration/community-libraries)\n- [Tools and Integrations](https://postmarkapp.com/developer/integration/other-tools-and-integrations)\n\n### User Guide\n\n- [Sending email with API](https://postmarkapp.com/developer/user-guide/send-email-with-api)\n- [Sending email with SMTP](https://postmarkapp.com/developer/user-guide/send-email-with-smtp)\n- [Processing email](https://postmarkapp.com/developer/user-guide/inbound)\n- [Tracking opens](https://postmarkapp.com/developer/user-guide/tracking-opens)\n- [Tracking links](https://postmarkapp.com/developer/user-guide/tracking-links)\n- [Managing your account](https://postmarkapp.com/developer/user-guide/managing-your-account)\n- [Sandbox mode](https://postmarkapp.com/developer/user-guide/sandbox-mode)\n\n### API Reference\n\n- [Overview](https://postmarkapp.com/developer/api/overview)\n- [Email API](https://postmarkapp.com/developer/api/email-api)\n  - [Send a single email](https://postmarkapp.com/developer/api/email-api#send-a-single-email)\n  - [Send batch emails](https://postmarkapp.com/developer/api/email-api#send-batch-emails)\n- [Bulk](https://postmarkapp.com/developer/api/bulk-email)\n- [Bounce](https://postmarkapp.com/developer/api/bounce-api)\n- [Templates](https://postmarkapp.com/developer/api/templates-api)\n- [Server](https://postmarkapp.com/developer/api/server-api)\n- [Servers](https://postmarkapp.com/developer/api/servers-api)\n- [Message Streams](https://postmarkapp.com/developer/api/message-streams-api)\n- [Messages](https://postmarkapp.com/developer/api/messages-api)\n- [Domains](https://postmarkapp.com/developer/api/domains-api)\n- [Sender signatures](https://postmarkapp.com/developer/api/signatures-api)\n- [Stats](https://postmarkapp.com/developer/api/stats-api)\n- [Triggers: Inbound rules](https://postmarkapp.com/developer/api/inbound-rules-triggers-api)\n- [Webhooks](https://postmarkapp.com/developer/api/webhooks-api)\n- [Suppressions](https://postmarkapp.com/developer/api/suppressions-api)\n- [Data Removal](https://postmarkapp.com/developer/api/data-removals-api)\n\n### Webhooks\n\n- [Webhooks overview](https://postmarkapp.com/developer/webhooks/webhooks-overview)\n- [Bounce webhook](https://postmarkapp.com/developer/webhooks/bounce-webhook)\n- [Inbound webhook](https://postmarkapp.com/developer/webhooks/inbound-webhook)\n- [Open tracking webhook](https://postmarkapp.com/developer/webhooks/open-tracking-webhook)\n- [Delivery webhook](https://postmarkapp.com/developer/webhooks/delivery-webhook)\n- [Click webhook](https://postmarkapp.com/developer/webhooks/click-webhook)\n- [Spam complaint webhook](https://postmarkapp.com/developer/webhooks/spam-complaint-webhook)\n- [Subscription change webhook](https://postmarkapp.com/developer/webhooks/subscription-change-webhook)\n- [SMTP API Error](https://postmarkapp.com/developer/webhooks/smtp-api-error)\n\n## Email API\n\nThis endpoint is solely responsible for sending emails with Postmark through a specific server. Note that the batch endpoint accepts up to 500 messages per API call and up to 50 MB payload size, including attachments.\n\n### Send a Single Email\n\n**POST** `/email`\n\n#### Request Headers\n\n```\nContent-Type: application/json\nAccept: application/json\nX-Postmark-Server-Token: <server_token>\n```\n\n#### Example Request with curl\n\n```bash\ncurl \"https://api.postmarkapp.com/email\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Subject\": \"Postmark test\",\n  \"TextBody\": \"Hello dear Postmark user.\",\n  \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n  \"MessageStream\": \"outbound\"\n}'\n```\n\n#### Body Format\n\n| Key         | Type  | Description                                                                                   |\n|-------------|-------|-----------------------------------------------------------------------------------------------|\n| From        | string| Required: The sender email address (must have a registered and confirmed Sender Signature).  |\n| To          | string| Required: Recipient email address (max 50, comma-separated).                                 |\n| Cc          | string| Cc recipient email address (max 50, comma-separated).                                       |\n| Bcc         | string| Bcc recipient email address (max 50, comma-separated).                                      |\n| Subject     | string| Email subject                                                                                 |\n| Tag         | string| Email tag to categorize outgoing emails (max 1000 characters).                              |\n| HtmlBody    | string| Required if no `TextBody` specified (HTML email message).                                   |\n| TextBody    | string| Required if no `HtmlBody` specified (Plain text email message).                             |\n| ReplyTo     | string| Reply To override email address (multiple addresses can be comma-separated).                 |\n| Headers      | array | List of custom headers to include.                                                           |\n| TrackOpens  | bool  | Activate open tracking for this email.                                                      |\n| TrackLinks  | string| Activate link tracking for this email (options: `None`, `HtmlAndText`, `HtmlOnly`, `TextOnly`). |\n| Metadata    | object| Custom metadata key/value pairs.                                                             |\n| Attachments | array | List of attachments.                                                                          |\n| MessageStream | string| Set message stream ID (defaults to \"outbound\").                                            |\n\n#### Example Body Format\n\n```json\n{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Cc\": \"copied@example.com\",\n  \"Bcc\": \"blind-copied@example.com\",\n  \"Subject\": \"Test\",\n  \"Tag\": \"Invitation\",\n  \"HtmlBody\": \"<b>Hello</b> <img src=\\\"cid:image.jpg\\\"/>\",\n  \"TextBody\": \"Hello\",\n  \"ReplyTo\": \"reply@example.com\",\n  \"Headers\": [\n    {\n      \"Name\": \"CUSTOM-HEADER\",\n      \"Value\": \"value\"\n    }\n  ],\n  \"TrackOpens\": true,\n  \"TrackLinks\": \"None\",\n  \"Attachments\": [\n    {\n      \"Name\": \"readme.txt\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"text/plain\"\n    },\n    {\n      \"Name\": \"report.pdf\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"application/octet-stream\"\n    },\n    {\n      \"Name\": \"image.jpg\",\n      \"ContentID\": \"cid:image.jpg\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"image/jpeg\"\n    }\n  ],\n  \"Metadata\": {\n      \"color\": \"blue\",\n      \"client-id\": \"12345\"\n   },\n  \"MessageStream\": \"outbound\"\n}\n```\n\n#### Response\n\n| Key        | Type    | Description                          |\n|------------|---------|--------------------------------------|\n| To         | string  | Recipient email address              |\n| SubmittedAt| string  | Timestamp                            |\n| MessageID  | string  | ID of message                        |\n| ErrorCode  | integer | [API Error Codes](https://postmarkapp.com/developer/api/overview#error-codes) |\n| Message    | string  | Response message                     |\n\n#### Example Response\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n        \"To\": \"receiver@example.com\",\n        \"SubmittedAt\": \"2014-02-17T07:25:01.4178645-05:00\",\n        \"MessageID\": \"0a129aee-e1cd-480d-b08d-4f48548ff48d\",\n        \"ErrorCode\": 0,\n        \"Message\": \"OK\"\n}\n```\n\n### Send Batch Emails\n\n**POST** `/email/batch`\n\n#### Request Headers\n\n```\nContent-Type: application/json\nAccept: application/json\nX-Postmark-Server-Token: <server_token>\n```\n\n#### Example Request with curl\n\n```bash\ncurl \"https://api.postmarkapp.com/email/batch\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '[\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver1@example.com\",\n    \"Subject\": \"Postmark test #1\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  },\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver2@example.com\",\n    \"Subject\": \"Postmark test #2\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  }\n]'\n```\n\n#### Body Format\n\nEach message in the batch should follow the same format as the single email endpoint.\n\n#### Example Body Format\n\n```json\n[\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver1@example.com\",\n    \"Cc\": \"copied@example.com\",\n    \"Bcc\": \"blank-copied@example.com\",\n    \"Subject\": \"Test\",\n    \"Tag\": \"Invitation\",\n    \"HtmlBody\": \"<b>Hello</b> <img src=\\\"cid:image.jpg\\\"/>\",\n    \"TextBody\": \"Hello\",\n    \"ReplyTo\": \"reply@example.com\",\n    \"Headers\": [\n      {\n        \"Name\": \"CUSTOM-HEADER\",\n        \"Value\": \"value\"\n      }\n    ],\n    \"TrackOpens\": true,\n    \"TrackLinks\": \"None\",\n    \"Attachments\": [\n      {\n        \"Name\": \"readme.txt\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"text/plain\"\n      },\n      {\n        \"Name\": \"report.pdf\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"application/octet-stream\"\n      },\n     {\n       \"Name\": \"image.jpg\",\n       \"ContentID\": \"cid:image.jpg\",\n       \"Content\": \"dGVzdCBjb250ZW50\",\n       \"ContentType\": \"image/jpeg\"\n     }\n    ],\n    \"Metadata\": {\n      \"color\": \"green\",\n      \"client-id\": \"12345\"\n   },\n    \"MessageStream\": \"outbound\"\n  },\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver2@example.com\",\n    \"Cc\": \"copied@example.com\",\n    \"Bcc\": \"blank-copied@example.com\",\n    \"Subject\": \"Test\",\n    \"Tag\": \"Invitation\",\n    \"HtmlBody\": \"<b>Hello</b> <img src=\\\"cid:image.jpg\\\"/>\",\n    \"TextBody\": \"Hello\",\n    \"ReplyTo\": \"reply@example.com\",\n    \"Headers\": [\n      {\n        \"Name\": \"CUSTOM-HEADER\",\n        \"Value\": \"value\"\n      }\n    ],\n    \"TrackOpens\": true,\n    \"TrackLinks\": \"None\",\n    \"Attachments\": [\n      {\n        \"Name\": \"readme.txt\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"text/plain\"\n      },\n      {\n        \"Name\": \"report.pdf\",\n        \"Content\": \"dGVzdCBjb250ZW50\",\n        \"ContentType\": \"application/octet-stream\"\n      },\n     {\n       \"Name\": \"image.jpg\",\n       \"ContentID\": \"cid:image.jpg\",\n       \"Content\": \"dGVzdCBjb250ZW50\",\n       \"ContentType\": \"image/jpeg\"\n     }\n    ],\n    \"Metadata\": {\n      \"color\": \"blue\",\n      \"client-id\": \"54321\"\n   },\n    \"MessageStream\": \"outbound\"\n  }\n]\n```\n\n#### Response\n\nThe `/batch` endpoint will return a 200-level HTTP status even if individual messages may fail. Users should check the success and error code for each message in the response.\n\n| Key        | Type    | Description                          |\n|------------|---------|--------------------------------------|\n| To         | string  | Recipient email address              |\n| SubmittedAt| string  | Timestamp                            |\n| MessageID  | string  | ID of message                        |\n| ErrorCode  | integer | [API Error Codes](https://postmarkapp.com/developer/api/overview#error-codes) |\n| Message    | string  | Response message                     |\n\n#### Example Response\n\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n[\n  {\n    \"ErrorCode\": 0,\n    \"Message\": \"OK\",\n    \"MessageID\": \"b7bc2f4a-e38e-4336-af7d-e6c392c2f817\",\n    \"SubmittedAt\": \"2010-11-26T12:01:05.1794748-05:00\",\n    \"To\": \"receiver1@example.com\"\n  },\n  {\n    \"ErrorCode\": 406,\n    \"Message\": \"You tried to send to a recipient that has been marked as inactive.\"\n  }\n]\n```\n\n## Product\n\n- [Pricing](https://postmarkapp.com/pricing)\n- [Customers](https://postmarkapp.com/customers)\n- [Reviews](https://postmarkapp.com/reviews)\n- [Dedicated IPs](https://postmarkapp.com/dedicated-ips)\n- [iOS App](https://postmarkapp.com/ios)\n- [Referral Partner Program](https://postmarkapp.com/lp/referral-partner-program)\n- [Latest Updates](https://postmarkapp.com/updates)\n\n## Features\n\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n- [Webhooks](https://postmarkapp.com/email-webhooks)\n- [Security](https://postmarkapp.com/security)\n- [Email Experts](https://postmarkapp.com/email-experts)\n- [Rebound](https://postmarkapp.com/rebound)\n\n## Postmark For\n\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n- [Developers](https://postmarkapp.com/send-email)\n\n## Postmark vs.\n\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Resources\n\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Labs](https://postmarkapp.com/labs)\n- [Migration Guides](https://postmarkapp.com/migration-guides)\n- [Newsletter](https://postmarkapp.com/newsletter)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Service Status](https://status.postmarkapp.com)\n\n## Visit ActiveCampaign for:\n\n- [Marketing Automation](https://www.activecampaign.com/marketing-automation?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [CRM & Sales Automation](https://www.activecampaign.com/sales-crm?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [Landing Pages](https://www.activecampaign.com/omnichannel/landing-pages?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [SMS Automation](https://www.activecampaign.com/omnichannel/sms-marketing?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n\n### Legal\n\n- [Privacy Policy](https://postmarkapp.com/privacy-policy)\n- [Cookie Policy](https://postmarkapp.com/cookie-policy)\n- [Terms of Service](https://postmarkapp.com/terms-of-service)\n- [EU Data Protection](https://postmarkapp.com/eu-privacy)\n\n© ActiveCampaign, LLC, 2024."}
{"timestamp":"2024-10-28 16:04:49.506","prompt":"postmark_email_api_guide","response":"postmark_email_api_guide"}
{"timestamp":"2024-10-28 16:05:25.717","prompt":"# Postmark\n\n[Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n* [Product](#)\n\n### Features\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Pricing\n[Pricing](https://postmarkapp.com/pricing)\n\n## Resources\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [Labs](https://postmarkapp.com/labs)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n\n[Log in](https://account.postmarkapp.com/login) | [Start free trial](https://account.postmarkapp.com/sign_up)\n\n## Overview\n- [Introduction](https://postmarkapp.com/developer)\n\n## Integration\n- [Official libraries](https://postmarkapp.com/developer/integration/official-libraries)\n- [Community libraries](https://postmarkapp.com/developer/integration/community-libraries)\n- [Tools and Integrations](https://postmarkapp.com/developer/integration/other-tools-and-integrations)\n\n## User Guide\n- [Sending email with API](https://postmarkapp.com/developer/user-guide/send-email-with-api)\n  - [Send a single email](https://postmarkapp.com/developer/user-guide/send-email-with-api/send-a-single-email)\n  - [Send batch emails](https://postmarkapp.com/developer/user-guide/send-email-with-api/batch-emails)\n- [Sending email with SMTP](https://postmarkapp.com/developer/user-guide/send-email-with-smtp)\n- [Processing email](https://postmarkapp.com/developer/user-guide/inbound)\n- [Tracking opens](https://postmarkapp.com/developer/user-guide/tracking-opens)\n- [Tracking links](https://postmarkapp.com/developer/user-guide/tracking-links)\n- [Managing your account](https://postmarkapp.com/developer/user-guide/managing-your-account)\n- [Sandbox mode](https://postmarkapp.com/developer/user-guide/sandbox-mode)\n\n## API Reference\n- [Overview](https://postmarkapp.com/developer/api/overview)\n- [Email](https://postmarkapp.com/developer/api/email-api)\n- [Bulk](https://postmarkapp.com/developer/api/bulk-email)\n- [Bounce](https://postmarkapp.com/developer/api/bounce-api)\n- [Templates](https://postmarkapp.com/developer/api/templates-api)\n- [Server](https://postmarkapp.com/developer/api/server-api)\n- [Servers](https://postmarkapp.com/developer/api/servers-api)\n- [Message Streams](https://postmarkapp.com/developer/api/message-streams-api)\n- [Messages](https://postmarkapp.com/developer/api/messages-api)\n- [Domains](https://postmarkapp.com/developer/api/domains-api)\n- [Sender signatures](https://postmarkapp.com/developer/api/signatures-api)\n- [Stats](https://postmarkapp.com/developer/api/stats-api)\n- [Triggers: Inbound rules](https://postmarkapp.com/developer/api/inbound-rules-triggers-api)\n- [Webhooks](https://postmarkapp.com/developer/api/webhooks-api)\n- [Suppressions](https://postmarkapp.com/developer/api/suppressions-api)\n- [Data Removal](https://postmarkapp.com/developer/api/data-removals-api)\n\n## Webhooks\n- [Webhooks Overview](https://postmarkapp.com/developer/webhooks/webhooks-overview)\n- [Bounce webhook](https://postmarkapp.com/developer/webhooks/bounce-webhook)\n- [Inbound webhook](https://postmarkapp.com/developer/webhooks/inbound-webhook)\n- [Open tracking webhook](https://postmarkapp.com/developer/webhooks/open-tracking-webhook)\n- [Delivery webhook](https://postmarkapp.com/developer/webhooks/delivery-webhook)\n- [Click webhook](https://postmarkapp.com/developer/webhooks/click-webhook)\n- [Spam complaint webhook](https://postmarkapp.com/developer/webhooks/spam-complaint-webhook)\n- [Subscription change webhook](https://postmarkapp.com/developer/webhooks/subscription-change-webhook)\n- [SMTP API Error](https://postmarkapp.com/developer/webhooks/smtp-api-error)\n\n## Sending Email with API\n\n### Send a Single Email\nTo send a single email through Postmark, send an HTTP POST request to the `/email` endpoint with a JSON message attached to the body.\n\n**Example Request with Curl:**\n```bash\ncurl \"https://api.postmarkapp.com/email\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Subject\": \"Postmark test\",\n  \"TextBody\": \"Hello dear Postmark user.\",\n  \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n  \"MessageStream\": \"outbound\"\n}'\n```\n\n### Authentication Headers\nTo authenticate to the service, use the `X-Postmark-Server-Token` header. Each Postmark server has its own API token allowing exclusive access.\n\n### JSON Message Format\n```json\n{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Cc\": \"copied@example.com\",\n  \"Bcc\": \"blank-copied@example.com\",\n  \"Subject\": \"Test\",\n  \"Tag\": \"Invitation\",\n  \"HtmlBody\": \"<b>Hello</b>\",\n  \"TextBody\": \"Hello\",\n  \"ReplyTo\": \"reply@example.com\",\n  \"Metadata\": {\n      \"Color\": \"blue\",\n      \"Client-Id\": \"12345\"\n  },\n  \"Headers\": [\n    {\n      \"Name\": \"CUSTOM-HEADER\",\n      \"Value\": \"value\"\n    }\n  ],\n  \"TrackOpens\": true,\n  \"TrackLinks\": \"HtmlOnly\",\n  \"MessageStream\": \"outbound\"\n}\n```\n\n### Attachments\nAttachments are specified in the `Attachments` array in the JSON message. Some forbidden file types include vbs, exe, bin, bat, etc.\n\n**Limitations:**\n- `TextBody` and `HtmlBody` can be up to 5MB each.\n- Total message size, including attachments, can be up to 10MB.\n\n#### Example Message with Attachments\n```json\n{\n  \"Attachments\": [\n    {\n      \"Name\": \"readme.txt\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"text/plain\"\n    },\n    {\n      \"Name\": \"report.pdf\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"application/octet-stream\"\n    }\n  ]\n}\n```\n\n### Success Response\nIf successful, you will receive a JSON message:\n```json\n{\n  \"ErrorCode\": 0,\n  \"Message\": \"OK\",\n  \"MessageID\": \"b7bc2f4a-e38e-4336-af7d-e6c392c2f817\",\n  \"SubmittedAt\": \"2010-11-26T12:01:05.1794748-05:00\",\n  \"To\": \"receiver@example.com\"\n}\n```\n\n### Send Batch Emails\nTo send batch emails, use the `/email/batch` endpoint, allowing up to 500 messages in one API call.\n\n**Example Request with Curl:**\n```bash\ncurl \"https://api.postmarkapp.com/email/batch\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '[{\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver1@example.com\",\n    \"Subject\": \"Postmark test #1\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  },\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver2@example.com\",\n    \"Subject\": \"Postmark test #2\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  }]'\n```\n\n### Response\nA JSON array containing each response for the messages sent in your batched call will be received.\n\n---\n\n* For more information, visit [Postmark](https://postmarkapp.com/).","response":"# Postmark\n\n[Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n* [Product](#)\n\n### Features\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Pricing\n[Pricing](https://postmarkapp.com/pricing)\n\n## Resources\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [Labs](https://postmarkapp.com/labs)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n\n[Log in](https://account.postmarkapp.com/login) | [Start free trial](https://account.postmarkapp.com/sign_up)\n\n## Overview\n- [Introduction](https://postmarkapp.com/developer)\n\n## Integration\n- [Official libraries](https://postmarkapp.com/developer/integration/official-libraries)\n- [Community libraries](https://postmarkapp.com/developer/integration/community-libraries)\n- [Tools and Integrations](https://postmarkapp.com/developer/integration/other-tools-and-integrations)\n\n## User Guide\n- [Sending email with API](https://postmarkapp.com/developer/user-guide/send-email-with-api)\n  - [Send a single email](https://postmarkapp.com/developer/user-guide/send-email-with-api/send-a-single-email)\n  - [Send batch emails](https://postmarkapp.com/developer/user-guide/send-email-with-api/batch-emails)\n- [Sending email with SMTP](https://postmarkapp.com/developer/user-guide/send-email-with-smtp)\n- [Processing email](https://postmarkapp.com/developer/user-guide/inbound)\n- [Tracking opens](https://postmarkapp.com/developer/user-guide/tracking-opens)\n- [Tracking links](https://postmarkapp.com/developer/user-guide/tracking-links)\n- [Managing your account](https://postmarkapp.com/developer/user-guide/managing-your-account)\n- [Sandbox mode](https://postmarkapp.com/developer/user-guide/sandbox-mode)\n\n## API Reference\n- [Overview](https://postmarkapp.com/developer/api/overview)\n- [Email](https://postmarkapp.com/developer/api/email-api)\n- [Bulk](https://postmarkapp.com/developer/api/bulk-email)\n- [Bounce](https://postmarkapp.com/developer/api/bounce-api)\n- [Templates](https://postmarkapp.com/developer/api/templates-api)\n- [Server](https://postmarkapp.com/developer/api/server-api)\n- [Servers](https://postmarkapp.com/developer/api/servers-api)\n- [Message Streams](https://postmarkapp.com/developer/api/message-streams-api)\n- [Messages](https://postmarkapp.com/developer/api/messages-api)\n- [Domains](https://postmarkapp.com/developer/api/domains-api)\n- [Sender signatures](https://postmarkapp.com/developer/api/signatures-api)\n- [Stats](https://postmarkapp.com/developer/api/stats-api)\n- [Triggers: Inbound rules](https://postmarkapp.com/developer/api/inbound-rules-triggers-api)\n- [Webhooks](https://postmarkapp.com/developer/api/webhooks-api)\n- [Suppressions](https://postmarkapp.com/developer/api/suppressions-api)\n- [Data Removal](https://postmarkapp.com/developer/api/data-removals-api)\n\n## Webhooks\n- [Webhooks Overview](https://postmarkapp.com/developer/webhooks/webhooks-overview)\n- [Bounce webhook](https://postmarkapp.com/developer/webhooks/bounce-webhook)\n- [Inbound webhook](https://postmarkapp.com/developer/webhooks/inbound-webhook)\n- [Open tracking webhook](https://postmarkapp.com/developer/webhooks/open-tracking-webhook)\n- [Delivery webhook](https://postmarkapp.com/developer/webhooks/delivery-webhook)\n- [Click webhook](https://postmarkapp.com/developer/webhooks/click-webhook)\n- [Spam complaint webhook](https://postmarkapp.com/developer/webhooks/spam-complaint-webhook)\n- [Subscription change webhook](https://postmarkapp.com/developer/webhooks/subscription-change-webhook)\n- [SMTP API Error](https://postmarkapp.com/developer/webhooks/smtp-api-error)\n\n## Sending Email with API\n\n### Send a Single Email\nTo send a single email through Postmark, send an HTTP POST request to the `/email` endpoint with a JSON message attached to the body.\n\n**Example Request with Curl:**\n```bash\ncurl \"https://api.postmarkapp.com/email\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Subject\": \"Postmark test\",\n  \"TextBody\": \"Hello dear Postmark user.\",\n  \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n  \"MessageStream\": \"outbound\"\n}'\n```\n\n### Authentication Headers\nTo authenticate to the service, use the `X-Postmark-Server-Token` header. Each Postmark server has its own API token allowing exclusive access.\n\n### JSON Message Format\n```json\n{\n  \"From\": \"sender@example.com\",\n  \"To\": \"receiver@example.com\",\n  \"Cc\": \"copied@example.com\",\n  \"Bcc\": \"blank-copied@example.com\",\n  \"Subject\": \"Test\",\n  \"Tag\": \"Invitation\",\n  \"HtmlBody\": \"<b>Hello</b>\",\n  \"TextBody\": \"Hello\",\n  \"ReplyTo\": \"reply@example.com\",\n  \"Metadata\": {\n      \"Color\": \"blue\",\n      \"Client-Id\": \"12345\"\n  },\n  \"Headers\": [\n    {\n      \"Name\": \"CUSTOM-HEADER\",\n      \"Value\": \"value\"\n    }\n  ],\n  \"TrackOpens\": true,\n  \"TrackLinks\": \"HtmlOnly\",\n  \"MessageStream\": \"outbound\"\n}\n```\n\n### Attachments\nAttachments are specified in the `Attachments` array in the JSON message. Some forbidden file types include vbs, exe, bin, bat, etc.\n\n**Limitations:**\n- `TextBody` and `HtmlBody` can be up to 5MB each.\n- Total message size, including attachments, can be up to 10MB.\n\n#### Example Message with Attachments\n```json\n{\n  \"Attachments\": [\n    {\n      \"Name\": \"readme.txt\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"text/plain\"\n    },\n    {\n      \"Name\": \"report.pdf\",\n      \"Content\": \"dGVzdCBjb250ZW50\",\n      \"ContentType\": \"application/octet-stream\"\n    }\n  ]\n}\n```\n\n### Success Response\nIf successful, you will receive a JSON message:\n```json\n{\n  \"ErrorCode\": 0,\n  \"Message\": \"OK\",\n  \"MessageID\": \"b7bc2f4a-e38e-4336-af7d-e6c392c2f817\",\n  \"SubmittedAt\": \"2010-11-26T12:01:05.1794748-05:00\",\n  \"To\": \"receiver@example.com\"\n}\n```\n\n### Send Batch Emails\nTo send batch emails, use the `/email/batch` endpoint, allowing up to 500 messages in one API call.\n\n**Example Request with Curl:**\n```bash\ncurl \"https://api.postmarkapp.com/email/batch\" \\\n  -X POST \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Postmark-Server-Token: server token\" \\\n  -d '[{\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver1@example.com\",\n    \"Subject\": \"Postmark test #1\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  },\n  {\n    \"From\": \"sender@example.com\",\n    \"To\": \"receiver2@example.com\",\n    \"Subject\": \"Postmark test #2\",\n    \"TextBody\": \"Hello dear Postmark user.\",\n    \"HtmlBody\": \"<html><body><strong>Hello</strong> dear Postmark user.</body></html>\",\n    \"MessageStream\": \"outbound\"\n  }]'\n```\n\n### Response\nA JSON array containing each response for the messages sent in your batched call will be received.\n\n---\n\n* For more information, visit [Postmark](https://postmarkapp.com/)."}
{"timestamp":"2024-10-28 16:05:34.111","prompt":"postmark_documentation_overview","response":"postmark_documentation_overview"}
{"timestamp":"2024-10-28 16:06:11.798","prompt":"```markdown\n[Postmark](https://postmarkapp.com/) | [Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n* [Why Postmark?](https://postmarkapp.com/why)\n\n## Product\n### Features\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Pricing\n* [Pricing](https://postmarkapp.com/pricing)\n\n## Resources\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [Labs](https://postmarkapp.com/labs)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n- [Log in](https://account.postmarkapp.com/login)\n- [Start free trial](https://account.postmarkapp.com/sign_up)\n\n---\n\n## Overview\n- [Introduction](/developer)\n\n### Integration\n- [Official libraries](https://postmarkapp.com/developer/integration/official-libraries)\n- [Community libraries](https://postmarkapp.com/developer/integration/community-libraries)\n- [Tools and Integrations](https://postmarkapp.com/developer/integration/other-tools-and-integrations)\n\n### User Guide\n- [Sending email with API](https://postmarkapp.com/developer/user-guide/send-email-with-api)\n- [Sending email with SMTP](https://postmarkapp.com/developer/user-guide/send-email-with-smtp)\n- [Processing email](https://postmarkapp.com/developer/user-guide/inbound)\n- [Tracking opens](https://postmarkapp.com/developer/user-guide/tracking-opens)\n- [Tracking links](https://postmarkapp.com/developer/user-guide/tracking-links)\n- [Managing your account](https://postmarkapp.com/developer/user-guide/managing-your-account)\n- [Sandbox mode](https://postmarkapp.com/developer/user-guide/sandbox-mode)\n\n### API Reference\n- [Overview](https://postmarkapp.com/developer/api/overview)\n  - [Endpoint URL](https://postmarkapp.com/developer/api/overview#endpoint-url)\n  - [Authentication](https://postmarkapp.com/developer/api/overview#authentication)\n  - [HTTP response codes](https://postmarkapp.com/developer/api/overview#response-codes)\n  - [API error codes](https://postmarkapp.com/developer/api/overview#error-codes)\n\n#### Specific APIs\n- [Email API](https://postmarkapp.com/developer/api/email-api)\n- [Bulk API](https://postmarkapp.com/developer/api/bulk-email)\n- [Bounce API](https://postmarkapp.com/developer/api/bounce-api)\n- [Templates API](https://postmarkapp.com/developer/api/templates-api)\n- [Server API](https://postmarkapp.com/developer/api/server-api)\n- [Servers API](https://postmarkapp.com/developer/api/servers-api)\n- [Message Streams API](https://postmarkapp.com/developer/api/message-streams-api)\n- [Messages API](https://postmarkapp.com/developer/api/messages-api)\n- [Domains API](https://postmarkapp.com/developer/api/domains-api)\n- [Sender Signatures API](https://postmarkapp.com/developer/api/signatures-api)\n- [Stats API](https://postmarkapp.com/developer/api/stats-api)\n- [Triggers: Inbound Rules API](https://postmarkapp.com/developer/api/inbound-rules-triggers-api)\n- [Webhooks API](https://postmarkapp.com/developer/api/webhooks-api)\n- [Suppressions API](https://postmarkapp.com/developer/api/suppressions-api)\n- [Data Removal API](https://postmarkapp.com/developer/api/data-removals-api)\n\n### Webhooks\n- [Webhooks overview](https://postmarkapp.com/developer/webhooks/webhooks-overview)\n- [Bounce webhook](https://postmarkapp.com/developer/webhooks/bounce-webhook)\n- [Inbound webhook](https://postmarkapp.com/developer/webhooks/inbound-webhook)\n- [Open tracking webhook](https://postmarkapp.com/developer/webhooks/open-tracking-webhook)\n- [Delivery webhook](https://postmarkapp.com/developer/webhooks/delivery-webhook)\n- [Click webhook](https://postmarkapp.com/developer/webhooks/click-webhook)\n- [Spam complaint webhook](https://postmarkapp.com/developer/webhooks/spam-complaint-webhook)\n- [Subscription change webhook](https://postmarkapp.com/developer/webhooks/subscription-change-webhook)\n- [SMTP API Error webhook](https://postmarkapp.com/developer/webhooks/smtp-api-error)\n\n## Product\n- [Pricing](https://postmarkapp.com/pricing)\n- [Customers](https://postmarkapp.com/customers)\n- [Reviews](https://postmarkapp.com/reviews)\n- [Dedicated IPs](https://postmarkapp.com/dedicated-ips)\n- [iOS App](https://postmarkapp.com/ios)\n- [Referral Partner Program](https://postmarkapp.com/lp/referral-partner-program)\n- [Latest Updates](https://postmarkapp.com/updates)\n\n## Features\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n- [Webhooks](https://postmarkapp.com/email-webhooks)\n- [Security](https://postmarkapp.com/security)\n- [Email Experts](https://postmarkapp.com/email-experts)\n- [Rebound](https://postmarkapp.com/rebound)\n\n## Postmark For\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n- [Developers](https://postmarkapp.com/developer)\n\n## Postmark vs.\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Resources\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Labs](https://postmarkapp.com/labs)\n- [Migration Guides](https://postmarkapp.com/migration-guides)\n- [Newsletter](https://postmarkapp.com/newsletter)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Service Status](https://status.postmarkapp.com)\n\n---\n\n#### Visit ActiveCampaign for:\n- [Marketing Automation](https://www.activecampaign.com/marketing-automation?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [CRM & Sales Automation](https://www.activecampaign.com/sales-crm?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [Landing Pages](https://www.activecampaign.com/omnichannel/landing-pages?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [SMS Automation](https://www.activecampaign.com/omnichannel/sms-marketing?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n\n---\n\n* [Privacy Policy](https://postmarkapp.com/privacy-policy)\n* [Cookie Policy](https://postmarkapp.com/cookie-policy)\n* [Terms of Service](https://postmarkapp.com/terms-of-service)\n* [EU Data Protection](https://postmarkapp.com/eu-privacy)\n* © ActiveCampaign, LLC, 2024.\n```","response":"```markdown\n[Postmark](https://postmarkapp.com/) | [Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n* [Why Postmark?](https://postmarkapp.com/why)\n\n## Product\n### Features\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Pricing\n* [Pricing](https://postmarkapp.com/pricing)\n\n## Resources\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [Labs](https://postmarkapp.com/labs)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n- [Log in](https://account.postmarkapp.com/login)\n- [Start free trial](https://account.postmarkapp.com/sign_up)\n\n---\n\n## Overview\n- [Introduction](/developer)\n\n### Integration\n- [Official libraries](https://postmarkapp.com/developer/integration/official-libraries)\n- [Community libraries](https://postmarkapp.com/developer/integration/community-libraries)\n- [Tools and Integrations](https://postmarkapp.com/developer/integration/other-tools-and-integrations)\n\n### User Guide\n- [Sending email with API](https://postmarkapp.com/developer/user-guide/send-email-with-api)\n- [Sending email with SMTP](https://postmarkapp.com/developer/user-guide/send-email-with-smtp)\n- [Processing email](https://postmarkapp.com/developer/user-guide/inbound)\n- [Tracking opens](https://postmarkapp.com/developer/user-guide/tracking-opens)\n- [Tracking links](https://postmarkapp.com/developer/user-guide/tracking-links)\n- [Managing your account](https://postmarkapp.com/developer/user-guide/managing-your-account)\n- [Sandbox mode](https://postmarkapp.com/developer/user-guide/sandbox-mode)\n\n### API Reference\n- [Overview](https://postmarkapp.com/developer/api/overview)\n  - [Endpoint URL](https://postmarkapp.com/developer/api/overview#endpoint-url)\n  - [Authentication](https://postmarkapp.com/developer/api/overview#authentication)\n  - [HTTP response codes](https://postmarkapp.com/developer/api/overview#response-codes)\n  - [API error codes](https://postmarkapp.com/developer/api/overview#error-codes)\n\n#### Specific APIs\n- [Email API](https://postmarkapp.com/developer/api/email-api)\n- [Bulk API](https://postmarkapp.com/developer/api/bulk-email)\n- [Bounce API](https://postmarkapp.com/developer/api/bounce-api)\n- [Templates API](https://postmarkapp.com/developer/api/templates-api)\n- [Server API](https://postmarkapp.com/developer/api/server-api)\n- [Servers API](https://postmarkapp.com/developer/api/servers-api)\n- [Message Streams API](https://postmarkapp.com/developer/api/message-streams-api)\n- [Messages API](https://postmarkapp.com/developer/api/messages-api)\n- [Domains API](https://postmarkapp.com/developer/api/domains-api)\n- [Sender Signatures API](https://postmarkapp.com/developer/api/signatures-api)\n- [Stats API](https://postmarkapp.com/developer/api/stats-api)\n- [Triggers: Inbound Rules API](https://postmarkapp.com/developer/api/inbound-rules-triggers-api)\n- [Webhooks API](https://postmarkapp.com/developer/api/webhooks-api)\n- [Suppressions API](https://postmarkapp.com/developer/api/suppressions-api)\n- [Data Removal API](https://postmarkapp.com/developer/api/data-removals-api)\n\n### Webhooks\n- [Webhooks overview](https://postmarkapp.com/developer/webhooks/webhooks-overview)\n- [Bounce webhook](https://postmarkapp.com/developer/webhooks/bounce-webhook)\n- [Inbound webhook](https://postmarkapp.com/developer/webhooks/inbound-webhook)\n- [Open tracking webhook](https://postmarkapp.com/developer/webhooks/open-tracking-webhook)\n- [Delivery webhook](https://postmarkapp.com/developer/webhooks/delivery-webhook)\n- [Click webhook](https://postmarkapp.com/developer/webhooks/click-webhook)\n- [Spam complaint webhook](https://postmarkapp.com/developer/webhooks/spam-complaint-webhook)\n- [Subscription change webhook](https://postmarkapp.com/developer/webhooks/subscription-change-webhook)\n- [SMTP API Error webhook](https://postmarkapp.com/developer/webhooks/smtp-api-error)\n\n## Product\n- [Pricing](https://postmarkapp.com/pricing)\n- [Customers](https://postmarkapp.com/customers)\n- [Reviews](https://postmarkapp.com/reviews)\n- [Dedicated IPs](https://postmarkapp.com/dedicated-ips)\n- [iOS App](https://postmarkapp.com/ios)\n- [Referral Partner Program](https://postmarkapp.com/lp/referral-partner-program)\n- [Latest Updates](https://postmarkapp.com/updates)\n\n## Features\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n- [Webhooks](https://postmarkapp.com/email-webhooks)\n- [Security](https://postmarkapp.com/security)\n- [Email Experts](https://postmarkapp.com/email-experts)\n- [Rebound](https://postmarkapp.com/rebound)\n\n## Postmark For\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n- [Developers](https://postmarkapp.com/developer)\n\n## Postmark vs.\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n## Resources\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Email Comic](https://postmarkapp.com/postmark-express)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Labs](https://postmarkapp.com/labs)\n- [Migration Guides](https://postmarkapp.com/migration-guides)\n- [Newsletter](https://postmarkapp.com/newsletter)\n- [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Service Status](https://status.postmarkapp.com)\n\n---\n\n#### Visit ActiveCampaign for:\n- [Marketing Automation](https://www.activecampaign.com/marketing-automation?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [CRM & Sales Automation](https://www.activecampaign.com/sales-crm?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [Landing Pages](https://www.activecampaign.com/omnichannel/landing-pages?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n- [SMS Automation](https://www.activecampaign.com/omnichannel/sms-marketing?utm_source=postmark&utm_medium=referral&utm_campaign=postmark_web&utm_content=postmark_footer_nav)\n\n---\n\n* [Privacy Policy](https://postmarkapp.com/privacy-policy)\n* [Cookie Policy](https://postmarkapp.com/cookie-policy)\n* [Terms of Service](https://postmarkapp.com/terms-of-service)\n* [EU Data Protection](https://postmarkapp.com/eu-privacy)\n* © ActiveCampaign, LLC, 2024.\n```"}
{"timestamp":"2024-10-28 16:06:20.077","prompt":"comprehensive_guide_to_email_apis_and_smtp_comparison","response":"comprehensive_guide_to_email_apis_and_smtp_comparison"}
{"timestamp":"2024-10-28 16:06:41.903","prompt":"**Grow with us: Join Postmark's new referral partner program and start earning**  \n[Learn more](https://postmarkapp.com/lp/referral-partner-program)\n\n---\n\n### Features\n\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n### Resources\n\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n### Help\n\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n\n---\n\n### Understanding Email APIs\n\n**What are Email APIs?**  \nAn email API (Application Programmable Interface) allows developers to connect applications to email service providers for functionalities like sending emails, managing lists, and accessing email stats without building these features from scratch.\n\n**Email API vs. SMTP**  \nEmail APIs offer a deeper and more customizable integration compared to SMTP (Simple Mail Transfer Protocol), which is typically easier for simple use cases. If advanced functionalities are needed, an email API is preferred. \n\n### Common Use Cases for Email APIs\n\n1. **Transactional Emails:** Automate receipt, password reset, and other event-driven communications.\n2. **Integration in Products:** Allow users to send emails from a marketing platform or application.\n3. **Dynamic, Customized Emails:** Send tailored content based on user behavior.\n4. **Email Performance Stats:** Access and analyze metrics like opens and clicks programmatically.\n5. **Inbound Email Processing:** Handle incoming emails for actions like blog comments.\n6. **Email Verification:** Identify invalid email addresses for list hygiene.\n\n### Criteria for Choosing an Email API\n\n1. **Pricing:** Evaluate affordability and scalability as usage increases.\n2. **Ease of Integration:** Check if the API supports your programming language and offers helpful libraries.\n3. **Developer Documentation:** Ensure comprehensive and organized documentation is available.\n4. **Customer Support:** Assess the reliability of customer service.\n5. **Testing Capabilities:** Look for sandbox environments to test without impacting live systems.\n6. **Reliable Delivery:** Confirm the email provider's track record for successful deliveries.\n\n### Get Started with Postmark\n\nEasily integrate with Postmark’s email API—trusted by developers for its reliable delivery and excellent documentation.  \n[Get started for free →](https://account.postmarkapp.com/sign_up)\n\n---\n\n### After Reading This Article, You Should Know:\n\n- What an email API is and how it differs from SMTP.\n- How to choose between an email API and SMTP based on your needs.\n- Which email APIs are best suited for your requirements based on your technical needs and budget.\n\n### Stay Updated\n\nSubscribe to our **monthly newsletter** for email tips, product announcements, and expert interviews.\n\nEmail: *Please verify your request*  \n\n[Privacy Policy](https://postmarkapp.com/privacy-policy) | [Terms of Service](https://postmarkapp.com/terms-of-service)\n\n© ActiveCampaign, LLC, 2024.","response":"**Grow with us: Join Postmark's new referral partner program and start earning**  \n[Learn more](https://postmarkapp.com/lp/referral-partner-program)\n\n---\n\n### Features\n\n- [Email API](https://postmarkapp.com/email-api)\n- [SMTP Service](https://postmarkapp.com/smtp-service)\n- [Message Streams](https://postmarkapp.com/message-streams)\n- [Transactional Email](https://postmarkapp.com/transactional-email)\n- [Email Delivery](https://postmarkapp.com/email-delivery)\n- [Email Templates](https://postmarkapp.com/email-templates)\n- [Inbound Email](https://postmarkapp.com/inbound-email)\n- [Analytics & Retention](https://postmarkapp.com/email-analytics)\n- [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n\n- [Agencies](https://postmarkapp.com/for/agencies)\n- [Enterprise](https://postmarkapp.com/for/enterprise)\n- [Startups](https://postmarkapp.com/for/startups)\n- [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n- [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n\n- [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n- [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n- [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n- [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n- [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n### Resources\n\n- [Blog](https://postmarkapp.com/blog)\n- [API Documentation](https://postmarkapp.com/developer)\n- [Getting Started](https://postmarkapp.com/manual)\n- [Email Guides](https://postmarkapp.com/guides)\n- [Webinars](https://postmarkapp.com/webinars)\n- [Videos](https://postmarkapp.com/videos)\n- [Podcast](https://postmarkapp.com/podcast)\n- [DMARC Digests](https://dmarcdigests.com)\n- [Glossary](https://postmarkapp.com/glossary)\n\n### Help\n\n- [Support Center](https://postmarkapp.com/support)\n- [Contact Support](https://postmarkapp.com/contact)\n- [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n- [Status](https://status.postmarkapp.com/)\n\n---\n\n### Understanding Email APIs\n\n**What are Email APIs?**  \nAn email API (Application Programmable Interface) allows developers to connect applications to email service providers for functionalities like sending emails, managing lists, and accessing email stats without building these features from scratch.\n\n**Email API vs. SMTP**  \nEmail APIs offer a deeper and more customizable integration compared to SMTP (Simple Mail Transfer Protocol), which is typically easier for simple use cases. If advanced functionalities are needed, an email API is preferred. \n\n### Common Use Cases for Email APIs\n\n1. **Transactional Emails:** Automate receipt, password reset, and other event-driven communications.\n2. **Integration in Products:** Allow users to send emails from a marketing platform or application.\n3. **Dynamic, Customized Emails:** Send tailored content based on user behavior.\n4. **Email Performance Stats:** Access and analyze metrics like opens and clicks programmatically.\n5. **Inbound Email Processing:** Handle incoming emails for actions like blog comments.\n6. **Email Verification:** Identify invalid email addresses for list hygiene.\n\n### Criteria for Choosing an Email API\n\n1. **Pricing:** Evaluate affordability and scalability as usage increases.\n2. **Ease of Integration:** Check if the API supports your programming language and offers helpful libraries.\n3. **Developer Documentation:** Ensure comprehensive and organized documentation is available.\n4. **Customer Support:** Assess the reliability of customer service.\n5. **Testing Capabilities:** Look for sandbox environments to test without impacting live systems.\n6. **Reliable Delivery:** Confirm the email provider's track record for successful deliveries.\n\n### Get Started with Postmark\n\nEasily integrate with Postmark’s email API—trusted by developers for its reliable delivery and excellent documentation.  \n[Get started for free →](https://account.postmarkapp.com/sign_up)\n\n---\n\n### After Reading This Article, You Should Know:\n\n- What an email API is and how it differs from SMTP.\n- How to choose between an email API and SMTP based on your needs.\n- Which email APIs are best suited for your requirements based on your technical needs and budget.\n\n### Stay Updated\n\nSubscribe to our **monthly newsletter** for email tips, product announcements, and expert interviews.\n\nEmail: *Please verify your request*  \n\n[Privacy Policy](https://postmarkapp.com/privacy-policy) | [Terms of Service](https://postmarkapp.com/terms-of-service)\n\n© ActiveCampaign, LLC, 2024."}
{"timestamp":"2024-10-28 18:47:39.557","prompt":"```json\n[\n    \"https://python.langchain.com/docs/introduction/\",\n    \"https://www.langchain.com/\",\n    \"https://api.python.langchain.com/\",\n    \"https://github.com/langchain-ai/langchain\",\n    \"https://python.langchain.com/docs/how_to/\"\n]\n```","response":"```json\n[\n    \"https://python.langchain.com/docs/introduction/\",\n    \"https://www.langchain.com/\",\n    \"https://api.python.langchain.com/\",\n    \"https://github.com/langchain-ai/langchain\",\n    \"https://python.langchain.com/docs/how_to/\"\n]\n```"}
{"timestamp":"2024-10-28 18:48:01.888","prompt":"postmark_email_api_overview_and_features","response":"postmark_email_api_overview_and_features"}
{"timestamp":"2024-10-28 18:48:18.634","prompt":"# Grow with us: Join Postmark's new referral partner program and start earning\n[Learn more](https://postmarkapp.com/lp/referral-partner-program)\n\n[Postmark](https://postmarkapp.com/) | [Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n* [Product](#product)\n* [Pricing](https://postmarkapp.com/pricing)\n* [Resources](#resources)\n* [Help](#help)\n\n---\n\n## Product\n\n### Features\n* [Email API](https://postmarkapp.com/email-api)\n* [SMTP Service](https://postmarkapp.com/smtp-service)\n* [Message Streams](https://postmarkapp.com/message-streams)\n* [Transactional Email](https://postmarkapp.com/transactional-email)\n* [Email Delivery](https://postmarkapp.com/email-delivery)\n* [Email Templates](https://postmarkapp.com/email-templates)\n* [Inbound Email](https://postmarkapp.com/inbound-email)\n* [Analytics & Retention](https://postmarkapp.com/email-analytics)\n* [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n* [Agencies](https://postmarkapp.com/for/agencies)\n* [Enterprise](https://postmarkapp.com/for/enterprise)\n* [Startups](https://postmarkapp.com/for/startups)\n* [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n* [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n* [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n* [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n* [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n* [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n* [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n---\n\n## Resources\n* [Blog](https://postmarkapp.com/blog)\n* [API Documentation](https://postmarkapp.com/developer)\n* [Getting Started](https://postmarkapp.com/manual)\n* [Email Guides](https://postmarkapp.com/guides)\n* [Webinars](https://postmarkapp.com/webinars)\n* [Videos](https://postmarkapp.com/videos)\n* [Podcast](https://postmarkapp.com/podcast)\n* [DMARC Digests](https://dmarcdigests.com)\n* [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n* [Support Center](https://postmarkapp.com/support)\n* [Contact Support](https://postmarkapp.com/contact)\n* [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n* [Status](https://status.postmarkapp.com/)\n\n[Log in](https://account.postmarkapp.com/login) | [Start free trial](https://account.postmarkapp.com/sign_up)\n\n---\n\n## A powerful email API to make email sending a breeze\n\nEasy integration, reliable delivery, great documentation: integrate with the email API that developers love and start sending in minutes.\n\n[Get started—it’s free](https://account.postmarkapp.com/sign_up) | [API documentation →](https://postmarkapp.com/developer)\n\n### Start sending with Postmark’s email API in minutes\n\nIntegrating email into your product doesn’t have to be a pain. With our powerful RESTful email APIs and robust [libraries](https://postmarkapp.com/developer/integration/official-libraries) in pretty much every programming language, integrating email is fast and easy—whether you’re sending transactional or bulk email.\n\nSimpler applications can also use our reliable [SMTP service](https://postmarkapp.com/smtp-service).\n\n---\n\n### Code Examples\n\n#### PHP\n```php\n// Send an email with the Postmark-PHP library\n// Learn more -> https://postmarkapp.com/developer/integration/official-libraries#php\n\n// Install with composer\ncomposer require wildbit/postmark-php;\n\n// Import\nuse Postmark\\PostmarkClient;\n\n// Example request\n$client = new PostmarkClient(\"server token\");\n\n$sendResult = $client->sendEmail(\n  \"sender@example.com\",\n  \"receiver@example.com\",\n  \"Hello from Postmark!\",\n  \"This is just a friendly 'hello' from your friends at Postmark.\"\n);\n```\n\n#### Ruby\n```ruby\n# Send an email with the Postmark Ruby Gem\n# Learn more -> https://postmarkapp.com/developer/integration/official-libraries#ruby-gem\n\n# Add the Postmark Ruby Gem to your Gemfile\ngem 'postmark'\n\n# Require gem\nrequire 'postmark'\n\n# Create an instance of Postmark::ApiClient\nclient = Postmark::ApiClient.new('POSTMARK_API_TEST')\n\n# Example request\nclient.deliver(\n  from: 'sender@example.com',\n  to: 'receiver@example.com',\n  subject: 'Hello from Postmark',\n  html_body: '<strong>Hello</strong> dear Postmark user.',\n  track_opens: true\n)\n```\n\n#### Python\n```python\n# Send an email with the Postmark Python library\n# Learn more -> https://postmarkapp.com/send-email/python\n\n# Install the Postmark Python library with pip from the command line:\npip install postmarker\n\n# Import\nfrom postmarker.core import PostmarkClient\n\n# Create an instance of the Postmark client\npostmark = PostmarkClient(server_token='POSTMARK-SERVER-API-TOKEN-HERE')\n\n# Send an email\npostmark.emails.send(\n  From='sender@example.com',\n  To='recipient@example.com',\n  Subject='Postmark test',\n  HtmlBody='HTML body goes here'\n)\n```\n\n---\n\n## Say goodbye to email deliverability issues\n\nOnce you integrate with Postmark, you can count on us to get your emails delivered fast and reliably—so you can go back to building great products.\n\n> “Been a Postmark customer for a very long time. Stability and deliverability is so good I sometimes go months without thinking about it. It just works.”  \n> — **Ben Webster**, Cofounder of Insured by Us\n\n---\n\n## Ready to get started?\n\nJoin thousands of businesses that already trust their email delivery to Postmark.  \n[Start free trial](https://account.postmarkapp.com/sign_up)\n\n## Follow us on Twitter\n* [Follow @postmarkapp](https://twitter.com/postmarkapp)\n\n## Still have questions?\n* [Contact us](https://postmarkapp.com/contact)\n\n---\n\n### Privacy\n* [Privacy Policy](https://postmarkapp.com/privacy-policy)\n* [Cookie Policy](https://postmarkapp.com/cookie-policy)\n* [Terms of Service](https://postmarkapp.com/terms-of-service)\n* [EU Data Protection](https://postmarkapp.com/eu-privacy)\n\n© ActiveCampaign, LLC, 2024.","response":"# Grow with us: Join Postmark's new referral partner program and start earning\n[Learn more](https://postmarkapp.com/lp/referral-partner-program)\n\n[Postmark](https://postmarkapp.com/) | [Log In](https://account.postmarkapp.com/login)\n\n## Why Postmark?\n* [Product](#product)\n* [Pricing](https://postmarkapp.com/pricing)\n* [Resources](#resources)\n* [Help](#help)\n\n---\n\n## Product\n\n### Features\n* [Email API](https://postmarkapp.com/email-api)\n* [SMTP Service](https://postmarkapp.com/smtp-service)\n* [Message Streams](https://postmarkapp.com/message-streams)\n* [Transactional Email](https://postmarkapp.com/transactional-email)\n* [Email Delivery](https://postmarkapp.com/email-delivery)\n* [Email Templates](https://postmarkapp.com/email-templates)\n* [Inbound Email](https://postmarkapp.com/inbound-email)\n* [Analytics & Retention](https://postmarkapp.com/email-analytics)\n* [Integrations](https://postmarkapp.com/integrations)\n\n### Postmark For\n* [Agencies](https://postmarkapp.com/for/agencies)\n* [Enterprise](https://postmarkapp.com/for/enterprise)\n* [Startups](https://postmarkapp.com/for/startups)\n* [Bootstrapped Startups](https://postmarkapp.com/for/bootstrapped-startups)\n* [Side Projects](https://postmarkapp.com/for/side-projects)\n\n### Postmark vs.\n* [SendGrid](https://postmarkapp.com/compare/sendgrid-alternative)\n* [Mailgun](https://postmarkapp.com/compare/mailgun-alternative)\n* [Amazon SES](https://postmarkapp.com/compare/amazon-ses-alternative)\n* [SparkPost](https://postmarkapp.com/compare/sparkpost-alternative)\n* [Mandrill](https://postmarkapp.com/compare/mandrill-alternative)\n\n---\n\n## Resources\n* [Blog](https://postmarkapp.com/blog)\n* [API Documentation](https://postmarkapp.com/developer)\n* [Getting Started](https://postmarkapp.com/manual)\n* [Email Guides](https://postmarkapp.com/guides)\n* [Webinars](https://postmarkapp.com/webinars)\n* [Videos](https://postmarkapp.com/videos)\n* [Podcast](https://postmarkapp.com/podcast)\n* [DMARC Digests](https://dmarcdigests.com)\n* [Glossary](https://postmarkapp.com/glossary)\n\n## Help\n* [Support Center](https://postmarkapp.com/support)\n* [Contact Support](https://postmarkapp.com/contact)\n* [Talk to Sales](https://postmarkapp.com/talk-to-sales)\n* [Status](https://status.postmarkapp.com/)\n\n[Log in](https://account.postmarkapp.com/login) | [Start free trial](https://account.postmarkapp.com/sign_up)\n\n---\n\n## A powerful email API to make email sending a breeze\n\nEasy integration, reliable delivery, great documentation: integrate with the email API that developers love and start sending in minutes.\n\n[Get started—it’s free](https://account.postmarkapp.com/sign_up) | [API documentation →](https://postmarkapp.com/developer)\n\n### Start sending with Postmark’s email API in minutes\n\nIntegrating email into your product doesn’t have to be a pain. With our powerful RESTful email APIs and robust [libraries](https://postmarkapp.com/developer/integration/official-libraries) in pretty much every programming language, integrating email is fast and easy—whether you’re sending transactional or bulk email.\n\nSimpler applications can also use our reliable [SMTP service](https://postmarkapp.com/smtp-service).\n\n---\n\n### Code Examples\n\n#### PHP\n```php\n// Send an email with the Postmark-PHP library\n// Learn more -> https://postmarkapp.com/developer/integration/official-libraries#php\n\n// Install with composer\ncomposer require wildbit/postmark-php;\n\n// Import\nuse Postmark\\PostmarkClient;\n\n// Example request\n$client = new PostmarkClient(\"server token\");\n\n$sendResult = $client->sendEmail(\n  \"sender@example.com\",\n  \"receiver@example.com\",\n  \"Hello from Postmark!\",\n  \"This is just a friendly 'hello' from your friends at Postmark.\"\n);\n```\n\n#### Ruby\n```ruby\n# Send an email with the Postmark Ruby Gem\n# Learn more -> https://postmarkapp.com/developer/integration/official-libraries#ruby-gem\n\n# Add the Postmark Ruby Gem to your Gemfile\ngem 'postmark'\n\n# Require gem\nrequire 'postmark'\n\n# Create an instance of Postmark::ApiClient\nclient = Postmark::ApiClient.new('POSTMARK_API_TEST')\n\n# Example request\nclient.deliver(\n  from: 'sender@example.com',\n  to: 'receiver@example.com',\n  subject: 'Hello from Postmark',\n  html_body: '<strong>Hello</strong> dear Postmark user.',\n  track_opens: true\n)\n```\n\n#### Python\n```python\n# Send an email with the Postmark Python library\n# Learn more -> https://postmarkapp.com/send-email/python\n\n# Install the Postmark Python library with pip from the command line:\npip install postmarker\n\n# Import\nfrom postmarker.core import PostmarkClient\n\n# Create an instance of the Postmark client\npostmark = PostmarkClient(server_token='POSTMARK-SERVER-API-TOKEN-HERE')\n\n# Send an email\npostmark.emails.send(\n  From='sender@example.com',\n  To='recipient@example.com',\n  Subject='Postmark test',\n  HtmlBody='HTML body goes here'\n)\n```\n\n---\n\n## Say goodbye to email deliverability issues\n\nOnce you integrate with Postmark, you can count on us to get your emails delivered fast and reliably—so you can go back to building great products.\n\n> “Been a Postmark customer for a very long time. Stability and deliverability is so good I sometimes go months without thinking about it. It just works.”  \n> — **Ben Webster**, Cofounder of Insured by Us\n\n---\n\n## Ready to get started?\n\nJoin thousands of businesses that already trust their email delivery to Postmark.  \n[Start free trial](https://account.postmarkapp.com/sign_up)\n\n## Follow us on Twitter\n* [Follow @postmarkapp](https://twitter.com/postmarkapp)\n\n## Still have questions?\n* [Contact us](https://postmarkapp.com/contact)\n\n---\n\n### Privacy\n* [Privacy Policy](https://postmarkapp.com/privacy-policy)\n* [Cookie Policy](https://postmarkapp.com/cookie-policy)\n* [Terms of Service](https://postmarkapp.com/terms-of-service)\n* [EU Data Protection](https://postmarkapp.com/eu-privacy)\n\n© ActiveCampaign, LLC, 2024."}
{"timestamp":"2024-10-28 18:48:28.771","prompt":"langchain_framework_documentation","response":"langchain_framework_documentation"}
{"timestamp":"2024-10-28 18:48:43.873","prompt":"```markdown\n# Introduction\n\n**LangChain** is a framework for developing applications powered by large language models (LLMs).\n\nLangChain simplifies every stage of the LLM application lifecycle:\n\n- **Development**: Build your applications using LangChain's open-source [building blocks](#), [components](#), and [third-party integrations](#). Use [LangGraph](#) to build stateful agents with first-class streaming and human-in-the-loop support.\n- **Productionization**: Use [LangSmith](#) to inspect, monitor, and evaluate your chains, so that you can continuously optimize and deploy with confidence.\n- **Deployment**: Turn your LangGraph applications into production-ready APIs and Assistants with [LangGraph Cloud](#).\n\n![Diagram outlining the hierarchical organization of the LangChain framework](#)\n\nConcretely, the framework consists of the following open-source libraries:\n\n- **`langchain-core`**: Base abstractions and LangChain Expression Language.\n- **`langchain-community`**: Third-party integrations.\n  - Partner packages (e.g. **`langchain-openai`**, **`langchain-anthropic`**, etc.): Some integrations have been further split into their own lightweight packages that only depend on **`langchain-core`**.\n- **`langchain`**: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.\n- **[LangGraph](#)**: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.\n- **[LangServe](#)**: Deploy LangChain chains as REST APIs.\n- **[LangSmith](#)**: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.\n\nThese docs focus on the Python LangChain library. [Head here](#) for docs on the JavaScript LangChain library.\n\n## Tutorials\n\nIf you're looking to build something specific or are more of a hands-on learner, check out our [tutorials section](#). This is the best place to get started.\n\n### Suggested Tutorials\n\n- [Build a Simple LLM Application](#)\n- [Build a Chatbot](#)\n- [Build an Agent](#)\n- [Introduction to LangGraph](#)\n\nExplore the full list of LangChain tutorials [here](#), and check out other [LangGraph tutorials here](#). To learn more about LangGraph, check out our first LangChain Academy course, *Introduction to LangGraph*, available [here](#).\n\n## How-to Guides\n\n[Here](#) you’ll find short answers to “How do I….?” types of questions. These how-to guides don’t cover topics in depth – you’ll find that material in the [Tutorials](#) and the [API Reference](#). However, these guides will help you quickly accomplish common tasks.\n\nCheck out [LangGraph-specific how-tos here](#).\n\n## Conceptual Guide\n\nIntroductions to all the key parts of LangChain you’ll need to know! [Here](#) you'll find high-level explanations of all LangChain concepts.\n\nFor a deeper dive into LangGraph concepts, check out [this page](#).\n\n## API Reference\n\nHead to the reference section for full documentation of all classes and methods in the LangChain Python packages.\n\n## Ecosystem\n\n### [🦜🛠️ LangSmith](#)\n\nTrace and evaluate your language model applications and intelligent agents to help you move from prototype to production.\n\n### [🦜🕸️ LangGraph](#)\n\nBuild stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain but can be used without it.\n\n## Additional Resources\n\n### Versions\n\nSee what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.\n\n### Security\n\nRead up on [security](#) best practices to make sure you're developing safely with LangChain.\n\n### Integrations\n\nLangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list of [integrations](#).\n\n### Contributing\n\nCheck out the developer's guide for guidelines on contributing and help getting your dev environment set up.\n\n---\n\n#### Was this page helpful?\n\n- [Next: Tutorials](#)\n```","response":"```markdown\n# Introduction\n\n**LangChain** is a framework for developing applications powered by large language models (LLMs).\n\nLangChain simplifies every stage of the LLM application lifecycle:\n\n- **Development**: Build your applications using LangChain's open-source [building blocks](#), [components](#), and [third-party integrations](#). Use [LangGraph](#) to build stateful agents with first-class streaming and human-in-the-loop support.\n- **Productionization**: Use [LangSmith](#) to inspect, monitor, and evaluate your chains, so that you can continuously optimize and deploy with confidence.\n- **Deployment**: Turn your LangGraph applications into production-ready APIs and Assistants with [LangGraph Cloud](#).\n\n![Diagram outlining the hierarchical organization of the LangChain framework](#)\n\nConcretely, the framework consists of the following open-source libraries:\n\n- **`langchain-core`**: Base abstractions and LangChain Expression Language.\n- **`langchain-community`**: Third-party integrations.\n  - Partner packages (e.g. **`langchain-openai`**, **`langchain-anthropic`**, etc.): Some integrations have been further split into their own lightweight packages that only depend on **`langchain-core`**.\n- **`langchain`**: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.\n- **[LangGraph](#)**: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.\n- **[LangServe](#)**: Deploy LangChain chains as REST APIs.\n- **[LangSmith](#)**: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.\n\nThese docs focus on the Python LangChain library. [Head here](#) for docs on the JavaScript LangChain library.\n\n## Tutorials\n\nIf you're looking to build something specific or are more of a hands-on learner, check out our [tutorials section](#). This is the best place to get started.\n\n### Suggested Tutorials\n\n- [Build a Simple LLM Application](#)\n- [Build a Chatbot](#)\n- [Build an Agent](#)\n- [Introduction to LangGraph](#)\n\nExplore the full list of LangChain tutorials [here](#), and check out other [LangGraph tutorials here](#). To learn more about LangGraph, check out our first LangChain Academy course, *Introduction to LangGraph*, available [here](#).\n\n## How-to Guides\n\n[Here](#) you’ll find short answers to “How do I….?” types of questions. These how-to guides don’t cover topics in depth – you’ll find that material in the [Tutorials](#) and the [API Reference](#). However, these guides will help you quickly accomplish common tasks.\n\nCheck out [LangGraph-specific how-tos here](#).\n\n## Conceptual Guide\n\nIntroductions to all the key parts of LangChain you’ll need to know! [Here](#) you'll find high-level explanations of all LangChain concepts.\n\nFor a deeper dive into LangGraph concepts, check out [this page](#).\n\n## API Reference\n\nHead to the reference section for full documentation of all classes and methods in the LangChain Python packages.\n\n## Ecosystem\n\n### [🦜🛠️ LangSmith](#)\n\nTrace and evaluate your language model applications and intelligent agents to help you move from prototype to production.\n\n### [🦜🕸️ LangGraph](#)\n\nBuild stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain but can be used without it.\n\n## Additional Resources\n\n### Versions\n\nSee what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.\n\n### Security\n\nRead up on [security](#) best practices to make sure you're developing safely with LangChain.\n\n### Integrations\n\nLangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list of [integrations](#).\n\n### Contributing\n\nCheck out the developer's guide for guidelines on contributing and help getting your dev environment set up.\n\n---\n\n#### Was this page helpful?\n\n- [Next: Tutorials](#)\n```"}
{"timestamp":"2024-10-28 18:48:51.451","prompt":"langchain_llm_development_framework_overview","response":"langchain_llm_development_framework_overview"}
{"timestamp":"2024-10-28 18:49:22.175","prompt":"# LangChain Products\n\n## Applications that can reason. Powered by LangChain.\n\n[Get a demo](https://smith.langchain.com/) | [Sign up for free](https://smith.langchain.com/)\n\n### From startups to global enterprises, ambitious builders choose LangChain products.\n\n---\n\n### Build\n\n**LangChain** is a framework to build with LLMs by chaining interoperable components. **LangGraph** is the framework for building controllable agentic workflows.\n\n### Run\n\nDeploy your LLM applications at scale with **LangGraph Cloud**, our infrastructure purpose-built for agents.\n\n### Manage\n\nDebug, collaborate, test, and monitor your LLM app in **LangSmith** - whether it's built with a LangChain framework or not.\n\n---\n\n## Build your app with LangChain\n\nBuild context-aware, reasoning applications with LangChain’s flexible framework that leverages your company’s data and APIs. Future-proof your application by making vendor optionality part of your LLM infrastructure design.\n\n[Learn more about LangChain](https://langchain)\n\n---\n\n## Run at scale with LangGraph Cloud\n\nDeploy your LangGraph app with LangGraph Cloud for fault-tolerant scalability - including support for async background jobs, built-in persistence, and distributed task queues.\n\n[Learn more about LangGraph](https://langgraph)\n\n---\n\n## Manage LLM performance with LangSmith\n\nShip faster with LangSmith’s debug, test, deploy, and monitoring workflows. Don’t rely on “vibes” – add engineering rigor to your LLM-development workflow, whether you’re building with LangChain or not.\n\n[Learn more about LangSmith](https://langsmith)\n\n---\n\n### Hear from our happy customers\n\nLangChain, LangGraph, and LangSmith help teams of all sizes, across all industries - from ambitious startups to established enterprises.\n\n> “LangSmith helped us improve the accuracy and performance of Retool’s fine-tuned models. Not only did we deliver a better product by iterating with LangSmith, but we’re shipping new AI features to our users in a fraction of the time it would have taken without it.”  \n> — Jamie Cuffe, Head of Self-Serve and New Products\n\n> “By combining the benefits of LangSmith and standing on the shoulders of a gigantic open-source community, we’re able to identify the right approaches of using LLMs in an enterprise-setting faster.”  \n> — Yusuke Kaji, General Manager of AI\n\n> “Working with LangChain and LangSmith on the Elastic AI Assistant had a significant positive impact on the overall pace and quality of the development and shipping experience. We couldn’t have achieved the product experience delivered to our customers without LangChain, and we couldn’t have done it at the same pace without LangSmith.”  \n> — James Spiteri, Director of Security Products\n\n> “As soon as we heard about LangSmith, we moved our entire development stack onto it. We could have built evaluation, testing, and monitoring tools in house, but with LangSmith it took us 10x less time to get a 1000x better tool.”  \n> — Jose Peña, Senior Manager\n\n---\n\n## The reference architecture enterprises adopt for success.\n\nLangChain’s suite of products can be used independently or stacked together for multiplicative impact – guiding you through building, running, and managing your LLM apps.\n\n- **15M+** Monthly Downloads\n- **100K+** Apps Powered\n- **75K+** GitHub Stars\n- **3K+** Contributors\n\n## The biggest developer community in GenAI\n\nLearn alongside the **1M+** developers who are pushing the industry forward.\n\n[Explore LangChain](https://langchain)\n\n---\n\n## Get started with the LangSmith platform today\n\n[Get a demo](https://contact-sales) | [Sign up for free](https://smith.langchain.com/)\n\nTeams building with LangChain are driving operational efficiency, increasing discovery & personalization, and delivering premium products that generate revenue.\n\n[See customer stories](https://case-studies)\n\n---\n\n## Get inspired by companies who have done it.\n\n- [Financial Services](https://blog.langchain.dev/ally-financial-collaborates-with-langchain-to-deliver-critical-coding-module-to-mask-personal-identifying-information-in-a-compliant-and-safe-manner/)\n- [FinTech](https://blog.langchain.dev/llms-accelerate-adyens-support-team-through-smart-ticket-routing-and-support-agent-copilot/)\n- [Technology](https://blog.langchain.dev/langchain-partners-with-elastic-to-launch-the-elastic-ai-assistant/)\n\n---\n\n## LangSmith is the enterprise developer platform built for LLMs.\n\n- Gain visibility to make trade-offs between cost, latency, and quality.\n- Increase developer productivity.\n- Eliminate manual, error-prone testing.\n- Reduce hallucinations and improve reliability.\n- Enterprise deployment options to keep data secure.\n\n---\n\n## Ready to start shipping reliable GenAI apps faster?\n\nGet started with LangChain, LangSmith, and LangGraph to enhance your LLM app development, from prototype to production.\n\n[Get a demo](https://contact-sales) | [Sign up for free](https://smith.langchain.com/)\n\n---\n\n### Products\n- [LangChain](https://langchain)\n- [LangSmith](https://langsmith)\n- [LangGraph](https://langgraph)\n\n### Resources\n- [Python Docs](https://python.langchain.com/)\n- [JS/TS Docs](https://js.langchain.com/docs/get_started/introduction/)\n- [GitHub](https://github.com/langchain-ai)\n- [Integrations](https://python.langchain.com/v0.2/docs/integrations/platforms/)\n- [Changelog](https://changelog.langchain.com/)\n- [LangSmith Trust Portal](https://trust.langchain.com/)\n\n### Company\n- [About](https://about)\n- [Blog](https://blog.langchain.dev/)\n- [Twitter](https://twitter.com/LangChainAI)\n- [LinkedIn](https://www.linkedin.com/company/langchain/)\n- [YouTube](https://www.youtube.com/@LangChain)\n- [Community](https://join-community)\n- [Marketing Assets](https://drive.google.com/drive/folders/17xybjzmVBdsQA-VxouuGLxF6bDsHDe80?usp=sharing)\n\n---\n\nSign up for our newsletter to stay up to date.\n\n---\n\nThank you! Your submission has been received!\n\nOops! Something went wrong while submitting the form.\n\n[All systems operational](https://status.smith.langchain.com/) | [Privacy Policy](https://privacy-policy) | [Terms of Service](https://terms-of-service)","response":"# LangChain Products\n\n## Applications that can reason. Powered by LangChain.\n\n[Get a demo](https://smith.langchain.com/) | [Sign up for free](https://smith.langchain.com/)\n\n### From startups to global enterprises, ambitious builders choose LangChain products.\n\n---\n\n### Build\n\n**LangChain** is a framework to build with LLMs by chaining interoperable components. **LangGraph** is the framework for building controllable agentic workflows.\n\n### Run\n\nDeploy your LLM applications at scale with **LangGraph Cloud**, our infrastructure purpose-built for agents.\n\n### Manage\n\nDebug, collaborate, test, and monitor your LLM app in **LangSmith** - whether it's built with a LangChain framework or not.\n\n---\n\n## Build your app with LangChain\n\nBuild context-aware, reasoning applications with LangChain’s flexible framework that leverages your company’s data and APIs. Future-proof your application by making vendor optionality part of your LLM infrastructure design.\n\n[Learn more about LangChain](https://langchain)\n\n---\n\n## Run at scale with LangGraph Cloud\n\nDeploy your LangGraph app with LangGraph Cloud for fault-tolerant scalability - including support for async background jobs, built-in persistence, and distributed task queues.\n\n[Learn more about LangGraph](https://langgraph)\n\n---\n\n## Manage LLM performance with LangSmith\n\nShip faster with LangSmith’s debug, test, deploy, and monitoring workflows. Don’t rely on “vibes” – add engineering rigor to your LLM-development workflow, whether you’re building with LangChain or not.\n\n[Learn more about LangSmith](https://langsmith)\n\n---\n\n### Hear from our happy customers\n\nLangChain, LangGraph, and LangSmith help teams of all sizes, across all industries - from ambitious startups to established enterprises.\n\n> “LangSmith helped us improve the accuracy and performance of Retool’s fine-tuned models. Not only did we deliver a better product by iterating with LangSmith, but we’re shipping new AI features to our users in a fraction of the time it would have taken without it.”  \n> — Jamie Cuffe, Head of Self-Serve and New Products\n\n> “By combining the benefits of LangSmith and standing on the shoulders of a gigantic open-source community, we’re able to identify the right approaches of using LLMs in an enterprise-setting faster.”  \n> — Yusuke Kaji, General Manager of AI\n\n> “Working with LangChain and LangSmith on the Elastic AI Assistant had a significant positive impact on the overall pace and quality of the development and shipping experience. We couldn’t have achieved the product experience delivered to our customers without LangChain, and we couldn’t have done it at the same pace without LangSmith.”  \n> — James Spiteri, Director of Security Products\n\n> “As soon as we heard about LangSmith, we moved our entire development stack onto it. We could have built evaluation, testing, and monitoring tools in house, but with LangSmith it took us 10x less time to get a 1000x better tool.”  \n> — Jose Peña, Senior Manager\n\n---\n\n## The reference architecture enterprises adopt for success.\n\nLangChain’s suite of products can be used independently or stacked together for multiplicative impact – guiding you through building, running, and managing your LLM apps.\n\n- **15M+** Monthly Downloads\n- **100K+** Apps Powered\n- **75K+** GitHub Stars\n- **3K+** Contributors\n\n## The biggest developer community in GenAI\n\nLearn alongside the **1M+** developers who are pushing the industry forward.\n\n[Explore LangChain](https://langchain)\n\n---\n\n## Get started with the LangSmith platform today\n\n[Get a demo](https://contact-sales) | [Sign up for free](https://smith.langchain.com/)\n\nTeams building with LangChain are driving operational efficiency, increasing discovery & personalization, and delivering premium products that generate revenue.\n\n[See customer stories](https://case-studies)\n\n---\n\n## Get inspired by companies who have done it.\n\n- [Financial Services](https://blog.langchain.dev/ally-financial-collaborates-with-langchain-to-deliver-critical-coding-module-to-mask-personal-identifying-information-in-a-compliant-and-safe-manner/)\n- [FinTech](https://blog.langchain.dev/llms-accelerate-adyens-support-team-through-smart-ticket-routing-and-support-agent-copilot/)\n- [Technology](https://blog.langchain.dev/langchain-partners-with-elastic-to-launch-the-elastic-ai-assistant/)\n\n---\n\n## LangSmith is the enterprise developer platform built for LLMs.\n\n- Gain visibility to make trade-offs between cost, latency, and quality.\n- Increase developer productivity.\n- Eliminate manual, error-prone testing.\n- Reduce hallucinations and improve reliability.\n- Enterprise deployment options to keep data secure.\n\n---\n\n## Ready to start shipping reliable GenAI apps faster?\n\nGet started with LangChain, LangSmith, and LangGraph to enhance your LLM app development, from prototype to production.\n\n[Get a demo](https://contact-sales) | [Sign up for free](https://smith.langchain.com/)\n\n---\n\n### Products\n- [LangChain](https://langchain)\n- [LangSmith](https://langsmith)\n- [LangGraph](https://langgraph)\n\n### Resources\n- [Python Docs](https://python.langchain.com/)\n- [JS/TS Docs](https://js.langchain.com/docs/get_started/introduction/)\n- [GitHub](https://github.com/langchain-ai)\n- [Integrations](https://python.langchain.com/v0.2/docs/integrations/platforms/)\n- [Changelog](https://changelog.langchain.com/)\n- [LangSmith Trust Portal](https://trust.langchain.com/)\n\n### Company\n- [About](https://about)\n- [Blog](https://blog.langchain.dev/)\n- [Twitter](https://twitter.com/LangChainAI)\n- [LinkedIn](https://www.linkedin.com/company/langchain/)\n- [YouTube](https://www.youtube.com/@LangChain)\n- [Community](https://join-community)\n- [Marketing Assets](https://drive.google.com/drive/folders/17xybjzmVBdsQA-VxouuGLxF6bDsHDe80?usp=sharing)\n\n---\n\nSign up for our newsletter to stay up to date.\n\n---\n\nThank you! Your submission has been received!\n\nOops! Something went wrong while submitting the form.\n\n[All systems operational](https://status.smith.langchain.com/) | [Privacy Policy](https://privacy-policy) | [Terms of Service](https://terms-of-service)"}
{"timestamp":"2024-10-28 18:49:26.885","prompt":"You will be automatically redirected to the [new location of this page](langchain_api_reference.html).","response":"You will be automatically redirected to the [new location of this page](langchain_api_reference.html)."}
{"timestamp":"2024-10-28 18:49:27.296","prompt":"page_redirection_notice_to_langchain_api_reference","response":"page_redirection_notice_to_langchain_api_reference"}
{"timestamp":"2024-10-28 18:49:37.011","prompt":"langchain_github_repository_overview","response":"langchain_github_repository_overview"}
{"timestamp":"2024-10-28 18:49:54.743","prompt":"```markdown\n# Navigation Menu\n\n- [Sign in](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain)\n\n## Product\n- [GitHub Copilot](https://github.com/features/copilot): Write better code with AI\n- [Security](https://github.com/features/security): Find and fix vulnerabilities\n- [Actions](https://github.com/features/actions): Automate any workflow\n- [Codespaces](https://github.com/features/codespaces): Instant dev environments\n- [Issues](https://github.com/features/issues): Plan and track work\n- [Code Review](https://github.com/features/code-review): Manage code changes\n- [Discussions](https://github.com/features/discussions): Collaborate outside of code\n- [Code Search](https://github.com/features/code-search): Find more, search less\n\n### Explore\n- [All features](https://github.com/features)\n- [Documentation](https://docs.github.com)\n- [GitHub Skills](https://skills.github.com)\n- [Blog](https://github.blog)\n\n## Solutions\n### By company size\n- [Enterprises](https://github.com/enterprise)\n- [Small and medium teams](https://github.com/team)\n- [Startups](https://github.com/enterprise/startups)\n\n### By use case\n- [DevSecOps](https://github.com/solutions/use-case/devsecops)\n- [DevOps](https://github.com/solutions/use-case/devops)\n- [CI/CD](https://github.com/solutions/use-case/ci-cd)\n- [View all use cases](https://github.com/solutions/use-case)\n\n### By industry\n- [Healthcare](https://github.com/solutions/industry/healthcare)\n- [Financial services](https://github.com/solutions/industry/financial-services)\n- [Manufacturing](https://github.com/solutions/industry/manufacturing)\n- [Government](https://github.com/solutions/industry/government)\n- [View all industries](https://github.com/solutions/industry)\n- [View all solutions](https://github.com/solutions)\n\n## Resources\n### Topics\n- [AI](https://github.com/resources/articles/ai)\n- [DevOps](https://github.com/resources/articles/devops)\n- [Security](https://github.com/resources/articles/security)\n- [Software Development](https://github.com/resources/articles/software-development)\n- [View all](https://github.com/resources/articles)\n\n### Explore\n- [Learning Pathways](https://resources.github.com/learn/pathways)\n- [White papers, Ebooks, Webinars](https://resources.github.com)\n- [Customer Stories](https://github.com/customer-stories)\n- [Partners](https://partner.github.com)\n\n## Open Source\n- [GitHub Sponsors](https://github.com/sponsors): Fund open source developers\n- [The ReadME Project](https://github.com/readme): GitHub community articles\n\n### Repositories\n- [Topics](https://github.com/topics)\n- [Trending](https://github.com/trending)\n- [Collections](https://github.com/collections)\n\n## Enterprise\n- [Enterprise platform](https://github.com/enterprise): AI-powered developer platform\n\n### Available add-ons\n- [Advanced Security](https://github.com/enterprise/advanced-security): Enterprise-grade security features\n- [GitHub Copilot](https://github.com/features/copilot#enterprise): Enterprise-grade AI features\n- [Premium Support](https://github.com/premium-support): Enterprise-grade 24/7 support\n\n- [Pricing](https://github.com/pricing)\n\n---\n\n# langchain-ai / [langchain](https://github.com/langchain-ai/langchain) Public\n- Notifications: You must be signed in to change notification settings\n- Fork 15.2k\n- Star 94.1k\n\n## 🦜🔗 Build context-aware reasoning applications\n[Visit LangChain](https://python.langchain.com)\n\n### License\n[MIT License](https://github.com/langchain-ai/langchain/blob/master/LICENSE)\n\n### Repository Files Navigation\n- [Code](https://github.com/langchain-ai/langchain)\n- [Issues 509](https://github.com/langchain-ai/langchain/issues)\n- [Pull Requests 278](https://github.com/langchain-ai/langchain/pulls)\n- [Discussions](https://github.com/langchain-ai/langchain/discussions)\n- [Actions](https://github.com/langchain-ai/langchain/actions)\n- [Projects 2](https://github.com/langchain-ai/langchain/projects)\n- [Security](https://github.com/langchain-ai/langchain/security)\n- [Insights](https://github.com/langchain-ai/langchain/pulse)\n\n## 🦜️🔗 LangChain\n\n⚡ Build context-aware reasoning applications ⚡\n\n### Quick Install\nWith pip:\n```\npip install langchain\n```\nWith conda:\n```\nconda install langchain -c conda-forge\n```\n\n## 🤔 What is LangChain?\n**LangChain** is a framework for developing applications powered by large language models (LLMs).\n\n### Open-source Libraries\n- **`langchain-core`**: Base abstractions and LangChain Expression Language.\n- **`langchain-community`**: Third party integrations.\n\n### Productionization\n- [LangSmith](https://docs.smith.langchain.com): A developer platform that lets you debug, test, evaluate, and monitor chains built on any LLM framework.\n\n### Deployment\n- [LangGraph Cloud](https://langchain-ai.github.io/langgraph/cloud/): Turn your LangGraph applications into production-ready APIs and Assistants.\n\n## 🧱 What can you build with LangChain?\n- **Question answering with RAG**: \n  - [Documentation](https://python.langchain.com/docs/tutorials/rag/)\n  - End-to-end example: [Chat LangChain](https://chat.langchain.com)\n\n- **Extracting structured output**:\n  - [Documentation](https://python.langchain.com/docs/tutorials/extraction/)\n\n- **Chatbots**:\n  - [Documentation](https://python.langchain.com/docs/tutorials/chatbot/)\n  \n## 🚀 How does LangChain help?\n1. **Components**: Composable building blocks, tools, and integrations for working with language models.\n2. **Off-the-shelf chains**: Built-in assemblages of components for accomplishing higher-level tasks.\n\n### Documentation\nRefer to [LangChain Documentation](https://python.langchain.com) for more.\n\n## 🌐 Ecosystem\n- [LangSmith](https://docs.smith.langchain.com): Trace and evaluate your language model applications.\n- [LangGraph](https://langchain-ai.github.io/langgraph/): Create stateful, multi-actor applications.\n- [LangServe](https://python.langchain.com/docs/langserve): Deploy LangChain runnables and chains as REST APIs.\n\n## 💁 Contributing\nAs an open-source project, we welcome contributions. For details on how to contribute, see [here](https://python.langchain.com/docs/contributing/).\n```","response":"```markdown\n# Navigation Menu\n\n- [Sign in](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain)\n\n## Product\n- [GitHub Copilot](https://github.com/features/copilot): Write better code with AI\n- [Security](https://github.com/features/security): Find and fix vulnerabilities\n- [Actions](https://github.com/features/actions): Automate any workflow\n- [Codespaces](https://github.com/features/codespaces): Instant dev environments\n- [Issues](https://github.com/features/issues): Plan and track work\n- [Code Review](https://github.com/features/code-review): Manage code changes\n- [Discussions](https://github.com/features/discussions): Collaborate outside of code\n- [Code Search](https://github.com/features/code-search): Find more, search less\n\n### Explore\n- [All features](https://github.com/features)\n- [Documentation](https://docs.github.com)\n- [GitHub Skills](https://skills.github.com)\n- [Blog](https://github.blog)\n\n## Solutions\n### By company size\n- [Enterprises](https://github.com/enterprise)\n- [Small and medium teams](https://github.com/team)\n- [Startups](https://github.com/enterprise/startups)\n\n### By use case\n- [DevSecOps](https://github.com/solutions/use-case/devsecops)\n- [DevOps](https://github.com/solutions/use-case/devops)\n- [CI/CD](https://github.com/solutions/use-case/ci-cd)\n- [View all use cases](https://github.com/solutions/use-case)\n\n### By industry\n- [Healthcare](https://github.com/solutions/industry/healthcare)\n- [Financial services](https://github.com/solutions/industry/financial-services)\n- [Manufacturing](https://github.com/solutions/industry/manufacturing)\n- [Government](https://github.com/solutions/industry/government)\n- [View all industries](https://github.com/solutions/industry)\n- [View all solutions](https://github.com/solutions)\n\n## Resources\n### Topics\n- [AI](https://github.com/resources/articles/ai)\n- [DevOps](https://github.com/resources/articles/devops)\n- [Security](https://github.com/resources/articles/security)\n- [Software Development](https://github.com/resources/articles/software-development)\n- [View all](https://github.com/resources/articles)\n\n### Explore\n- [Learning Pathways](https://resources.github.com/learn/pathways)\n- [White papers, Ebooks, Webinars](https://resources.github.com)\n- [Customer Stories](https://github.com/customer-stories)\n- [Partners](https://partner.github.com)\n\n## Open Source\n- [GitHub Sponsors](https://github.com/sponsors): Fund open source developers\n- [The ReadME Project](https://github.com/readme): GitHub community articles\n\n### Repositories\n- [Topics](https://github.com/topics)\n- [Trending](https://github.com/trending)\n- [Collections](https://github.com/collections)\n\n## Enterprise\n- [Enterprise platform](https://github.com/enterprise): AI-powered developer platform\n\n### Available add-ons\n- [Advanced Security](https://github.com/enterprise/advanced-security): Enterprise-grade security features\n- [GitHub Copilot](https://github.com/features/copilot#enterprise): Enterprise-grade AI features\n- [Premium Support](https://github.com/premium-support): Enterprise-grade 24/7 support\n\n- [Pricing](https://github.com/pricing)\n\n---\n\n# langchain-ai / [langchain](https://github.com/langchain-ai/langchain) Public\n- Notifications: You must be signed in to change notification settings\n- Fork 15.2k\n- Star 94.1k\n\n## 🦜🔗 Build context-aware reasoning applications\n[Visit LangChain](https://python.langchain.com)\n\n### License\n[MIT License](https://github.com/langchain-ai/langchain/blob/master/LICENSE)\n\n### Repository Files Navigation\n- [Code](https://github.com/langchain-ai/langchain)\n- [Issues 509](https://github.com/langchain-ai/langchain/issues)\n- [Pull Requests 278](https://github.com/langchain-ai/langchain/pulls)\n- [Discussions](https://github.com/langchain-ai/langchain/discussions)\n- [Actions](https://github.com/langchain-ai/langchain/actions)\n- [Projects 2](https://github.com/langchain-ai/langchain/projects)\n- [Security](https://github.com/langchain-ai/langchain/security)\n- [Insights](https://github.com/langchain-ai/langchain/pulse)\n\n## 🦜️🔗 LangChain\n\n⚡ Build context-aware reasoning applications ⚡\n\n### Quick Install\nWith pip:\n```\npip install langchain\n```\nWith conda:\n```\nconda install langchain -c conda-forge\n```\n\n## 🤔 What is LangChain?\n**LangChain** is a framework for developing applications powered by large language models (LLMs).\n\n### Open-source Libraries\n- **`langchain-core`**: Base abstractions and LangChain Expression Language.\n- **`langchain-community`**: Third party integrations.\n\n### Productionization\n- [LangSmith](https://docs.smith.langchain.com): A developer platform that lets you debug, test, evaluate, and monitor chains built on any LLM framework.\n\n### Deployment\n- [LangGraph Cloud](https://langchain-ai.github.io/langgraph/cloud/): Turn your LangGraph applications into production-ready APIs and Assistants.\n\n## 🧱 What can you build with LangChain?\n- **Question answering with RAG**: \n  - [Documentation](https://python.langchain.com/docs/tutorials/rag/)\n  - End-to-end example: [Chat LangChain](https://chat.langchain.com)\n\n- **Extracting structured output**:\n  - [Documentation](https://python.langchain.com/docs/tutorials/extraction/)\n\n- **Chatbots**:\n  - [Documentation](https://python.langchain.com/docs/tutorials/chatbot/)\n  \n## 🚀 How does LangChain help?\n1. **Components**: Composable building blocks, tools, and integrations for working with language models.\n2. **Off-the-shelf chains**: Built-in assemblages of components for accomplishing higher-level tasks.\n\n### Documentation\nRefer to [LangChain Documentation](https://python.langchain.com) for more.\n\n## 🌐 Ecosystem\n- [LangSmith](https://docs.smith.langchain.com): Trace and evaluate your language model applications.\n- [LangGraph](https://langchain-ai.github.io/langgraph/): Create stateful, multi-actor applications.\n- [LangServe](https://python.langchain.com/docs/langserve): Deploy LangChain runnables and chains as REST APIs.\n\n## 💁 Contributing\nAs an open-source project, we welcome contributions. For details on how to contribute, see [here](https://python.langchain.com/docs/contributing/).\n```"}
{"timestamp":"2024-10-28 18:50:37.682","prompt":"langchain_documentation_navigation_guide","response":"langchain_documentation_navigation_guide"}
{"timestamp":"2024-10-28 18:51:02.950","prompt":"# LangChain Documentation\n\n## Contents\n\n- [Integrations](https://python.langchain.com/integrations/providers/)\n- [API Reference](https://python.langchain.com/api_reference/)\n- [Contributing](https://python.langchain.com/docs/contributing/)\n- [People](https://python.langchain.com/docs/people/)\n- [Error Reference](https://python.langchain.com/docs/troubleshooting/errors/)\n- [LangSmith](https://docs.smith.langchain.com)\n- [LangGraph](https://langchain-ai.github.io/langgraph/)\n- [LangChain Hub](https://smith.langchain.com/hub)\n- [LangChain JS/TS](https://js.langchain.com)\n\n## Versions\n\n- [v0.3](https://python.langchain.com/v0.3/docs/introduction/)\n- [v0.2](https://python.langchain.com/v0.2/docs/introduction/)\n- [v0.1](https://python.langchain.com/v0.1/docs/get_started/introduction)\n\n---\n\n## How-to Guides\n\nThis section contains answers to common \"How do I...?\" questions. These guides are **goal-oriented** and **concrete**, designed to help you complete specific tasks. For conceptual explanations, see the [Conceptual Guide](https://python.langchain.com/docs/concepts/). For end-to-end walkthroughs, see [Tutorials](https://python.langchain.com/docs/tutorials/). For comprehensive descriptions of every class and function, refer to the [API Reference](https://python.langchain.com/api_reference/).\n\n### Installation\n\n- [How to: install LangChain packages](https://python.langchain.com/docs/how_to/installation/)\n- [How to: use LangChain with different Pydantic versions](https://python.langchain.com/docs/how_to/pydantic_compatibility/)\n\n### Key Features\n\nCore functionalities include:\n\n- [How to: return structured data from a model](https://python.langchain.com/docs/how_to/structured_output/)\n- [How to: use a model to call tools](https://python.langchain.com/docs/how_to/tool_calling/)\n- [How to: stream runnables](https://python.langchain.com/docs/how_to/streaming/)\n- [How to: debug your LLM apps](https://python.langchain.com/docs/how_to/debugging/)\n\n### LangChain Expression Language (LCEL)\n\nWith [LangChain Expression Language](https://python.langchain.com/docs/concepts/lcel/) you can create arbitrary custom chains based on the [Runnable](https://python.langchain.com/api_reference/core/runnables/langchain_core.runnables.base.Runnable.html) protocol.\n\n- **[LCEL Cheatsheet](https://python.langchain.com/docs/how_to/lcel_cheatsheet/)**: Quick overview of main primitives.\n- **[Migration Guide](https://python.langchain.com/docs/versions/migrating_chains/)**: For transitioning from legacy chain abstractions to LCEL.\n\n#### Key LCEL Guides\n\n- [How to: chain runnables](https://python.langchain.com/docs/how_to/sequence/)\n- [How to: stream runnables](https://python.langchain.com/docs/how_to/streaming/)\n- [How to: configure runnable behavior at runtime](https://python.langchain.com/docs/how_to/configure/)\n- [How to: add message history (memory) to a chain](https://python.langchain.com/docs/how_to/message_history/)\n\n### Components\n\n#### Prompt Templates\n\nResponsible for formatting user input for language models.\n\n- [How to: use few shot examples](https://python.langchain.com/docs/how_to/few_shot_examples/)\n- [How to: partially format prompt templates](https://python.langchain.com/docs/how_to/prompts_partial/)\n\n#### Example Selectors\n\nSelect correct examples for prompts.\n\n- [How to: select examples by length](https://python.langchain.com/docs/how_to/example_selectors_length_based/)\n- [How to: use example selectors](https://python.langchain.com/docs/how_to/example_selectors/)\n\n#### Chat Models\n\nNewer forms of models for conversational interfaces.\n\n- [How to: do function/tool calling](https://python.langchain.com/docs/how_to/tool_calling/)\n- [How to: cache model responses](https://python.langchain.com/docs/how_to/chat_model_caching/)\n\n#### LLMs\n\nOlder forms of language models.\n\n- [How to: create a custom LLM class](https://python.langchain.com/docs/how_to/custom_llm/)\n- [How to: cache model responses](https://python.langchain.com/docs/how_to/llm_caching/)\n\n#### Output Parsers\n\nParse LLM outputs into structured formats.\n\n- [How to: parse JSON output](https://python.langchain.com/docs/how_to/output_parser_json/)\n- [How to: write a custom output parser class](https://python.langchain.com/docs/how_to/output_parser_custom/)\n\n#### Document Loaders\n\nLoad documents from various sources.\n\n- [How to: load PDF](https://python.langchain.com/docs/how_to/document_loader_pdf/)\n- [How to: load HTML](https://python.langchain.com/docs/how_to/document_loader_html/)\n\n#### Text Splitters\n\nSplit documents into manageable chunks.\n\n- [How to: split by headers](https://python.langchain.com/docs/how_to/markdown_header_metadata_splitter/)\n- [How to: recursively split text](https://python.langchain.com/docs/how_to/recursive_text_splitter/)\n\n#### Embedding Models\n\nCreate numerical representations of text.\n\n- [How to: embed text data](https://python.langchain.com/docs/how_to/embed_text/)\n\n#### Vector Stores\n\nEfficiently store and retrieve embeddings.\n\n- [How to: use a vector store to retrieve data](https://python.langchain.com/docs/how_to/vectorstores/)\n\n#### Retrievers\n\nReturn relevant documents based on queries.\n\n- [How to: use hybrid vector and keyword retrieval](https://python.langchain.com/docs/how_to/hybrid/)\n- [How to: reorder retrieved results](https://python.langchain.com/docs/how_to/long_context_reorder/)\n\n#### Tools\n\nDescribe tools with implementations to combine with language models.\n\n- [How to: create tools](https://python.langchain.com/docs/how_to/custom_tools/)\n- [How to: use built-in tools and toolkits](https://python.langchain.com/docs/how_to/tools_builtin/)\n\n#### Agents\n\nFor in-depth guides, refer to [LangGraph documentation](https://langchain-ai.github.io/langgraph/).\n\n- [How to: use legacy LangChain Agents](https://python.langchain.com/docs/how_to/agent_executor/)\n\n#### Callbacks\n\nHooks into various execution stages of your application.\n\n- [How to: pass in callbacks at runtime](https://python.langchain.com/docs/how_to/callbacks_runtime/)\n\n#### Custom\n\nExtend components to create custom versions.\n\n- [How to: create a custom chat model class](https://python.langchain.com/docs/how_to/custom_chat_model/)\n\n#### Serialization\n\n- [How to: save and load LangChain objects](https://python.langchain.com/docs/how_to/serialization/)\n\n## Use Cases\n\n### Q&A with RAG\n\nConnect LLMs to external data sources.\n\n- [How to: add chat history](https://python.langchain.com/docs/how_to/qa_chat_history_how_to/)\n\n### Extraction\n\nExtract structured information from unstructured text.\n\n- [How to: handle long text](https://python.langchain.com/docs/how_to/extraction_long_text/)\n\n### Chatbots\n\nBuild conversational LLM applications.\n\n- [How to: manage memory](https://python.langchain.com/docs/how_to/chatbots_memory/)\n\n### Query Analysis\n\nGenerate queries for retrievers using LLMs.\n\n- [How to: handle cases where no queries are generated](https://python.langchain.com/docs/how_to/query_no_queries/)\n\n### Summarization\n\nDistill information from text.\n\n- [How to: summarize text in a single LLM call](https://python.langchain.com/docs/how_to/summarize_stuff/)\n\n## Related Resources\n\n- [LangGraph](https://langchain-ai.github.io/langgraph/)\n- [LangSmith](https://docs.smith.langchain.com/)\n\n---\n\nFor further assistance, check community discussions on [Twitter](https://twitter.com/LangChainAI) or see the [GitHub repository](https://github.com/langchain-ai/langchain).","response":"# LangChain Documentation\n\n## Contents\n\n- [Integrations](https://python.langchain.com/integrations/providers/)\n- [API Reference](https://python.langchain.com/api_reference/)\n- [Contributing](https://python.langchain.com/docs/contributing/)\n- [People](https://python.langchain.com/docs/people/)\n- [Error Reference](https://python.langchain.com/docs/troubleshooting/errors/)\n- [LangSmith](https://docs.smith.langchain.com)\n- [LangGraph](https://langchain-ai.github.io/langgraph/)\n- [LangChain Hub](https://smith.langchain.com/hub)\n- [LangChain JS/TS](https://js.langchain.com)\n\n## Versions\n\n- [v0.3](https://python.langchain.com/v0.3/docs/introduction/)\n- [v0.2](https://python.langchain.com/v0.2/docs/introduction/)\n- [v0.1](https://python.langchain.com/v0.1/docs/get_started/introduction)\n\n---\n\n## How-to Guides\n\nThis section contains answers to common \"How do I...?\" questions. These guides are **goal-oriented** and **concrete**, designed to help you complete specific tasks. For conceptual explanations, see the [Conceptual Guide](https://python.langchain.com/docs/concepts/). For end-to-end walkthroughs, see [Tutorials](https://python.langchain.com/docs/tutorials/). For comprehensive descriptions of every class and function, refer to the [API Reference](https://python.langchain.com/api_reference/).\n\n### Installation\n\n- [How to: install LangChain packages](https://python.langchain.com/docs/how_to/installation/)\n- [How to: use LangChain with different Pydantic versions](https://python.langchain.com/docs/how_to/pydantic_compatibility/)\n\n### Key Features\n\nCore functionalities include:\n\n- [How to: return structured data from a model](https://python.langchain.com/docs/how_to/structured_output/)\n- [How to: use a model to call tools](https://python.langchain.com/docs/how_to/tool_calling/)\n- [How to: stream runnables](https://python.langchain.com/docs/how_to/streaming/)\n- [How to: debug your LLM apps](https://python.langchain.com/docs/how_to/debugging/)\n\n### LangChain Expression Language (LCEL)\n\nWith [LangChain Expression Language](https://python.langchain.com/docs/concepts/lcel/) you can create arbitrary custom chains based on the [Runnable](https://python.langchain.com/api_reference/core/runnables/langchain_core.runnables.base.Runnable.html) protocol.\n\n- **[LCEL Cheatsheet](https://python.langchain.com/docs/how_to/lcel_cheatsheet/)**: Quick overview of main primitives.\n- **[Migration Guide](https://python.langchain.com/docs/versions/migrating_chains/)**: For transitioning from legacy chain abstractions to LCEL.\n\n#### Key LCEL Guides\n\n- [How to: chain runnables](https://python.langchain.com/docs/how_to/sequence/)\n- [How to: stream runnables](https://python.langchain.com/docs/how_to/streaming/)\n- [How to: configure runnable behavior at runtime](https://python.langchain.com/docs/how_to/configure/)\n- [How to: add message history (memory) to a chain](https://python.langchain.com/docs/how_to/message_history/)\n\n### Components\n\n#### Prompt Templates\n\nResponsible for formatting user input for language models.\n\n- [How to: use few shot examples](https://python.langchain.com/docs/how_to/few_shot_examples/)\n- [How to: partially format prompt templates](https://python.langchain.com/docs/how_to/prompts_partial/)\n\n#### Example Selectors\n\nSelect correct examples for prompts.\n\n- [How to: select examples by length](https://python.langchain.com/docs/how_to/example_selectors_length_based/)\n- [How to: use example selectors](https://python.langchain.com/docs/how_to/example_selectors/)\n\n#### Chat Models\n\nNewer forms of models for conversational interfaces.\n\n- [How to: do function/tool calling](https://python.langchain.com/docs/how_to/tool_calling/)\n- [How to: cache model responses](https://python.langchain.com/docs/how_to/chat_model_caching/)\n\n#### LLMs\n\nOlder forms of language models.\n\n- [How to: create a custom LLM class](https://python.langchain.com/docs/how_to/custom_llm/)\n- [How to: cache model responses](https://python.langchain.com/docs/how_to/llm_caching/)\n\n#### Output Parsers\n\nParse LLM outputs into structured formats.\n\n- [How to: parse JSON output](https://python.langchain.com/docs/how_to/output_parser_json/)\n- [How to: write a custom output parser class](https://python.langchain.com/docs/how_to/output_parser_custom/)\n\n#### Document Loaders\n\nLoad documents from various sources.\n\n- [How to: load PDF](https://python.langchain.com/docs/how_to/document_loader_pdf/)\n- [How to: load HTML](https://python.langchain.com/docs/how_to/document_loader_html/)\n\n#### Text Splitters\n\nSplit documents into manageable chunks.\n\n- [How to: split by headers](https://python.langchain.com/docs/how_to/markdown_header_metadata_splitter/)\n- [How to: recursively split text](https://python.langchain.com/docs/how_to/recursive_text_splitter/)\n\n#### Embedding Models\n\nCreate numerical representations of text.\n\n- [How to: embed text data](https://python.langchain.com/docs/how_to/embed_text/)\n\n#### Vector Stores\n\nEfficiently store and retrieve embeddings.\n\n- [How to: use a vector store to retrieve data](https://python.langchain.com/docs/how_to/vectorstores/)\n\n#### Retrievers\n\nReturn relevant documents based on queries.\n\n- [How to: use hybrid vector and keyword retrieval](https://python.langchain.com/docs/how_to/hybrid/)\n- [How to: reorder retrieved results](https://python.langchain.com/docs/how_to/long_context_reorder/)\n\n#### Tools\n\nDescribe tools with implementations to combine with language models.\n\n- [How to: create tools](https://python.langchain.com/docs/how_to/custom_tools/)\n- [How to: use built-in tools and toolkits](https://python.langchain.com/docs/how_to/tools_builtin/)\n\n#### Agents\n\nFor in-depth guides, refer to [LangGraph documentation](https://langchain-ai.github.io/langgraph/).\n\n- [How to: use legacy LangChain Agents](https://python.langchain.com/docs/how_to/agent_executor/)\n\n#### Callbacks\n\nHooks into various execution stages of your application.\n\n- [How to: pass in callbacks at runtime](https://python.langchain.com/docs/how_to/callbacks_runtime/)\n\n#### Custom\n\nExtend components to create custom versions.\n\n- [How to: create a custom chat model class](https://python.langchain.com/docs/how_to/custom_chat_model/)\n\n#### Serialization\n\n- [How to: save and load LangChain objects](https://python.langchain.com/docs/how_to/serialization/)\n\n## Use Cases\n\n### Q&A with RAG\n\nConnect LLMs to external data sources.\n\n- [How to: add chat history](https://python.langchain.com/docs/how_to/qa_chat_history_how_to/)\n\n### Extraction\n\nExtract structured information from unstructured text.\n\n- [How to: handle long text](https://python.langchain.com/docs/how_to/extraction_long_text/)\n\n### Chatbots\n\nBuild conversational LLM applications.\n\n- [How to: manage memory](https://python.langchain.com/docs/how_to/chatbots_memory/)\n\n### Query Analysis\n\nGenerate queries for retrievers using LLMs.\n\n- [How to: handle cases where no queries are generated](https://python.langchain.com/docs/how_to/query_no_queries/)\n\n### Summarization\n\nDistill information from text.\n\n- [How to: summarize text in a single LLM call](https://python.langchain.com/docs/how_to/summarize_stuff/)\n\n## Related Resources\n\n- [LangGraph](https://langchain-ai.github.io/langgraph/)\n- [LangSmith](https://docs.smith.langchain.com/)\n\n---\n\nFor further assistance, check community discussions on [Twitter](https://twitter.com/LangChainAI) or see the [GitHub repository](https://github.com/langchain-ai/langchain)."}
{"timestamp":"2024-10-29 13:43:40.059","prompt":"```json\n[\"https://auth0.com/docs\"]\n```","response":"```json\n[\"https://auth0.com/docs\"]\n```"}
{"timestamp":"2024-10-29 13:44:27.569","prompt":"```json\n[\"https://auth0.com/docs/api/authentication\"]\n```","response":"```json\n[\"https://auth0.com/docs/api/authentication\"]\n```"}
{"timestamp":"2024-10-29 14:28:58.516","prompt":"```json\n[\n    \"https://www.merriam-webster.com/dictionary/query\",\n    \"https://www.cambridge.org/us/dictionary/english/query\",\n    \"https://www.vocabulary.com/dictionary/query\",\n    \"https://www.techtarget.com/searchdatamanagement/definition/query\",\n    \"https://www.indeed.com/career-advice/career-development/how-to-write-a-query-letter\"\n]\n```","response":"```json\n[\n    \"https://www.merriam-webster.com/dictionary/query\",\n    \"https://www.cambridge.org/us/dictionary/english/query\",\n    \"https://www.vocabulary.com/dictionary/query\",\n    \"https://www.techtarget.com/searchdatamanagement/definition/query\",\n    \"https://www.indeed.com/career-advice/career-development/how-to-write-a-query-letter\"\n]\n```"}
{"timestamp":"2024-10-29 14:29:46.020","prompt":"```json\n[\"https://www.youtube.com/c/HelloXRyan/videos\"]\n```","response":"```json\n[\"https://www.youtube.com/c/HelloXRyan/videos\"]\n```"}
{"timestamp":"2024-10-29 14:30:19.465","prompt":"auth0_platform_overview_and_cookies_info","response":"auth0_platform_overview_and_cookies_info"}
{"timestamp":"2024-10-29 14:30:36.413","prompt":"```markdown\n# Start Building\n\n### Choose your application type to get started\n\n- **Native/Mobile App**  \n  Mobile or Desktop app that runs natively on a device  \n  e.g., iOS, Android\n  \n- **Single-Page App**  \n  JavaScript web app that runs in the browser  \n  e.g., AngularJS + Node.js, React\n  \n- **Regular Web App**  \n  Traditional web app that runs on the server  \n  e.g., Express.js, ASP.NET\n  \n- **Backend/API**  \n  An API or service protected by Auth0  \n  e.g., Express.js API, ASP.NET API\n\n## Learn about Auth0\n\nRely on the Auth0 identity platform to add sophisticated authentication and authorization to your applications. Centralize and manage users from multiple identity providers and give them branded, seamless signup and login experiences. Finely control access with a degree of customization that can accommodate even the most complex security requirements.\n\n## Get Started\n\nLearn the basics and begin building your authentication solution.  \n- [Authenticate](https://auth0.com/docs/authenticate) - Define how your applications and APIs verify the identity of a user or device.  \n- [Manage Users](https://auth0.com/docs/manage-users) - Store and manage custom details about your users.  \n- [Customize](https://auth0.com/docs/customize) - Customize Auth0 using your own branding and extend our functionality to solve your unique identity needs.  \n- [Secure](https://auth0.com/docs/secure) - Add multi-factor authentication and defend your application from bots, suspicious IPs, and password breaches.  \n- [Deploy and Monitor](https://auth0.com/docs/deploy-monitor) - Deploy Auth0 for your applications and monitor system health and events.  \n- [Troubleshoot](https://auth0.com/docs/troubleshoot) - Troubleshoot challenges, learn about Auth0’s different levels of support, and get help.\n\n## Developers\n\n- [Developer Hub](https://developer.auth0.com/resources)  \n- [Code Samples and Guides](https://developer.auth0.com/resources/code-samples)  \n- [Blog posts](https://auth0.com/blog/developers/)  \n- [Videos](https://auth0.com/docs/videos)  \n- [Identity Unlocked - Podcasts](https://identityunlocked.auth0.com/public/49/Identity,-Unlocked--bed7fada)  \n- [Zero Index Newsletter](https://developer.auth0.com/newsletter)  \n\n## Documentation\n\n- [Articles](https://auth0.com/docs/articles)  \n- [Quickstarts](https://auth0.com/docs/quickstarts)  \n- [APIs](https://auth0.com/docs/api)  \n- [SDK Libraries](https://auth0.com/docs/libraries)  \n- [Blog](https://auth0.com/blog/)  \n- [Reports](https://auth0.com/resources/ebooks)  \n- [Webinars](https://auth0.com/resources/webinars)  \n\n## Get Involved\n\n- [Forum](https://community.auth0.com/)  \n- [Events](https://developer.auth0.com/events)  \n- [Ambassador Program](https://auth0.com/ambassador-program)  \n- [Auth0 Research Program](https://auth0.com/research-program)  \n\n## Company\n\n- [Our Customers](https://auth0.com/customers)  \n- [Compliance - Ensuring privacy and security](https://auth0.com/security)  \n- [Partners](https://auth0.com/partners)  \n- [Careers](https://www.okta.com/company/careers/)  \n- [Okta + Auth0](https://www.okta.com/okta-and-auth0/)  \n\n## Support Center\n\n- [Community](https://community.auth0.com/)  \n- [Support](https://support.auth0.com/)  \n- [Help](https://community.auth0.com/c/help/6)  \n- [FAQs](https://community.auth0.com/c/faq/42)  \n- [Auth0 Marketplace](https://marketplace.auth0.com)  \n\n## Learning\n\n- [Learn](https://auth0.com/learn)  \n- [Intro to IAM (CIAM)](https://auth0.com/intro-to-iam)  \n- [Blog](https://auth0.com/blog/)  \n\n## Platform\n\n- [Access Management](https://auth0.com/platform/access-management)  \n- [Extensibility](https://auth0.com/platform/extensibility)  \n- [Security](https://auth0.com/platform/login-security)  \n- [User Management](https://auth0.com/platform/user-management)  \n- [Authentication](https://auth0.com/platform/authentication)  \n\n## Features\n\n- [Universal Login](https://auth0.com/features/universal-login)  \n- [Single Sign On](https://auth0.com/features/single-sign-on)  \n- [Multifactor Authentication](https://auth0.com/features/multifactor-authentication)  \n- [Actions](https://auth0.com/features/actions)  \n- [Machine to Machine](https://auth0.com/features/machine-to-machine)  \n- [Passwordless](https://auth0.com/features/passwordless)  \n- [Breached Passwords](https://auth0.com/features/breached-passwords)  \n\n---\n\n© 2024 Okta, Inc. All Rights Reserved.  \n[Status](https://status.auth0.com) • [Legal](https://www.okta.com/agreements/) • [Privacy](https://auth0.com/privacy) • [Terms](https://auth0.com/web-terms) • [Your Privacy Choices](https://auth0.com/your-privacy-choices)\n```","response":"```markdown\n# Start Building\n\n### Choose your application type to get started\n\n- **Native/Mobile App**  \n  Mobile or Desktop app that runs natively on a device  \n  e.g., iOS, Android\n  \n- **Single-Page App**  \n  JavaScript web app that runs in the browser  \n  e.g., AngularJS + Node.js, React\n  \n- **Regular Web App**  \n  Traditional web app that runs on the server  \n  e.g., Express.js, ASP.NET\n  \n- **Backend/API**  \n  An API or service protected by Auth0  \n  e.g., Express.js API, ASP.NET API\n\n## Learn about Auth0\n\nRely on the Auth0 identity platform to add sophisticated authentication and authorization to your applications. Centralize and manage users from multiple identity providers and give them branded, seamless signup and login experiences. Finely control access with a degree of customization that can accommodate even the most complex security requirements.\n\n## Get Started\n\nLearn the basics and begin building your authentication solution.  \n- [Authenticate](https://auth0.com/docs/authenticate) - Define how your applications and APIs verify the identity of a user or device.  \n- [Manage Users](https://auth0.com/docs/manage-users) - Store and manage custom details about your users.  \n- [Customize](https://auth0.com/docs/customize) - Customize Auth0 using your own branding and extend our functionality to solve your unique identity needs.  \n- [Secure](https://auth0.com/docs/secure) - Add multi-factor authentication and defend your application from bots, suspicious IPs, and password breaches.  \n- [Deploy and Monitor](https://auth0.com/docs/deploy-monitor) - Deploy Auth0 for your applications and monitor system health and events.  \n- [Troubleshoot](https://auth0.com/docs/troubleshoot) - Troubleshoot challenges, learn about Auth0’s different levels of support, and get help.\n\n## Developers\n\n- [Developer Hub](https://developer.auth0.com/resources)  \n- [Code Samples and Guides](https://developer.auth0.com/resources/code-samples)  \n- [Blog posts](https://auth0.com/blog/developers/)  \n- [Videos](https://auth0.com/docs/videos)  \n- [Identity Unlocked - Podcasts](https://identityunlocked.auth0.com/public/49/Identity,-Unlocked--bed7fada)  \n- [Zero Index Newsletter](https://developer.auth0.com/newsletter)  \n\n## Documentation\n\n- [Articles](https://auth0.com/docs/articles)  \n- [Quickstarts](https://auth0.com/docs/quickstarts)  \n- [APIs](https://auth0.com/docs/api)  \n- [SDK Libraries](https://auth0.com/docs/libraries)  \n- [Blog](https://auth0.com/blog/)  \n- [Reports](https://auth0.com/resources/ebooks)  \n- [Webinars](https://auth0.com/resources/webinars)  \n\n## Get Involved\n\n- [Forum](https://community.auth0.com/)  \n- [Events](https://developer.auth0.com/events)  \n- [Ambassador Program](https://auth0.com/ambassador-program)  \n- [Auth0 Research Program](https://auth0.com/research-program)  \n\n## Company\n\n- [Our Customers](https://auth0.com/customers)  \n- [Compliance - Ensuring privacy and security](https://auth0.com/security)  \n- [Partners](https://auth0.com/partners)  \n- [Careers](https://www.okta.com/company/careers/)  \n- [Okta + Auth0](https://www.okta.com/okta-and-auth0/)  \n\n## Support Center\n\n- [Community](https://community.auth0.com/)  \n- [Support](https://support.auth0.com/)  \n- [Help](https://community.auth0.com/c/help/6)  \n- [FAQs](https://community.auth0.com/c/faq/42)  \n- [Auth0 Marketplace](https://marketplace.auth0.com)  \n\n## Learning\n\n- [Learn](https://auth0.com/learn)  \n- [Intro to IAM (CIAM)](https://auth0.com/intro-to-iam)  \n- [Blog](https://auth0.com/blog/)  \n\n## Platform\n\n- [Access Management](https://auth0.com/platform/access-management)  \n- [Extensibility](https://auth0.com/platform/extensibility)  \n- [Security](https://auth0.com/platform/login-security)  \n- [User Management](https://auth0.com/platform/user-management)  \n- [Authentication](https://auth0.com/platform/authentication)  \n\n## Features\n\n- [Universal Login](https://auth0.com/features/universal-login)  \n- [Single Sign On](https://auth0.com/features/single-sign-on)  \n- [Multifactor Authentication](https://auth0.com/features/multifactor-authentication)  \n- [Actions](https://auth0.com/features/actions)  \n- [Machine to Machine](https://auth0.com/features/machine-to-machine)  \n- [Passwordless](https://auth0.com/features/passwordless)  \n- [Breached Passwords](https://auth0.com/features/breached-passwords)  \n\n---\n\n© 2024 Okta, Inc. All Rights Reserved.  \n[Status](https://status.auth0.com) • [Legal](https://www.okta.com/agreements/) • [Privacy](https://auth0.com/privacy) • [Terms](https://auth0.com/web-terms) • [Your Privacy Choices](https://auth0.com/your-privacy-choices)\n```"}
{"timestamp":"2024-10-29 15:06:44.476","prompt":"```json\n[\"https://docs.python.org/\"]\n```","response":"```json\n[\"https://docs.python.org/\"]\n```"}
{"timestamp":"2024-10-29 15:07:17.210","prompt":"python_3_13_0_official_documentation_overview","response":"python_3_13_0_official_documentation_overview"}
{"timestamp":"2024-10-29 15:07:37.372","prompt":"[![Python logo](https://www.python.org/)](https://www.python.org/) dev  \n(3.14)3.13.03.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6  \nEnglish | Spanish | French | Italian | Japanese | Korean | Brazilian Portuguese | Turkish | Simplified Chinese | Traditional Chinese  \nTheme: Auto | Light | Dark  \n\n## Download\n\n[Download these documents](download.html)\n\n## Docs by version\n\n- [Python 3.14 (in development)](https://docs.python.org/3.14/)\n- [Python 3.13 (stable)](https://docs.python.org/3.13/)\n- [Python 3.12 (stable)](https://docs.python.org/3.12/)\n- [Python 3.11 (security-fixes)](https://docs.python.org/3.11/)\n- [Python 3.10 (security-fixes)](https://docs.python.org/3.10/)\n- [Python 3.9 (security-fixes)](https://docs.python.org/3.9/)\n- [Python 3.8 (EOL)](https://docs.python.org/3.8/)\n- [Python 3.7 (EOL)](https://docs.python.org/3.7/)\n- [Python 3.6 (EOL)](https://docs.python.org/3.6/)\n- [Python 3.5 (EOL)](https://docs.python.org/3.5/)\n- [Python 3.4 (EOL)](https://docs.python.org/3.4/)\n- [Python 3.3 (EOL)](https://docs.python.org/3.3/)\n- [Python 3.2 (EOL)](https://docs.python.org/3.2/)\n- [Python 3.1 (EOL)](https://docs.python.org/3.1/)\n- [Python 3.0 (EOL)](https://docs.python.org/3.0/)\n- [Python 2.7 (EOL)](https://docs.python.org/2.7/)\n- [Python 2.6 (EOL)](https://docs.python.org/2.6/)\n- [All versions](https://www.python.org/doc/versions/)\n\n## Other resources\n\n- [PEP Index](https://peps.python.org)\n- [Beginner's Guide](https://wiki.python.org/moin/BeginnersGuide)\n- [Book List](https://wiki.python.org/moin/PythonBooks)\n- [Audio/Visual Talks](https://www.python.org/doc/av/)\n- [Python Developer’s Guide](https://devguide.python.org/)\n\n## Navigation\n\n- [index](genindex.html)\n- [modules](py-modindex.html) |\n- [Python logo](https://www.python.org/)\n- [Python](https://www.python.org/) »\n- English | Spanish | French | Italian | Japanese | Korean | Brazilian Portuguese | Turkish | Simplified Chinese | Traditional Chinese  \n- dev (3.14)3.13.03.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6\n- [3.13.0 Documentation](#) »\n\n### Python 3.13.0 documentation\n\nWelcome! This is the official documentation for Python 3.13.0.\n\n**Documentation sections:**\n\n|                                         |                                       |\n|-----------------------------------------|---------------------------------------|\n| [What's new in Python 3.13?](whatsnew/3.13.html)        | [Installing Python modules](installing/index.html)       |\n| Or [all \"What's new\" documents since Python 2.0](whatsnew/index.html) | Third-party modules and PyPI.org      |\n| [Tutorial](tutorial/index.html)        | [Distributing Python modules](distributing/index.html) |\n| Start here: a tour of Python's syntax and features | Publishing modules for use by other people |\n| [Library reference](library/index.html) | [Extending and embedding](extending/index.html) |\n| Standard library and builtins          | For C/C++ programmers                |\n| [Language reference](reference/index.html) | [Python's C API](c-api/index.html) |\n| Syntax and language elements           | C API reference                      |\n| [Python setup and usage](using/index.html) | [FAQs](faq/index.html)               |\n| How to install, configure, and use Python | Frequently asked questions (with answers!) |\n| [Python HOWTOs](howto/index.html)     | [Deprecations](deprecations/index.html) |\n| In-depth topic manuals                 | Deprecated functionality             |\n\n**Indices, glossary, and search:**\n\n|                                       |                                     |\n|---------------------------------------|-------------------------------------|\n| [Global module index](py-modindex.html)                  | [Search page](search.html)                   |\n| All modules and libraries         | Search this documentation           |\n| [General index](genindex.html)    | [Complete table of contents](contents.html)    |\n| All functions, classes, and terms | Lists all sections and subsections  |\n| [Glossary](glossary.html)         |                                     |\n| Terms explained                   |                                     |\n\n**Project information:**\n\n|                                       |                                     |\n|---------------------------------------|-------------------------------------|\n| [Reporting issues](bugs.html)      | [History and license of Python](license.html) |\n| [Contributing to Docs](https://devguide.python.org/documentation/help-documenting/) | [Copyright](copyright.html)       |\n| [Download the documentation](download.html) | [About the documentation](about.html) |\n\n## Download\n\n[Download these documents](download.html)\n\n## Docs by version\n\n(repeat list of versions...)\n\n## Other resources\n\n(repeat list of other resources...)\n\n## Navigation\n\n(repeat navigation...)\n\n---\n\n© [Copyright](copyright.html) 2001-2024, Python Software Foundation.  \nThis page is licensed under the Python Software Foundation License Version 2.  \nExamples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.  \nSee [History and License](license.html) for more information.\n\nThe Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/)\n\nLast updated on Oct 29, 2024 (09:47 UTC). [Found a bug?](bugs.html)  \nCreated using [Sphinx](https://www.sphinx-doc.org/) 8.1.3.","response":"[![Python logo](https://www.python.org/)](https://www.python.org/) dev  \n(3.14)3.13.03.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6  \nEnglish | Spanish | French | Italian | Japanese | Korean | Brazilian Portuguese | Turkish | Simplified Chinese | Traditional Chinese  \nTheme: Auto | Light | Dark  \n\n## Download\n\n[Download these documents](download.html)\n\n## Docs by version\n\n- [Python 3.14 (in development)](https://docs.python.org/3.14/)\n- [Python 3.13 (stable)](https://docs.python.org/3.13/)\n- [Python 3.12 (stable)](https://docs.python.org/3.12/)\n- [Python 3.11 (security-fixes)](https://docs.python.org/3.11/)\n- [Python 3.10 (security-fixes)](https://docs.python.org/3.10/)\n- [Python 3.9 (security-fixes)](https://docs.python.org/3.9/)\n- [Python 3.8 (EOL)](https://docs.python.org/3.8/)\n- [Python 3.7 (EOL)](https://docs.python.org/3.7/)\n- [Python 3.6 (EOL)](https://docs.python.org/3.6/)\n- [Python 3.5 (EOL)](https://docs.python.org/3.5/)\n- [Python 3.4 (EOL)](https://docs.python.org/3.4/)\n- [Python 3.3 (EOL)](https://docs.python.org/3.3/)\n- [Python 3.2 (EOL)](https://docs.python.org/3.2/)\n- [Python 3.1 (EOL)](https://docs.python.org/3.1/)\n- [Python 3.0 (EOL)](https://docs.python.org/3.0/)\n- [Python 2.7 (EOL)](https://docs.python.org/2.7/)\n- [Python 2.6 (EOL)](https://docs.python.org/2.6/)\n- [All versions](https://www.python.org/doc/versions/)\n\n## Other resources\n\n- [PEP Index](https://peps.python.org)\n- [Beginner's Guide](https://wiki.python.org/moin/BeginnersGuide)\n- [Book List](https://wiki.python.org/moin/PythonBooks)\n- [Audio/Visual Talks](https://www.python.org/doc/av/)\n- [Python Developer’s Guide](https://devguide.python.org/)\n\n## Navigation\n\n- [index](genindex.html)\n- [modules](py-modindex.html) |\n- [Python logo](https://www.python.org/)\n- [Python](https://www.python.org/) »\n- English | Spanish | French | Italian | Japanese | Korean | Brazilian Portuguese | Turkish | Simplified Chinese | Traditional Chinese  \n- dev (3.14)3.13.03.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6\n- [3.13.0 Documentation](#) »\n\n### Python 3.13.0 documentation\n\nWelcome! This is the official documentation for Python 3.13.0.\n\n**Documentation sections:**\n\n|                                         |                                       |\n|-----------------------------------------|---------------------------------------|\n| [What's new in Python 3.13?](whatsnew/3.13.html)        | [Installing Python modules](installing/index.html)       |\n| Or [all \"What's new\" documents since Python 2.0](whatsnew/index.html) | Third-party modules and PyPI.org      |\n| [Tutorial](tutorial/index.html)        | [Distributing Python modules](distributing/index.html) |\n| Start here: a tour of Python's syntax and features | Publishing modules for use by other people |\n| [Library reference](library/index.html) | [Extending and embedding](extending/index.html) |\n| Standard library and builtins          | For C/C++ programmers                |\n| [Language reference](reference/index.html) | [Python's C API](c-api/index.html) |\n| Syntax and language elements           | C API reference                      |\n| [Python setup and usage](using/index.html) | [FAQs](faq/index.html)               |\n| How to install, configure, and use Python | Frequently asked questions (with answers!) |\n| [Python HOWTOs](howto/index.html)     | [Deprecations](deprecations/index.html) |\n| In-depth topic manuals                 | Deprecated functionality             |\n\n**Indices, glossary, and search:**\n\n|                                       |                                     |\n|---------------------------------------|-------------------------------------|\n| [Global module index](py-modindex.html)                  | [Search page](search.html)                   |\n| All modules and libraries         | Search this documentation           |\n| [General index](genindex.html)    | [Complete table of contents](contents.html)    |\n| All functions, classes, and terms | Lists all sections and subsections  |\n| [Glossary](glossary.html)         |                                     |\n| Terms explained                   |                                     |\n\n**Project information:**\n\n|                                       |                                     |\n|---------------------------------------|-------------------------------------|\n| [Reporting issues](bugs.html)      | [History and license of Python](license.html) |\n| [Contributing to Docs](https://devguide.python.org/documentation/help-documenting/) | [Copyright](copyright.html)       |\n| [Download the documentation](download.html) | [About the documentation](about.html) |\n\n## Download\n\n[Download these documents](download.html)\n\n## Docs by version\n\n(repeat list of versions...)\n\n## Other resources\n\n(repeat list of other resources...)\n\n## Navigation\n\n(repeat navigation...)\n\n---\n\n© [Copyright](copyright.html) 2001-2024, Python Software Foundation.  \nThis page is licensed under the Python Software Foundation License Version 2.  \nExamples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.  \nSee [History and License](license.html) for more information.\n\nThe Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/)\n\nLast updated on Oct 29, 2024 (09:47 UTC). [Found a bug?](bugs.html)  \nCreated using [Sphinx](https://www.sphinx-doc.org/) 8.1.3."}
{"timestamp":"2024-11-07 14:49:38.135","prompt":"twilio-programmable-voice-websocket-messages-guide","response":"twilio-programmable-voice-websocket-messages-guide"}
{"timestamp":"2024-11-07 14:50:02.399","prompt":"# Getting Started with Programmable Voice\n\n## No-code Quickstart\n- [No-code quickstart](#)\n- [C#/.NET quickstart](#)\n- [Java quickstart](#)\n- [Node.js quickstart](#)\n- [PHP quickstart](#)\n- [Python quickstart](#)\n- [Ruby quickstart](#)\n- [Go quickstart](#)\n- [Android SDK quickstart](#)\n- [iOS SDK quickstart (Objective-C and Swift)](#)\n- [JavaScript SDK quickstarts](#)\n- [React Native SDK quickstart](#)\n\n## Tutorials\n- [Make outbound phone calls](#)\n- [Respond to incoming phone calls](#)\n- [Modify calls in progress](#)\n- [Record phone calls](#)\n- [Create conference calls](#)\n- [Gather user input via keypad](#)\n- [Retrieve call logs](#)\n- [Consume a real-time Media Stream using WebSockets, Python, and Flask](#)\n- [Capture a payment during a call](#)\n- [Build an Interactive Voice Response (IVR) Phone Tree](#)\n- [Build Warm Transfers with Twilio](#)\n- [Encrypt your voice recordings](#)\n- [Make and receive phone calls in the browser](#)\n- [Build an Automated Survey with Twilio Programmable Voice](#)\n- [Add programmability to your existing SIP network](#)\n\n## Make Emergency Calls\n- [Overview](#)\n- [Emergency telephone numbers](#)\n\n## API Reference\n- [Voice API Overview](#)\n- [Application Resource](#)\n- [Call Resource](#)\n- [Conference Resource](#)\n- [Queue Resource](#)\n- [Recording Resource](#)\n- [TwiML Overview](#)\n\n## Media Streams - WebSocket Messages\n\n### Support for Twilio Regions\nMedia Streams is available in the Ireland (IE1) and Australia (AU1) Regions. \n\nFor outbound and inbound calls: \n- [Follow the guide for outbound calls in non-US Regions](#)\n- [Follow the guide for inbound call processing in non-US Regions](#)\n\n### WebSocket Messages\nTwilio sends the following message types to your WebSocket server during a Stream:\n- **Connected**\n- **Start**\n- **Media**\n- **DTMF**\n- **Stop**\n- **Mark** (only for bidirectional Streams)\n\n### Connected Message\nThe `connected` message is sent when the WebSocket connection is established. This is the first message received by your WebSocket server. \n\n**Example:**\n```json\n{ \n  \"event\": \"connected\",\n  \"protocol\": \"Call\", \n  \"version\": \"1.0.0\"\n}\n```\n\n### Start Message\nThe `start` message contains metadata about the Stream and is sent immediately after the `connected` message. \n\n**Example:**\n```json\n{\n  \"event\": \"start\",\n  \"sequenceNumber\": \"1\",\n  \"start\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"tracks\": [\"inbound\"],\n    \"mediaFormat\": { \n      \"encoding\": \"audio/x-mulaw\", \n      \"sampleRate\": 8000, \n      \"channels\": 1 \n    },\n    \"customParameters\": {\n      \"FirstName\": \"Jane\",\n      \"LastName\": \"Doe\",\n      \"RemoteParty\": \"Bob\"\n    }\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Media Message\nThis type encapsulates the raw audio data. \n\n**Example (Outbound):**\n```json\n{ \n  \"event\": \"media\",\n  \"sequenceNumber\": \"3\", \n  \"media\": { \n    \"track\": \"outbound\", \n    \"chunk\": \"1\", \n    \"timestamp\": \"5\",\n    \"payload\": \"no+JhoaJjpz...\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Stop Message\nA `stop` message is sent when the Stream has stopped or the call has ended.\n\n**Example:**\n```json\n{ \n  \"event\": \"stop\",\n  \"sequenceNumber\": \"5\",\n  \"stop\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" \n}\n```\n\n### DTMF Message\nSent when someone presses a touch-tone number key in the inbound stream.\n\n**Example:**\n```json\n{ \n  \"event\": \"dtmf\", \n  \"streamSid\":\"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \n  \"sequenceNumber\":\"5\", \n  \"dtmf\": { \n    \"track\":\"inbound_track\", \n    \"digit\": \"1\"\n  }\n}\n```\n\n### Mark Message\nThis message is sent during bidirectional Streams. \n\n**Example:**\n```json\n{ \n  \"event\": \"mark\",\n  \"sequenceNumber\": \"4\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"mark\": {\n    \"name\": \"my label\"\n  }\n}\n```\n\n## Send WebSocket Messages to Twilio\nYour Stream is bidirectional if initiated using `<Connect><Stream>`, allowing you to send WebSocket messages back to Twilio.\n\n### Send a Media Message\nTo send media back, provide a properly formatted `media` message.\n\n### Send a Mark Message\nSend a `mark` event to be notified when the audio has completed.\n\n### Send a Clear Message\nSend a `clear` message to interrupt the audio that has been sent.\n\n## Need some Help?\nFor assistance, reach out to our [support team](https://help.twilio.com) or visit the [Twilio tag on Stack Overflow](https://stackoverflow.com/questions/tagged/twilio).\n\n## Legal Information\n- [Terms of Service](#)\n- [Privacy Policy](#)\n\nCopyright © 2024 Twilio Inc.","response":"# Getting Started with Programmable Voice\n\n## No-code Quickstart\n- [No-code quickstart](#)\n- [C#/.NET quickstart](#)\n- [Java quickstart](#)\n- [Node.js quickstart](#)\n- [PHP quickstart](#)\n- [Python quickstart](#)\n- [Ruby quickstart](#)\n- [Go quickstart](#)\n- [Android SDK quickstart](#)\n- [iOS SDK quickstart (Objective-C and Swift)](#)\n- [JavaScript SDK quickstarts](#)\n- [React Native SDK quickstart](#)\n\n## Tutorials\n- [Make outbound phone calls](#)\n- [Respond to incoming phone calls](#)\n- [Modify calls in progress](#)\n- [Record phone calls](#)\n- [Create conference calls](#)\n- [Gather user input via keypad](#)\n- [Retrieve call logs](#)\n- [Consume a real-time Media Stream using WebSockets, Python, and Flask](#)\n- [Capture a payment during a call](#)\n- [Build an Interactive Voice Response (IVR) Phone Tree](#)\n- [Build Warm Transfers with Twilio](#)\n- [Encrypt your voice recordings](#)\n- [Make and receive phone calls in the browser](#)\n- [Build an Automated Survey with Twilio Programmable Voice](#)\n- [Add programmability to your existing SIP network](#)\n\n## Make Emergency Calls\n- [Overview](#)\n- [Emergency telephone numbers](#)\n\n## API Reference\n- [Voice API Overview](#)\n- [Application Resource](#)\n- [Call Resource](#)\n- [Conference Resource](#)\n- [Queue Resource](#)\n- [Recording Resource](#)\n- [TwiML Overview](#)\n\n## Media Streams - WebSocket Messages\n\n### Support for Twilio Regions\nMedia Streams is available in the Ireland (IE1) and Australia (AU1) Regions. \n\nFor outbound and inbound calls: \n- [Follow the guide for outbound calls in non-US Regions](#)\n- [Follow the guide for inbound call processing in non-US Regions](#)\n\n### WebSocket Messages\nTwilio sends the following message types to your WebSocket server during a Stream:\n- **Connected**\n- **Start**\n- **Media**\n- **DTMF**\n- **Stop**\n- **Mark** (only for bidirectional Streams)\n\n### Connected Message\nThe `connected` message is sent when the WebSocket connection is established. This is the first message received by your WebSocket server. \n\n**Example:**\n```json\n{ \n  \"event\": \"connected\",\n  \"protocol\": \"Call\", \n  \"version\": \"1.0.0\"\n}\n```\n\n### Start Message\nThe `start` message contains metadata about the Stream and is sent immediately after the `connected` message. \n\n**Example:**\n```json\n{\n  \"event\": \"start\",\n  \"sequenceNumber\": \"1\",\n  \"start\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"tracks\": [\"inbound\"],\n    \"mediaFormat\": { \n      \"encoding\": \"audio/x-mulaw\", \n      \"sampleRate\": 8000, \n      \"channels\": 1 \n    },\n    \"customParameters\": {\n      \"FirstName\": \"Jane\",\n      \"LastName\": \"Doe\",\n      \"RemoteParty\": \"Bob\"\n    }\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Media Message\nThis type encapsulates the raw audio data. \n\n**Example (Outbound):**\n```json\n{ \n  \"event\": \"media\",\n  \"sequenceNumber\": \"3\", \n  \"media\": { \n    \"track\": \"outbound\", \n    \"chunk\": \"1\", \n    \"timestamp\": \"5\",\n    \"payload\": \"no+JhoaJjpz...\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Stop Message\nA `stop` message is sent when the Stream has stopped or the call has ended.\n\n**Example:**\n```json\n{ \n  \"event\": \"stop\",\n  \"sequenceNumber\": \"5\",\n  \"stop\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" \n}\n```\n\n### DTMF Message\nSent when someone presses a touch-tone number key in the inbound stream.\n\n**Example:**\n```json\n{ \n  \"event\": \"dtmf\", \n  \"streamSid\":\"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \n  \"sequenceNumber\":\"5\", \n  \"dtmf\": { \n    \"track\":\"inbound_track\", \n    \"digit\": \"1\"\n  }\n}\n```\n\n### Mark Message\nThis message is sent during bidirectional Streams. \n\n**Example:**\n```json\n{ \n  \"event\": \"mark\",\n  \"sequenceNumber\": \"4\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"mark\": {\n    \"name\": \"my label\"\n  }\n}\n```\n\n## Send WebSocket Messages to Twilio\nYour Stream is bidirectional if initiated using `<Connect><Stream>`, allowing you to send WebSocket messages back to Twilio.\n\n### Send a Media Message\nTo send media back, provide a properly formatted `media` message.\n\n### Send a Mark Message\nSend a `mark` event to be notified when the audio has completed.\n\n### Send a Clear Message\nSend a `clear` message to interrupt the audio that has been sent.\n\n## Need some Help?\nFor assistance, reach out to our [support team](https://help.twilio.com) or visit the [Twilio tag on Stack Overflow](https://stackoverflow.com/questions/tagged/twilio).\n\n## Legal Information\n- [Terms of Service](#)\n- [Privacy Policy](#)\n\nCopyright © 2024 Twilio Inc."}
{"timestamp":"2024-11-07 14:50:08.147","prompt":"twilio_privacy_notice_update_oct_2023","response":"twilio_privacy_notice_update_oct_2023"}
{"timestamp":"2024-11-07 14:50:37.406","prompt":"```markdown\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-5JLZ694\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n## Language Selection\n- [日本語](#)\n- [English (Selected language icon)](#)\n\n## Support\n- [Help Center](#)\n- [Talk to Support](#)\n- [Training](#)\n- [Support Plans](#)\n- [Partner Solutions](#)\n\n- [Login](#)\n- [Console](#)\n\n![Twilio logo](#)\n\n## Products\n### Communications\n- **Messaging**  \n  Send and receive multichannel text and media messages in 180+ countries.  \n  [SMS](#) [WhatsApp](#) [Conversations](#) [RCS](#)\n\n- **Voice**  \n  Make, receive, and monitor calls around the world.  \n  [PSTN](#) [SIP Trunking](#) [SDK](#)\n\n- **Verify**  \n  Globally-managed multichannel 2FA and passwordless authentication. \n\n- **Lookup**  \n  Know your customer and assess identity risk with real-time phone intelligence. \n\n- **Email**  \n  Deliver email messages reliably at scale with SendGrid. \n\n- **Serverless**  \n  Build, deploy, and run apps with Twilio’s serverless environment and visual builder. \n\n- **Phone Numbers**  \n  Access local, national, and toll-free phone numbers.  \n  [Toll-Free](#) [10DLC](#) [Short Codes](#)\n\n- **Video**  \n  Connect virtually with secure, high-quality video calling at global scale. \n\n### Applications\n- **Twilio Flex**  \n  Digital engagement center for customer service and sales.  \n  [Contact center](#)\n\n- **Twilio Engage**  \n  Create multi-channel campaigns with a unified data-first platform. \n\n- **Marketing Campaigns**  \n  Create and manage email marketing campaigns with SendGrid. \n\n### Customer Data\n- **Twilio Segment**  \n  Unify your customer data with Segment CDP to power personalized engagement. \n\n- **Connections**  \n  Integrate web and mobile app data with a single API.  \n  [Reverse ETL](#)\n\n- **Protocols**  \n  Protect the integrity of your data. \n\n- **Unify**  \n  Unify customer data across every channel.  \n  [Profiles Sync](#)\n\n- **Journeys**  \n  Orchestrate multichannel customer journeys. \n\n[See all products](#)\n\n## Solutions\n### Use Cases\n- **Verification & identity**  \n  Add user verification to protect against fraud.  \n  [Fraud prevention](#)\n\n- **Alerts & notifications**  \n  Deliver notifications across text, email, voice.  \n  [Appointment reminders](#) [Lead alerts](#) [Mass texting](#)\n\n- **Marketing & promotions**  \n  Create multichannel marketing campaigns.  \n  [SMS marketing](#) [Customer surveys](#)\n\n- **Contact Center**  \n  Provide personalized, data-driven service. \n\n- **IVR & self-service**  \n  Set up a modern IVR with AI-enabled support.  \n  [Call tracking](#)\n\n### Teams\n- **Marketing**  \n  Keep customers engaged on any channel.\n\n- **Product & Engineering**  \n  Connect with target users reliably and securely.\n\n- **Customer Experience**  \n  Deliver personalized sales and support experiences at scale.\n\n- **Developers**  \n  Tutorials and docs to start building on Twilio.\n\n### Industries\n- **Financial Services**  \n- **Healthcare**  \n- **Hospitality**  \n- **Public Sector**  \n- **Real Estate**  \n- **Retail**  \n\n### Business Size\n- **Enterprise**  \n- **Startup**  \n- **Nonprofit**  \n\n[See all solutions](#)\n\n## Partners\n- **Find a partner**  \n  Work with a Twilio partner to buy or build the right solution.\n\n- **Partner with us**  \n  Join our Partner Program to build or sell Twilio solutions to your customers.\n\n## Twilio Services\n- **Professional Services**  \n  Get technical and strategic advice from Twilio experts.\n\n- **Training**  \n  Learn how to architect, build, and support your apps.\n\n## Developers\n### Documentation\n- [Twilio Flex](#)\n- [SMS](#)\n- [Voice](#)\n- [Email](#)\n- [WhatsApp API](#)\n- [Elastic SIP Trunking](#)\n- [Verify](#)\n- [Functions](#)\n- [Studio](#)\n- [Twilio CLI](#)\n\n[See all docs](#)\n\n## Community\n- **Ahoy!**  \n  Get inspired by the latest from our developer community. \n\n- **Developer Blog**  \n  Read tutorials, community projects, and product updates. \n\n- **Stack Overflow**  \n  Ask the Twilio community for help. \n\n- **Champions**  \n  Become a Twilio community Champion. \n\n## Tools & Resources\n- **CodeExchange**  \n  Usable code samples for faster builds.\n\n- **Changelog**  \n  See updates and additions to Twilio products. \n\n- **API Status**  \n  Check real-time monitoring of APIs and all services.\n\n## Why Twilio\n### Company\n- **Why Twilio**  \n  The trusted platform for data-driven customer engagement across any channel.\n\n- **About Us**  \n  Twilio company page.\n\n- **Twilio Magic**  \n  Twilio core values. \n\n- **Diversity**  \n  Diversity, equity, and inclusion.\n\n- **Investor Relations**  \n  Information for Twilio investors.\n\n- **Press & Media**  \n  Latest announcements and launches.\n\n### Our Platform\n- **Customer Engagement Platform**  \n  Build durable customer relationships with personalized, data-driven engagement.  \n  [Communication](#) [Customer Data](#)\n\n- **CustomerAI**  \n  Combine real-time engagement data with AI to know your customers better. \n\n- **Trust Center**  \n  Twilio’s security, data privacy, regulatory compliance, and resiliency policies. \n\n- **Super Network**  \n  Simplify, strengthen, and unite carrier communication networks using software. \n\n### Resources\n- **Resource Center**  \n  Browse our content library for more resources on how you can create lasting customer relationships.\n\n- **Customer Stories**  \n  See what customers are building with Twilio.\n\n- **Blog**  \n  Explore the latest product updates, technical tutorials, and best practices. \n\n- **State of Customer Engagement**  \n  See the top trends shaping customer engagement in our annual report.\n\n- **Twilio Events**  \n  Join upcoming group events.\n\n## Pricing\n### Communications\n- **Messaging**  \n  [SMS](#) [Whatsapp](#) [Conversations](#)\n\n- **Email** [Twilio SendGrid](#)\n\n- **Voice**  \n  [Conferencing](#) [SIP trunking](#)\n\n- **Verify**  \n\n- **Lookup**  \n\n- **Serverless**  \n\n- **Video**  \n\n### Applications\n- **Twilio Flex**  \n- **Twilio Engage**  \n- **Marketing Campaigns**  \n\n[See all pricing](#)\n\n---\n\n### Privacy Policies & Legal Notices\n- [Data Privacy at Twilio](#)\n- [Privacy Notice](#)\n- [Binding Corporate Rules](#)\n- [Supplier Code of Conduct](#)\n- [Twilio Code of Conduct](#)\n\n### Customer and Partner Agreements\n- [Terms of Service](#)\n- [Acceptable Use Policy](#)\n- [Service and Country Specific Requirements](#)\n- [Data Protection Addendum (DPA)](#)\n```\n","response":"```markdown\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-5JLZ694\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n## Language Selection\n- [日本語](#)\n- [English (Selected language icon)](#)\n\n## Support\n- [Help Center](#)\n- [Talk to Support](#)\n- [Training](#)\n- [Support Plans](#)\n- [Partner Solutions](#)\n\n- [Login](#)\n- [Console](#)\n\n![Twilio logo](#)\n\n## Products\n### Communications\n- **Messaging**  \n  Send and receive multichannel text and media messages in 180+ countries.  \n  [SMS](#) [WhatsApp](#) [Conversations](#) [RCS](#)\n\n- **Voice**  \n  Make, receive, and monitor calls around the world.  \n  [PSTN](#) [SIP Trunking](#) [SDK](#)\n\n- **Verify**  \n  Globally-managed multichannel 2FA and passwordless authentication. \n\n- **Lookup**  \n  Know your customer and assess identity risk with real-time phone intelligence. \n\n- **Email**  \n  Deliver email messages reliably at scale with SendGrid. \n\n- **Serverless**  \n  Build, deploy, and run apps with Twilio’s serverless environment and visual builder. \n\n- **Phone Numbers**  \n  Access local, national, and toll-free phone numbers.  \n  [Toll-Free](#) [10DLC](#) [Short Codes](#)\n\n- **Video**  \n  Connect virtually with secure, high-quality video calling at global scale. \n\n### Applications\n- **Twilio Flex**  \n  Digital engagement center for customer service and sales.  \n  [Contact center](#)\n\n- **Twilio Engage**  \n  Create multi-channel campaigns with a unified data-first platform. \n\n- **Marketing Campaigns**  \n  Create and manage email marketing campaigns with SendGrid. \n\n### Customer Data\n- **Twilio Segment**  \n  Unify your customer data with Segment CDP to power personalized engagement. \n\n- **Connections**  \n  Integrate web and mobile app data with a single API.  \n  [Reverse ETL](#)\n\n- **Protocols**  \n  Protect the integrity of your data. \n\n- **Unify**  \n  Unify customer data across every channel.  \n  [Profiles Sync](#)\n\n- **Journeys**  \n  Orchestrate multichannel customer journeys. \n\n[See all products](#)\n\n## Solutions\n### Use Cases\n- **Verification & identity**  \n  Add user verification to protect against fraud.  \n  [Fraud prevention](#)\n\n- **Alerts & notifications**  \n  Deliver notifications across text, email, voice.  \n  [Appointment reminders](#) [Lead alerts](#) [Mass texting](#)\n\n- **Marketing & promotions**  \n  Create multichannel marketing campaigns.  \n  [SMS marketing](#) [Customer surveys](#)\n\n- **Contact Center**  \n  Provide personalized, data-driven service. \n\n- **IVR & self-service**  \n  Set up a modern IVR with AI-enabled support.  \n  [Call tracking](#)\n\n### Teams\n- **Marketing**  \n  Keep customers engaged on any channel.\n\n- **Product & Engineering**  \n  Connect with target users reliably and securely.\n\n- **Customer Experience**  \n  Deliver personalized sales and support experiences at scale.\n\n- **Developers**  \n  Tutorials and docs to start building on Twilio.\n\n### Industries\n- **Financial Services**  \n- **Healthcare**  \n- **Hospitality**  \n- **Public Sector**  \n- **Real Estate**  \n- **Retail**  \n\n### Business Size\n- **Enterprise**  \n- **Startup**  \n- **Nonprofit**  \n\n[See all solutions](#)\n\n## Partners\n- **Find a partner**  \n  Work with a Twilio partner to buy or build the right solution.\n\n- **Partner with us**  \n  Join our Partner Program to build or sell Twilio solutions to your customers.\n\n## Twilio Services\n- **Professional Services**  \n  Get technical and strategic advice from Twilio experts.\n\n- **Training**  \n  Learn how to architect, build, and support your apps.\n\n## Developers\n### Documentation\n- [Twilio Flex](#)\n- [SMS](#)\n- [Voice](#)\n- [Email](#)\n- [WhatsApp API](#)\n- [Elastic SIP Trunking](#)\n- [Verify](#)\n- [Functions](#)\n- [Studio](#)\n- [Twilio CLI](#)\n\n[See all docs](#)\n\n## Community\n- **Ahoy!**  \n  Get inspired by the latest from our developer community. \n\n- **Developer Blog**  \n  Read tutorials, community projects, and product updates. \n\n- **Stack Overflow**  \n  Ask the Twilio community for help. \n\n- **Champions**  \n  Become a Twilio community Champion. \n\n## Tools & Resources\n- **CodeExchange**  \n  Usable code samples for faster builds.\n\n- **Changelog**  \n  See updates and additions to Twilio products. \n\n- **API Status**  \n  Check real-time monitoring of APIs and all services.\n\n## Why Twilio\n### Company\n- **Why Twilio**  \n  The trusted platform for data-driven customer engagement across any channel.\n\n- **About Us**  \n  Twilio company page.\n\n- **Twilio Magic**  \n  Twilio core values. \n\n- **Diversity**  \n  Diversity, equity, and inclusion.\n\n- **Investor Relations**  \n  Information for Twilio investors.\n\n- **Press & Media**  \n  Latest announcements and launches.\n\n### Our Platform\n- **Customer Engagement Platform**  \n  Build durable customer relationships with personalized, data-driven engagement.  \n  [Communication](#) [Customer Data](#)\n\n- **CustomerAI**  \n  Combine real-time engagement data with AI to know your customers better. \n\n- **Trust Center**  \n  Twilio’s security, data privacy, regulatory compliance, and resiliency policies. \n\n- **Super Network**  \n  Simplify, strengthen, and unite carrier communication networks using software. \n\n### Resources\n- **Resource Center**  \n  Browse our content library for more resources on how you can create lasting customer relationships.\n\n- **Customer Stories**  \n  See what customers are building with Twilio.\n\n- **Blog**  \n  Explore the latest product updates, technical tutorials, and best practices. \n\n- **State of Customer Engagement**  \n  See the top trends shaping customer engagement in our annual report.\n\n- **Twilio Events**  \n  Join upcoming group events.\n\n## Pricing\n### Communications\n- **Messaging**  \n  [SMS](#) [Whatsapp](#) [Conversations](#)\n\n- **Email** [Twilio SendGrid](#)\n\n- **Voice**  \n  [Conferencing](#) [SIP trunking](#)\n\n- **Verify**  \n\n- **Lookup**  \n\n- **Serverless**  \n\n- **Video**  \n\n### Applications\n- **Twilio Flex**  \n- **Twilio Engage**  \n- **Marketing Campaigns**  \n\n[See all pricing](#)\n\n---\n\n### Privacy Policies & Legal Notices\n- [Data Privacy at Twilio](#)\n- [Privacy Notice](#)\n- [Binding Corporate Rules](#)\n- [Supplier Code of Conduct](#)\n- [Twilio Code of Conduct](#)\n\n### Customer and Partner Agreements\n- [Terms of Service](#)\n- [Acceptable Use Policy](#)\n- [Service and Country Specific Requirements](#)\n- [Data Protection Addendum (DPA)](#)\n```\n"}
{"timestamp":"2024-11-07 14:51:25.507","prompt":"```markdown\n## Do Not Track\n\nSome browsers allow a “Do Not Track” (DNT) setting that requests web applications to disable tracking of an individual user. When you turn on the DNT setting, your browser sends a special signal to websites, analytics companies, ad networks, plug-in providers, and other web services to stop tracking your activity. For more information on setting up DNT, visit the [All About DNT](https://allaboutdnt.com/) page. If you choose to set up DNT, we will automatically turn off all non-required cookies on Twilio’s websites for you. Please note that this may impact the functionality of our websites or your account.\n\n## Global Privacy Control\n\nGlobal Privacy Control (GPC) is a specification that allows you to inform websites of your privacy preferences regarding ad trackers. You can set up GPC by visiting the [Global Privacy Control](https://globalprivacycontrol.org/#about) page. If you choose to set up GPC, we will automatically turn off all non-required cookies on Twilio’s websites for you, but this may affect functionality.\n\n## Opting Out of Advertising Cookies\n\nTo learn more about how to opt out of targeting and advertising cookies, visit the following pages:\n\n- [Your Online Choices](http://www.youronlinechoices.com/uk/your-ad-choices)\n- [Network Advertising Initiative](https://optout.networkadvertising.org/?c=1)\n- [Digital Advertising Alliance’s Consumer Choice](https://optout.aboutads.info/?c=2&lang=EN)\n\nThese opt-out tools are provided by third parties, and we do not control or operate them.\n\n## Web Beacons\n\nTwilio uses web beacons to collect data about your use of our websites, your account, and interactions with emails we send. Web beacons are clear electronic images that recognize certain types of data on your computer, such as when you view a website linked to the web beacon. We may also include web beacons in marketing emails to notify us when you click on a link directing you to a Twilio website. We use web beacons to operate and improve our websites and email communications.\n\n## Global Privacy Compliance at Twilio\n\nAs a global company, Twilio is committed to privacy compliance across all regions, including the United States, European Economic Area (EEA), United Kingdom (UK), Latin America, and Asia-Pacific.\n\n### Regions Requiring a Legal Basis for Processing Personal Data\n\nIn regions like the EEA or the UK that require a legal basis for processing personal data, our legal basis for collecting and using personal data will depend on the specific context in which we collect it. Common bases include:\n\n- Performance of a contract\n- Legitimate interests not overridden by your rights\n- Your consent\n- Legal obligations to collect data, especially in government audits or law enforcement requests\n\nIf you have questions about our legal basis for collecting your personal data, please contact us using the information provided below.\n\n### United States\n\n#### State Consumer Access and Deletion Rights\n\nFor customers in the U.S. wanting information about our use of Customer Account Data or Customer Usage Data, you have the ability to request:\n\n- Details about the categories of personal data we collect and how we share it\n- Access to and a copy of the personal data collected\n- Updates or corrections to inaccurate personal data\n- Deletion of personal data we have about you\n\nRefer to the section on [How to make choices about your data](#how-to-make-choices-about-your-data) for guidance on how to make these requests. Please note we will verify that you are authorized to make the request. Requests do not need to come from specific states like California, Colorado, Utah, or Virginia. We won't discriminate against you for making a request, but deleting your data may affect your ability to use our service.\n\nFor Californians, here's what personal data we've shared recently for business purposes:\n\n- Identifiers\n- Commercial information\n- Financial information\n- Internet or other electronic activity information\n- Geolocation information\n- Professional or employment information\n\n### Other Regions\n\nFor regions outside of the EEA, UK, or US, we also comply with their specific requirements, such as Brazil's. Details for these countries can be found in our [Data Protection Addendum](https://www.twilio.com/en-us/legal/data-protection-addendum).\n\n### Privacy Compliance for Specific Individuals\n\n#### Employee Applicant and Employee Data\n\nFor job applicants and current/former employees, we maintain a \"no shenanigans\" approach to your personal data. For up-to-date information, refer to our [Applicant Privacy Notice](https://www.twilio.com/en-us/legal/privacy/Global-Applicant-Privacy-Notice).\n\n#### Information from Children\n\nTwilio does not knowingly allow children under the age of 13 (or under 16 in the EEA) to create accounts. If we discover an underage user, we will promptly remove their personal data. If you believe this has happened, please contact us at [privacy@twilio.com](mailto:privacy@twilio.com).\n\n## International Data Transfers\n\nAs a global entity, Twilio may transfer your personal data to affiliates, contractors, service providers, and third parties in various countries. We take appropriate safeguards to ensure your data remains protected.\n\n### Data Transfers\n\nWhen using our services, your personal data may be transferred to the United States and potentially other countries. This is often connected to routing communications efficiently.\n\n### Safeguards for Data Transfers\n\nTwilio employs appropriate safeguards for cross-border data transfers as required by local laws. In cases of international transfers, we conduct a [transfer impact assessment](https://support.twilio.com/hc/en-us/articles/4407117654555-Transfer-Impact-Assessment-Twilio-s-Onward-Data-Transfers). Our [Data Protection Addendum](https://www.twilio.com/en-us/legal/data-protection-addendum) provides detailed information about cross-border data transfers.\n\nWe are certified under the EU-U.S. Data Privacy Framework (EU-U.S. DPF), the UK extension to the EU-U.S. DPF, and the Swiss-U.S. DPF. For more information, visit the DPF website [here](https://www.dataprivacyframework.gov).\n\nTwilio has Binding Corporate Rules for internal transfers of personal data between Twilio Group Members within the EU and other regions. These BCRs are approved by EU Data Protection Authorities. Access Twilio’s BCR policies [here](https://www.twilio.com/en-us/legal/bcr).\n\n#### APEC CBPR and PRP Participation\n\nTwilio complies with APEC Cross Border Privacy Rules (CBPR) and Privacy Recognition for Processors (PRP) systems, ensuring personal data protection in participating economies. Additional information can be found [here](http://www.cbprs.org/).\n\n## Twilio Product Privacy\n\n### Authy Services\n\nAuthy offers standalone two-factor authentication (2FA) services. The Authy app generates one-time passwords and push notifications for added security. \n\n#### Data Collection\n\nAuthy collects similar data to Twilio and attempts to maintain security and anti-fraud measures:\n\n- **Identifiers**: Phone numbers for account creation and verification.\n- **Email Address**: Used for verification and account recovery.\n- **Device Information**: Collected to ensure proper app functionality and support.\n- **Login History**: Monitors login activity for suspicious behavior.\n- **Geolocation Information**: Collected for fraud detection based on IP address.\n\nAuthy shares personal data similarly to Twilio and does not sell data or share it for third-party advertising.\n\n### Frontline Services\n\nTo use Frontline services, you log in via a third-party account. We only collect information you explicitly allow us to access. If you are an end-user, please contact your employer or the entity authorizing your access for any data updates or erasures.\n\n### Segment Services\n\nSegment services are covered under Twilio’s Data Protection Addendum and Binding Corporate Rules. More specific information can be found in the [Segment documentation](https://segment.com/docs/).\n\n### SendGrid Services\n\nSendGrid operates slightly differently, using Standard Contractual Clauses for cross-border data transfers. Like Twilio, SendGrid collects similar data and also utilizes web beacons in emails for tracking. \n\nFor customer content and email recipients’ personal data, SendGrid acts as a data processor, further described in our [Data Protection Addendum](https://www.twilio.com/en-us/legal/data-protection-addendum).\n\n## Security Information\n\n### How We Secure Personal Data\n\nWe implement appropriate security measures to protect your personal data. These measures vary based on the sensitivity of the data, and we ensure that our service providers also maintain security controls.\n\n**Important Note**: No service can guarantee complete security. We strive to protect your data but cannot promise against unauthorized access or data breaches.\n\n### Security Measures You Can Take\n\nTo safeguard your account:\n\n- Enable two-factor authentication.\n- Keep your password and Auth Token confidential.\n- Protect devices with a password and biometric options.\n- Use a Protection Pin for additional device security, especially for shared devices.\n\nReport any compromised passwords or Auth Tokens immediately.\n\n### How We Use Personal Data for Security Purposes\n\nWe may use Customer Account Data or Customer Usage Data to detect and prevent fraud, investigate security incidents, and monitor for spam. We may anonymize personal data for legitimate business needs.\n\n## Other Information You May Find Useful\n\n### Automated Decision Making and Machine Learning\n\nTwilio may utilize automated decision-making to monitor, identify, and suspend accounts involved in spam or fraudulent activity. Affected account holders will be notified and can request a human review of the decision.\n\n### Changes to Our Privacy Notice\n\nWe may update this Privacy Notice periodically. The latest version will always be available [here](https://www.twilio.com/legal/privacy). Significant changes that affect your rights will be communicated in advance.\n\n---\n\n## We Can't Wait to See What You Build\n\n### Products\n\n- [Twilio Engage](https://www.twilio.com/engage)\n- [Flex](https://www.twilio.com/flex)\n- [User Authentication & Identity](https://www.twilio.com/user-authentication-identity)\n- [Lookup](https://www.twilio.com/lookup)\n- [Verify](https://www.twilio.com/verify)\n- [Voice](https://www.twilio.com/voice)\n- [Video](https://www.twilio.com/video)\n- [Messaging](https://www.twilio.com/messaging)\n- [Beta products and features](https://www.twilio.com/products/beta)\n- [All products](https://www.twilio.com/products#all-products)\n\n### Solutions\n\n- [Customer Data Platform](https://www.twilio.com/customer-data-platform)\n- [SMS Marketing](https://www.twilio.com/solutions/text-marketing)\n- [Commerce Communications](https://www.twilio.com/docs/proxy)\n- [Contact Center](https://www.twilio.com/flex)\n- [All solutions](https://www.twilio.com/en-us/solutions)\n\n### Docs\n\n- [Communications](https://www.twilio.com/docs#communications)\n- [Customer Data](https://www.twilio.com/docs#customer-data)\n- [Engagement Applications](https://www.twilio.com/docs#engagement-applications)\n- [Twilio Essentials](https://www.twilio.com/docs#twilio-essentials)\n- [Helper Libraries](https://www.twilio.com/docs#libraries)\n- [Developer Resources](https://www.twilio.com/docs#developer-toolkit)\n- [All Docs](https://www.twilio.com/docs)\n\n### Company\n\n- [About Twilio](https://www.twilio.com/company)\n- [Why Twilio](https://www.twilio.com/why-twilio)\n- [Customer Engagement Platform](https://www.twilio.com/customer-engagement-platform)\n- [Trusted Communications](https://www.twilio.com/en-us/trust)\n- [Customers](https://customers.twilio.com/en-us)\n- [Get Help](https://support.twilio.com/hc/en-us?_ga=2.14534711.1826591240.1667227419-607057990.1661885030)\n- [Contact Sales](https://www.twilio.com/help/sales)\n- [Press & Media](https://www.twilio.com/en-us/press)\n- [Public Policy](https://www.twilio.com/en-us/public-policy/blog)\n- [Investor Relations](https://investors.twilio.com/overview/default.aspx?_ga=2.87002776.1826591240.1667227419-607057990.1661885030)\n- [Events](https://www.twilio.com/en-us/events)\n- [Jobs at Twilio](https://www.twilio.com/en-us/company/jobs)\n\n---\n\nCopyright © 2024 Twilio Inc. All Rights Reserved.\n```","response":"```markdown\n## Do Not Track\n\nSome browsers allow a “Do Not Track” (DNT) setting that requests web applications to disable tracking of an individual user. When you turn on the DNT setting, your browser sends a special signal to websites, analytics companies, ad networks, plug-in providers, and other web services to stop tracking your activity. For more information on setting up DNT, visit the [All About DNT](https://allaboutdnt.com/) page. If you choose to set up DNT, we will automatically turn off all non-required cookies on Twilio’s websites for you. Please note that this may impact the functionality of our websites or your account.\n\n## Global Privacy Control\n\nGlobal Privacy Control (GPC) is a specification that allows you to inform websites of your privacy preferences regarding ad trackers. You can set up GPC by visiting the [Global Privacy Control](https://globalprivacycontrol.org/#about) page. If you choose to set up GPC, we will automatically turn off all non-required cookies on Twilio’s websites for you, but this may affect functionality.\n\n## Opting Out of Advertising Cookies\n\nTo learn more about how to opt out of targeting and advertising cookies, visit the following pages:\n\n- [Your Online Choices](http://www.youronlinechoices.com/uk/your-ad-choices)\n- [Network Advertising Initiative](https://optout.networkadvertising.org/?c=1)\n- [Digital Advertising Alliance’s Consumer Choice](https://optout.aboutads.info/?c=2&lang=EN)\n\nThese opt-out tools are provided by third parties, and we do not control or operate them.\n\n## Web Beacons\n\nTwilio uses web beacons to collect data about your use of our websites, your account, and interactions with emails we send. Web beacons are clear electronic images that recognize certain types of data on your computer, such as when you view a website linked to the web beacon. We may also include web beacons in marketing emails to notify us when you click on a link directing you to a Twilio website. We use web beacons to operate and improve our websites and email communications.\n\n## Global Privacy Compliance at Twilio\n\nAs a global company, Twilio is committed to privacy compliance across all regions, including the United States, European Economic Area (EEA), United Kingdom (UK), Latin America, and Asia-Pacific.\n\n### Regions Requiring a Legal Basis for Processing Personal Data\n\nIn regions like the EEA or the UK that require a legal basis for processing personal data, our legal basis for collecting and using personal data will depend on the specific context in which we collect it. Common bases include:\n\n- Performance of a contract\n- Legitimate interests not overridden by your rights\n- Your consent\n- Legal obligations to collect data, especially in government audits or law enforcement requests\n\nIf you have questions about our legal basis for collecting your personal data, please contact us using the information provided below.\n\n### United States\n\n#### State Consumer Access and Deletion Rights\n\nFor customers in the U.S. wanting information about our use of Customer Account Data or Customer Usage Data, you have the ability to request:\n\n- Details about the categories of personal data we collect and how we share it\n- Access to and a copy of the personal data collected\n- Updates or corrections to inaccurate personal data\n- Deletion of personal data we have about you\n\nRefer to the section on [How to make choices about your data](#how-to-make-choices-about-your-data) for guidance on how to make these requests. Please note we will verify that you are authorized to make the request. Requests do not need to come from specific states like California, Colorado, Utah, or Virginia. We won't discriminate against you for making a request, but deleting your data may affect your ability to use our service.\n\nFor Californians, here's what personal data we've shared recently for business purposes:\n\n- Identifiers\n- Commercial information\n- Financial information\n- Internet or other electronic activity information\n- Geolocation information\n- Professional or employment information\n\n### Other Regions\n\nFor regions outside of the EEA, UK, or US, we also comply with their specific requirements, such as Brazil's. Details for these countries can be found in our [Data Protection Addendum](https://www.twilio.com/en-us/legal/data-protection-addendum).\n\n### Privacy Compliance for Specific Individuals\n\n#### Employee Applicant and Employee Data\n\nFor job applicants and current/former employees, we maintain a \"no shenanigans\" approach to your personal data. For up-to-date information, refer to our [Applicant Privacy Notice](https://www.twilio.com/en-us/legal/privacy/Global-Applicant-Privacy-Notice).\n\n#### Information from Children\n\nTwilio does not knowingly allow children under the age of 13 (or under 16 in the EEA) to create accounts. If we discover an underage user, we will promptly remove their personal data. If you believe this has happened, please contact us at [privacy@twilio.com](mailto:privacy@twilio.com).\n\n## International Data Transfers\n\nAs a global entity, Twilio may transfer your personal data to affiliates, contractors, service providers, and third parties in various countries. We take appropriate safeguards to ensure your data remains protected.\n\n### Data Transfers\n\nWhen using our services, your personal data may be transferred to the United States and potentially other countries. This is often connected to routing communications efficiently.\n\n### Safeguards for Data Transfers\n\nTwilio employs appropriate safeguards for cross-border data transfers as required by local laws. In cases of international transfers, we conduct a [transfer impact assessment](https://support.twilio.com/hc/en-us/articles/4407117654555-Transfer-Impact-Assessment-Twilio-s-Onward-Data-Transfers). Our [Data Protection Addendum](https://www.twilio.com/en-us/legal/data-protection-addendum) provides detailed information about cross-border data transfers.\n\nWe are certified under the EU-U.S. Data Privacy Framework (EU-U.S. DPF), the UK extension to the EU-U.S. DPF, and the Swiss-U.S. DPF. For more information, visit the DPF website [here](https://www.dataprivacyframework.gov).\n\nTwilio has Binding Corporate Rules for internal transfers of personal data between Twilio Group Members within the EU and other regions. These BCRs are approved by EU Data Protection Authorities. Access Twilio’s BCR policies [here](https://www.twilio.com/en-us/legal/bcr).\n\n#### APEC CBPR and PRP Participation\n\nTwilio complies with APEC Cross Border Privacy Rules (CBPR) and Privacy Recognition for Processors (PRP) systems, ensuring personal data protection in participating economies. Additional information can be found [here](http://www.cbprs.org/).\n\n## Twilio Product Privacy\n\n### Authy Services\n\nAuthy offers standalone two-factor authentication (2FA) services. The Authy app generates one-time passwords and push notifications for added security. \n\n#### Data Collection\n\nAuthy collects similar data to Twilio and attempts to maintain security and anti-fraud measures:\n\n- **Identifiers**: Phone numbers for account creation and verification.\n- **Email Address**: Used for verification and account recovery.\n- **Device Information**: Collected to ensure proper app functionality and support.\n- **Login History**: Monitors login activity for suspicious behavior.\n- **Geolocation Information**: Collected for fraud detection based on IP address.\n\nAuthy shares personal data similarly to Twilio and does not sell data or share it for third-party advertising.\n\n### Frontline Services\n\nTo use Frontline services, you log in via a third-party account. We only collect information you explicitly allow us to access. If you are an end-user, please contact your employer or the entity authorizing your access for any data updates or erasures.\n\n### Segment Services\n\nSegment services are covered under Twilio’s Data Protection Addendum and Binding Corporate Rules. More specific information can be found in the [Segment documentation](https://segment.com/docs/).\n\n### SendGrid Services\n\nSendGrid operates slightly differently, using Standard Contractual Clauses for cross-border data transfers. Like Twilio, SendGrid collects similar data and also utilizes web beacons in emails for tracking. \n\nFor customer content and email recipients’ personal data, SendGrid acts as a data processor, further described in our [Data Protection Addendum](https://www.twilio.com/en-us/legal/data-protection-addendum).\n\n## Security Information\n\n### How We Secure Personal Data\n\nWe implement appropriate security measures to protect your personal data. These measures vary based on the sensitivity of the data, and we ensure that our service providers also maintain security controls.\n\n**Important Note**: No service can guarantee complete security. We strive to protect your data but cannot promise against unauthorized access or data breaches.\n\n### Security Measures You Can Take\n\nTo safeguard your account:\n\n- Enable two-factor authentication.\n- Keep your password and Auth Token confidential.\n- Protect devices with a password and biometric options.\n- Use a Protection Pin for additional device security, especially for shared devices.\n\nReport any compromised passwords or Auth Tokens immediately.\n\n### How We Use Personal Data for Security Purposes\n\nWe may use Customer Account Data or Customer Usage Data to detect and prevent fraud, investigate security incidents, and monitor for spam. We may anonymize personal data for legitimate business needs.\n\n## Other Information You May Find Useful\n\n### Automated Decision Making and Machine Learning\n\nTwilio may utilize automated decision-making to monitor, identify, and suspend accounts involved in spam or fraudulent activity. Affected account holders will be notified and can request a human review of the decision.\n\n### Changes to Our Privacy Notice\n\nWe may update this Privacy Notice periodically. The latest version will always be available [here](https://www.twilio.com/legal/privacy). Significant changes that affect your rights will be communicated in advance.\n\n---\n\n## We Can't Wait to See What You Build\n\n### Products\n\n- [Twilio Engage](https://www.twilio.com/engage)\n- [Flex](https://www.twilio.com/flex)\n- [User Authentication & Identity](https://www.twilio.com/user-authentication-identity)\n- [Lookup](https://www.twilio.com/lookup)\n- [Verify](https://www.twilio.com/verify)\n- [Voice](https://www.twilio.com/voice)\n- [Video](https://www.twilio.com/video)\n- [Messaging](https://www.twilio.com/messaging)\n- [Beta products and features](https://www.twilio.com/products/beta)\n- [All products](https://www.twilio.com/products#all-products)\n\n### Solutions\n\n- [Customer Data Platform](https://www.twilio.com/customer-data-platform)\n- [SMS Marketing](https://www.twilio.com/solutions/text-marketing)\n- [Commerce Communications](https://www.twilio.com/docs/proxy)\n- [Contact Center](https://www.twilio.com/flex)\n- [All solutions](https://www.twilio.com/en-us/solutions)\n\n### Docs\n\n- [Communications](https://www.twilio.com/docs#communications)\n- [Customer Data](https://www.twilio.com/docs#customer-data)\n- [Engagement Applications](https://www.twilio.com/docs#engagement-applications)\n- [Twilio Essentials](https://www.twilio.com/docs#twilio-essentials)\n- [Helper Libraries](https://www.twilio.com/docs#libraries)\n- [Developer Resources](https://www.twilio.com/docs#developer-toolkit)\n- [All Docs](https://www.twilio.com/docs)\n\n### Company\n\n- [About Twilio](https://www.twilio.com/company)\n- [Why Twilio](https://www.twilio.com/why-twilio)\n- [Customer Engagement Platform](https://www.twilio.com/customer-engagement-platform)\n- [Trusted Communications](https://www.twilio.com/en-us/trust)\n- [Customers](https://customers.twilio.com/en-us)\n- [Get Help](https://support.twilio.com/hc/en-us?_ga=2.14534711.1826591240.1667227419-607057990.1661885030)\n- [Contact Sales](https://www.twilio.com/help/sales)\n- [Press & Media](https://www.twilio.com/en-us/press)\n- [Public Policy](https://www.twilio.com/en-us/public-policy/blog)\n- [Investor Relations](https://investors.twilio.com/overview/default.aspx?_ga=2.87002776.1826591240.1667227419-607057990.1661885030)\n- [Events](https://www.twilio.com/en-us/events)\n- [Jobs at Twilio](https://www.twilio.com/en-us/company/jobs)\n\n---\n\nCopyright © 2024 Twilio Inc. All Rights Reserved.\n```"}
{"timestamp":"2024-11-07 14:51:30.566","prompt":"twilio_products_and_services_overview","response":"twilio_products_and_services_overview"}
{"timestamp":"2024-11-07 15:06:52.900","prompt":"twilio-media-streams-guide","response":"twilio-media-streams-guide"}
{"timestamp":"2024-11-07 15:08:59.101","prompt":"twilio_programmable_voice_media_streams_guide","response":"twilio_programmable_voice_media_streams_guide"}
{"timestamp":"2024-11-07 15:09:12.485","prompt":"# Twilio Docs\n\n## Programmable Voice\n- [Getting Started with Programmable Voice](#)\n- **Quickstarts:**\n  - [No-code quickstart](#)\n  - [C#/.NET quickstart](#)\n  - [Java quickstart](#)\n  - [Node.js quickstart](#)\n  - [PHP quickstart](#)\n  - [Python quickstart](#)\n  - [Ruby quickstart](#)\n  - [Go quickstart](#)\n  - [Android SDK quickstart](#)\n  - [iOS SDK quickstart (Objective-C and Swift)](#)\n  - [JavaScript SDK quickstarts](#)\n  - [React Native SDK quickstart](#)\n\n## Tutorials\n- [Make outbound phone calls](#)\n- [Respond to incoming phone calls](#)\n- [Modify calls in progress](#)\n- [Record phone calls](#)\n- [Create conference calls](#)\n- [Gather user input via keypad](#)\n- [Retrieve call logs](#)\n- [Consume a real-time Media Stream using WebSockets, Python, and Flask](#)\n- [Capture a payment during a call](#)\n- [Build an Interactive Voice Response (IVR) Phone Tree](#)\n- [Build a Rapid Response Kit with Voice Conference and Broadcasting](#)\n- [Track your call data](#)\n\n## Make emergency calls\n- [Overview](#)\n- [Emergency telephone numbers](#)\n\n## API Reference\n- [Voice API Overview](#)\n- [Application Resource](#)\n- [Call Resource](#)\n- [Conference Resource](#)\n- [Recording Resource](#)\n- [TwiML](#)\n- [Media Streams Overview](#)\n\n## Media Streams Overview\nMedia Streams gives access to the raw audio stream of your Programmable Voice calls by sending the live audio stream to a destination using WebSockets. This enables use cases such as real-time transcriptions, sentiment analysis, and voice authentication. \n\n### Support for Twilio Regions\nMedia Streams is available in the Ireland (IE1) and Australia (AU1) regions.\n- For outbound calls, [follow the outbound call guide](#).\n- For inbound calls, [follow the inbound call processing guide](#).\n\nBefore using Media Streams, familiarize yourself with making/receiving Voice Calls with Twilio.\n\n### Unidirectional Media Streams\nUnidirectional Media Streams receive a Call's audio stream, but do not allow sending audio back to Twilio. DTMF is not supported in this mode. \n\n**Starting and Stopping Unidirectional Media Streams**\n- Start with `<Start><Stream>` TwiML instructions or via REST API.\n- Stop with `<Stop><Stream>` or the Stream resource.\n\n**Resources:**\n- [<Stream> TwiML Reference](#)\n- [Stream Resource API Reference](#)\n- [Sample applications](#)\n\n### Bidirectional Media Streams\nBidirectional Media Streams allow your WebSocket application to both receive and send audio to Twilio. DTMF is supported only in the inbound direction.\n\n**Starting and Stopping Bidirectional Media Streams**\n- Start with `<Connect><Stream>`.\n- Stop by closing the WebSocket connection or ending the call.\n\n**Resources:**\n- [<Stream> TwiML Reference](#)\n- [Sample application](#)\n\n### Limits\n- **Unidirectional Streams:** Up to four tracks at a time.\n- **Bidirectional Streams:** Only one stream per call, associated with one WebSocket connection.\n\n### Communicate with Twilio's Media Servers\nYour application must allow secure WebSocket connections (TCP port 443) from Twilio to your servers.\n\n**Resources:**\n- [Security page on validating requests](#)\n  \n### Need some help?\nGet help from our [support team](#) or browse through the [Twilio tag on Stack Overflow](#). \n\n## Additional Information\n- [Terms of Service](#)\n- [Privacy Policy](#)\n\nCopyright © 2024 Twilio Inc.","response":"# Twilio Docs\n\n## Programmable Voice\n- [Getting Started with Programmable Voice](#)\n- **Quickstarts:**\n  - [No-code quickstart](#)\n  - [C#/.NET quickstart](#)\n  - [Java quickstart](#)\n  - [Node.js quickstart](#)\n  - [PHP quickstart](#)\n  - [Python quickstart](#)\n  - [Ruby quickstart](#)\n  - [Go quickstart](#)\n  - [Android SDK quickstart](#)\n  - [iOS SDK quickstart (Objective-C and Swift)](#)\n  - [JavaScript SDK quickstarts](#)\n  - [React Native SDK quickstart](#)\n\n## Tutorials\n- [Make outbound phone calls](#)\n- [Respond to incoming phone calls](#)\n- [Modify calls in progress](#)\n- [Record phone calls](#)\n- [Create conference calls](#)\n- [Gather user input via keypad](#)\n- [Retrieve call logs](#)\n- [Consume a real-time Media Stream using WebSockets, Python, and Flask](#)\n- [Capture a payment during a call](#)\n- [Build an Interactive Voice Response (IVR) Phone Tree](#)\n- [Build a Rapid Response Kit with Voice Conference and Broadcasting](#)\n- [Track your call data](#)\n\n## Make emergency calls\n- [Overview](#)\n- [Emergency telephone numbers](#)\n\n## API Reference\n- [Voice API Overview](#)\n- [Application Resource](#)\n- [Call Resource](#)\n- [Conference Resource](#)\n- [Recording Resource](#)\n- [TwiML](#)\n- [Media Streams Overview](#)\n\n## Media Streams Overview\nMedia Streams gives access to the raw audio stream of your Programmable Voice calls by sending the live audio stream to a destination using WebSockets. This enables use cases such as real-time transcriptions, sentiment analysis, and voice authentication. \n\n### Support for Twilio Regions\nMedia Streams is available in the Ireland (IE1) and Australia (AU1) regions.\n- For outbound calls, [follow the outbound call guide](#).\n- For inbound calls, [follow the inbound call processing guide](#).\n\nBefore using Media Streams, familiarize yourself with making/receiving Voice Calls with Twilio.\n\n### Unidirectional Media Streams\nUnidirectional Media Streams receive a Call's audio stream, but do not allow sending audio back to Twilio. DTMF is not supported in this mode. \n\n**Starting and Stopping Unidirectional Media Streams**\n- Start with `<Start><Stream>` TwiML instructions or via REST API.\n- Stop with `<Stop><Stream>` or the Stream resource.\n\n**Resources:**\n- [<Stream> TwiML Reference](#)\n- [Stream Resource API Reference](#)\n- [Sample applications](#)\n\n### Bidirectional Media Streams\nBidirectional Media Streams allow your WebSocket application to both receive and send audio to Twilio. DTMF is supported only in the inbound direction.\n\n**Starting and Stopping Bidirectional Media Streams**\n- Start with `<Connect><Stream>`.\n- Stop by closing the WebSocket connection or ending the call.\n\n**Resources:**\n- [<Stream> TwiML Reference](#)\n- [Sample application](#)\n\n### Limits\n- **Unidirectional Streams:** Up to four tracks at a time.\n- **Bidirectional Streams:** Only one stream per call, associated with one WebSocket connection.\n\n### Communicate with Twilio's Media Servers\nYour application must allow secure WebSocket connections (TCP port 443) from Twilio to your servers.\n\n**Resources:**\n- [Security page on validating requests](#)\n  \n### Need some help?\nGet help from our [support team](#) or browse through the [Twilio tag on Stack Overflow](#). \n\n## Additional Information\n- [Terms of Service](#)\n- [Privacy Policy](#)\n\nCopyright © 2024 Twilio Inc."}
{"timestamp":"2024-11-07 15:09:22.620","prompt":"twilio_website_overview","response":"twilio_website_overview"}
{"timestamp":"2024-11-07 15:10:09.236","prompt":"```markdown\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-5JLZ694\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n## Language Selection\n- [日本語](#)\n- [Deutsch](#)\n- [English](#) (Selected Language)\n- [Español (México)](#)\n- [Français](#)\n- [Português (Brasil)](#)\n\n## Support\n- [Help Center](https://help.twilio.com/)\n- [Talk to Support](https://help.twilio.com/)\n- [Training](https://www.twiliotraining.com/store)\n- [Support Plans](#)\n- [Partner Solutions](#)\n\n- [Login](https://www.twilio.com/login)\n- [Console](https://www.twilio.com/console)\n\n![Twilio logo](#)\n\n## Products\n\n### Communications\n- **Messaging**\n  - Send and receive multichannel text and media messages in 180+ countries\n  - [SMS](#) | [WhatsApp](#) | [Conversations](#) | [RCS](#)\n\n- **Voice**\n  - Make, receive, and monitor calls around the world\n  - [PSTN](#) | [SIP Trunking](#) | [SDK](#)\n\n- **Verify**\n  - Globally-managed multichannel 2FA and passwordless authentication\n\n- **Lookup**\n  - Know your customer and assess identity risk with real-time phone intelligence\n\n- **Email**\n  - Deliver email messages reliably at scale with SendGrid\n\n- **Serverless**\n  - Build, deploy, and run apps with Twilio’s serverless environment and visual builder\n\n- **Phone Numbers**\n  - Access local, national, and toll-free phone numbers\n  - [Toll-Free](#) | [10DLC](#) | [Short Codes](#)\n\n- **Video**\n  - Connect virtually with secure, high-quality video calling at global scale\n\n### Applications\n- **Twilio Flex**\n  - Digital engagement center for customer service and sales\n  - [Contact center](#)\n\n- **Twilio Engage**\n  - Create multi-channel campaigns with a unified data-first platform\n\n- **Marketing Campaigns**\n  - Create and manage email marketing campaigns with SendGrid\n\n### Customer Data\n- **Twilio Segment**\n  - Unify your customer data with Segment CDP to power personalized engagement\n- **Connections**\n  - Integrate web and mobile app data with a single API\n- **Protocols**\n  - Protect the integrity of your data\n- **Unify**\n  - Unify customer data across every channel\n- **Journeys**\n  - Orchestrate multichannel customer journeys\n\n[See all products](#)\n\n## Solutions\n\n### Use Cases\n- **Verification & Identity**\n  - Add user verification to protect against fraud\n- **Alerts & Notifications**\n  - Deliver notifications across text, email, voice\n- **Marketing & Promotions**\n  - Create multichannel marketing campaigns\n- **Contact Center**\n  - Provide personalized, data-driven service\n- **IVR & Self-Service**\n  - Set up a modern IVR with AI-enabled support\n\n### Teams\n- Marketing\n- Product & Engineering\n- Customer Experience\n- Developers\n\n### Industries\n- Financial Services\n- Healthcare\n- Hospitality\n- Public Sector\n- Real Estate\n- Retail\n\n### Business Size\n- Enterprise\n- Startup\n- Nonprofit\n\n[See all solutions](#)\n\n## Partners\n- **Find a partner**\n  - Work with a Twilio partner to buy or build the right solution\n- **Partner with us**\n  - Join our Partner Program to build or sell Twilio solutions to your customers\n\n## Services\n- **Professional Services**\n  - Get technical and strategic advice from Twilio experts\n- **Training**\n  - Learn how to architect, build, and support your apps\n\n## Developers\n### Documentation\n- **Twilio Flex**\n- **SMS**\n- **Voice**\n- **Email**\n- **WhatsApp API**\n- **Elastic SIP Trunking**\n- **Verify**\n- **Functions**\n- **Studio**\n- **Twilio CLI**\n\n[See all docs](#)\n\n### Community\n- **Ahoy!**\n  - Get inspired by the latest from our developer community\n- **Developer Blog**\n  - Read tutorials, community projects, and product updates\n- **Stack Overflow**\n  - Ask the Twilio community for help\n- **Champions**\n  - Become a Twilio community Champion\n\n### Tools & Resources\n- **CodeExchange**\n- **Changelog**\n- **API Status**\n\n## Why Twilio?\n### Company\n- **Why Twilio**\n  - The trusted platform for data-driven customer engagement across any channel\n- **About Us**\n- **Twilio Magic**\n- **Diversity**\n- **Investor Relations**\n- **Press & Media**\n\n### Our Platform\n- **Customer Engagement Platform**\n- **CustomerAI**\n- **Trust Center**\n- **Super Network**\n\n### Resources\n- **Resource Center**\n- **Customer Stories**\n- **Blog**\n- **State of Customer Engagement**\n- **Twilio Events**\n\n## Pricing\n### Communications\n- **Messaging**\n- **Email**\n- **Voice**\n- **Verify**\n- **Lookup**\n- **Serverless**\n- **Video**\n\n### Applications\n- **Twilio Flex**\n- **Twilio Engage**\n- **Marketing Campaigns**\n\n[See all pricing](#)\n\n## Start for Free\nDrive better ROI from every customer conversation. Twilio’s all-in-one platform combines powerful channel APIs with AI and data, so you can serve every customer uniquely.\n\n[Start for Free](#) | [See what's Possible](#)\n\nFree trial | No credit card required | Pay-as-you-go pricing\n\n## RCS Business Messaging\nGet RCS on Twilio Messaging—no code changes required. Establish trust and capture attention with RCS from Twilio Messaging, without additional APIs to integrate and configure.\n\n[Get Started](#)\n\n## Recognition\nGartner names Twilio a Leader in CPaaS for the second time. The 2024 Gartner® Magic Quadrant™ for CPaaS recognizes Twilio’s ability to execute and completeness of vision.\n\n[Read the Report](#)\n\n### Calculate the ROI\nOur new Forrester Consulting ROI calculator helps businesses estimate their benefits with Twilio Verify for user authentication.\n\n[Access the Calculator](#)\n\n## Discover Consumer Preferences\nLearn how consumers across the globe prefer to engage with brands.\n\n[Explore the Report](#)\n\n## Complete Tool Box for Customer Engagement\n### User Authentication & Identity\n### Voice APIs\n### Messaging Platform\n### Twilio Flex\n\nJoin the 300,000+ brands that use Twilio to connect with their customers.\n\n## Loved by 10+ Million Developers\n### Send Your First Text Message\nSign up for a free Twilio account and grab one of our seven official server-side SDKs to get started.\n\n```python\n# Python SDK Example\nimport os\nfrom twilio.rest import Client\n\naccount_sid = os.environ['TWILIO_ACCOUNT_SID']\nauth_token = os.environ['TWILIO_AUTH_TOKEN']\nclient = Client(account_sid, auth_token)\n\nmessage = client.messages.create(\n    body='Hi there',\n    from_='+15017122661',\n    to='+15558675310'\n)\n\nprint(message.sid)\n```\n\n### Official SDKs\nBuild quickly and confidently with our SDKs for Node.js, Python, C#, Java, PHP, Ruby, and Go.\n\n### Prefer Not to Code?\nWork with one of our trusted partners to get coding support or explore a pre-built solution.\n\n[Find a Partner](#)\n\n## Customer Stories\nExplore what the world’s leading businesses have achieved with the Twilio Customer Engagement Platform.\n\n### Examples\n- **Domino’s Pizza**: Decreased cost per acquisition by 65%.\n- **Allergan**: Grew their direct-to-consumer loyalty program by $400M.\n- **Stripe**: Ensured easy verification for millions of users.\n- **American Red Cross**: Staffed volunteers 50% faster.\n\n## Start Building with Twilio for Free\nSign up and start building your ideal customer engagement experience today.\n\n[Start for Free](#) [View pay-as-you-go pricing](#)\n\n---\n\nCopyright © 2024 Twilio Inc. All Rights Reserved.\n```\n","response":"```markdown\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-5JLZ694\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n## Language Selection\n- [日本語](#)\n- [Deutsch](#)\n- [English](#) (Selected Language)\n- [Español (México)](#)\n- [Français](#)\n- [Português (Brasil)](#)\n\n## Support\n- [Help Center](https://help.twilio.com/)\n- [Talk to Support](https://help.twilio.com/)\n- [Training](https://www.twiliotraining.com/store)\n- [Support Plans](#)\n- [Partner Solutions](#)\n\n- [Login](https://www.twilio.com/login)\n- [Console](https://www.twilio.com/console)\n\n![Twilio logo](#)\n\n## Products\n\n### Communications\n- **Messaging**\n  - Send and receive multichannel text and media messages in 180+ countries\n  - [SMS](#) | [WhatsApp](#) | [Conversations](#) | [RCS](#)\n\n- **Voice**\n  - Make, receive, and monitor calls around the world\n  - [PSTN](#) | [SIP Trunking](#) | [SDK](#)\n\n- **Verify**\n  - Globally-managed multichannel 2FA and passwordless authentication\n\n- **Lookup**\n  - Know your customer and assess identity risk with real-time phone intelligence\n\n- **Email**\n  - Deliver email messages reliably at scale with SendGrid\n\n- **Serverless**\n  - Build, deploy, and run apps with Twilio’s serverless environment and visual builder\n\n- **Phone Numbers**\n  - Access local, national, and toll-free phone numbers\n  - [Toll-Free](#) | [10DLC](#) | [Short Codes](#)\n\n- **Video**\n  - Connect virtually with secure, high-quality video calling at global scale\n\n### Applications\n- **Twilio Flex**\n  - Digital engagement center for customer service and sales\n  - [Contact center](#)\n\n- **Twilio Engage**\n  - Create multi-channel campaigns with a unified data-first platform\n\n- **Marketing Campaigns**\n  - Create and manage email marketing campaigns with SendGrid\n\n### Customer Data\n- **Twilio Segment**\n  - Unify your customer data with Segment CDP to power personalized engagement\n- **Connections**\n  - Integrate web and mobile app data with a single API\n- **Protocols**\n  - Protect the integrity of your data\n- **Unify**\n  - Unify customer data across every channel\n- **Journeys**\n  - Orchestrate multichannel customer journeys\n\n[See all products](#)\n\n## Solutions\n\n### Use Cases\n- **Verification & Identity**\n  - Add user verification to protect against fraud\n- **Alerts & Notifications**\n  - Deliver notifications across text, email, voice\n- **Marketing & Promotions**\n  - Create multichannel marketing campaigns\n- **Contact Center**\n  - Provide personalized, data-driven service\n- **IVR & Self-Service**\n  - Set up a modern IVR with AI-enabled support\n\n### Teams\n- Marketing\n- Product & Engineering\n- Customer Experience\n- Developers\n\n### Industries\n- Financial Services\n- Healthcare\n- Hospitality\n- Public Sector\n- Real Estate\n- Retail\n\n### Business Size\n- Enterprise\n- Startup\n- Nonprofit\n\n[See all solutions](#)\n\n## Partners\n- **Find a partner**\n  - Work with a Twilio partner to buy or build the right solution\n- **Partner with us**\n  - Join our Partner Program to build or sell Twilio solutions to your customers\n\n## Services\n- **Professional Services**\n  - Get technical and strategic advice from Twilio experts\n- **Training**\n  - Learn how to architect, build, and support your apps\n\n## Developers\n### Documentation\n- **Twilio Flex**\n- **SMS**\n- **Voice**\n- **Email**\n- **WhatsApp API**\n- **Elastic SIP Trunking**\n- **Verify**\n- **Functions**\n- **Studio**\n- **Twilio CLI**\n\n[See all docs](#)\n\n### Community\n- **Ahoy!**\n  - Get inspired by the latest from our developer community\n- **Developer Blog**\n  - Read tutorials, community projects, and product updates\n- **Stack Overflow**\n  - Ask the Twilio community for help\n- **Champions**\n  - Become a Twilio community Champion\n\n### Tools & Resources\n- **CodeExchange**\n- **Changelog**\n- **API Status**\n\n## Why Twilio?\n### Company\n- **Why Twilio**\n  - The trusted platform for data-driven customer engagement across any channel\n- **About Us**\n- **Twilio Magic**\n- **Diversity**\n- **Investor Relations**\n- **Press & Media**\n\n### Our Platform\n- **Customer Engagement Platform**\n- **CustomerAI**\n- **Trust Center**\n- **Super Network**\n\n### Resources\n- **Resource Center**\n- **Customer Stories**\n- **Blog**\n- **State of Customer Engagement**\n- **Twilio Events**\n\n## Pricing\n### Communications\n- **Messaging**\n- **Email**\n- **Voice**\n- **Verify**\n- **Lookup**\n- **Serverless**\n- **Video**\n\n### Applications\n- **Twilio Flex**\n- **Twilio Engage**\n- **Marketing Campaigns**\n\n[See all pricing](#)\n\n## Start for Free\nDrive better ROI from every customer conversation. Twilio’s all-in-one platform combines powerful channel APIs with AI and data, so you can serve every customer uniquely.\n\n[Start for Free](#) | [See what's Possible](#)\n\nFree trial | No credit card required | Pay-as-you-go pricing\n\n## RCS Business Messaging\nGet RCS on Twilio Messaging—no code changes required. Establish trust and capture attention with RCS from Twilio Messaging, without additional APIs to integrate and configure.\n\n[Get Started](#)\n\n## Recognition\nGartner names Twilio a Leader in CPaaS for the second time. The 2024 Gartner® Magic Quadrant™ for CPaaS recognizes Twilio’s ability to execute and completeness of vision.\n\n[Read the Report](#)\n\n### Calculate the ROI\nOur new Forrester Consulting ROI calculator helps businesses estimate their benefits with Twilio Verify for user authentication.\n\n[Access the Calculator](#)\n\n## Discover Consumer Preferences\nLearn how consumers across the globe prefer to engage with brands.\n\n[Explore the Report](#)\n\n## Complete Tool Box for Customer Engagement\n### User Authentication & Identity\n### Voice APIs\n### Messaging Platform\n### Twilio Flex\n\nJoin the 300,000+ brands that use Twilio to connect with their customers.\n\n## Loved by 10+ Million Developers\n### Send Your First Text Message\nSign up for a free Twilio account and grab one of our seven official server-side SDKs to get started.\n\n```python\n# Python SDK Example\nimport os\nfrom twilio.rest import Client\n\naccount_sid = os.environ['TWILIO_ACCOUNT_SID']\nauth_token = os.environ['TWILIO_AUTH_TOKEN']\nclient = Client(account_sid, auth_token)\n\nmessage = client.messages.create(\n    body='Hi there',\n    from_='+15017122661',\n    to='+15558675310'\n)\n\nprint(message.sid)\n```\n\n### Official SDKs\nBuild quickly and confidently with our SDKs for Node.js, Python, C#, Java, PHP, Ruby, and Go.\n\n### Prefer Not to Code?\nWork with one of our trusted partners to get coding support or explore a pre-built solution.\n\n[Find a Partner](#)\n\n## Customer Stories\nExplore what the world’s leading businesses have achieved with the Twilio Customer Engagement Platform.\n\n### Examples\n- **Domino’s Pizza**: Decreased cost per acquisition by 65%.\n- **Allergan**: Grew their direct-to-consumer loyalty program by $400M.\n- **Stripe**: Ensured easy verification for millions of users.\n- **American Red Cross**: Staffed volunteers 50% faster.\n\n## Start Building with Twilio for Free\nSign up and start building your ideal customer engagement experience today.\n\n[Start for Free](#) [View pay-as-you-go pricing](#)\n\n---\n\nCopyright © 2024 Twilio Inc. All Rights Reserved.\n```\n"}
{"timestamp":"2024-11-07 15:10:13.754","prompt":"twilio_products_and_solutions_overview","response":"twilio_products_and_solutions_overview"}
{"timestamp":"2024-11-07 15:10:49.325","prompt":"```markdown\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-5JLZ694\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n## Languages\n- [日本語](#)\n- [Deutsch](#)\n- [English [Selected language icon]](#)\n- [Español (México)](#)\n- [Français](#)\n- [Português (Brasil)](#)\n\n## Support\n- [Help Center](https://help.twilio.com/)\n- [Talk to Support](https://help.twilio.com/)\n- [Training](https://www.twiliotraining.com/store)\n- [Support Plans](#)\n- [Partner Solutions](#)\n\n## Links\n- [Login](https://www.twilio.com/login)\n- [Console](https://www.twilio.com/console)\n\n## Products\n### Communications\n- **[Messaging](#)**  \n  Send and receive multichannel text and media messages in 180+ countries  \n  - [SMS](#)  \n  - [WhatsApp](#)  \n  - [Conversations](#)  \n  - [RCS](#)\n\n- **[Voice](#)**  \n  Make, receive, and monitor calls around the world  \n  - [PSTN](#)  \n  - [SIP Trunking](#)  \n  - [SDK](#)\n\n- **[Verify](#)**  \n  Globally-managed multichannel 2FA and passwordless authentication\n\n- **[Lookup](#)**  \n  Know your customer and assess identity risk with real-time phone intelligence\n\n- **[Email](#)**  \n  Deliver email messages reliably at scale with SendGrid\n\n- **[Serverless](#)**  \n  Build, deploy, and run apps with Twilio’s serverless environment and visual builder\n\n- **[Phone Numbers](#)**  \n  Access local, national, and toll-free phone numbers  \n  - [Toll-Free](#)  \n  - [10DLC](#)  \n  - [Short Codes](#)\n\n- **[Video](#)**  \n  Connect virtually with secure, high-quality video calling at global scale\n\n### Applications\n- **[Twilio Flex](#)**  \n  Digital engagement center for customer service and sales  \n  - [Contact center](#)\n\n- **[Twilio Engage](#)**  \n  Create multi-channel campaigns with a unified data-first platform\n\n- **[Marketing Campaigns](#)**  \n  Create and manage email marketing campaigns with SendGrid\n\n### Customer Data\n- **[Twilio Segment ↗](https://segment.com/)**  \n  Unify your customer data with Segment CDP to power personalized engagement\n- **[Connections ↗](https://segment.com/product/connections/)**  \n  Integrate web and mobile app data with a single API\n- **[Protocols ↗](https://segment.com/product/protocols/)**  \n  Protect the integrity of your data\n- **[Unify ↗](https://segment.com/product/unify/)**  \n  Unify customer data across every channel\n- **[Journeys ↗](https://segment.com/product/twilio-engage/journeys)**  \n  Orchestrate multichannel customer journeys\n\n[See all products](#)\n\n## Solutions\n### Use Cases\n- **[Verification & identity](#)**  \n  Add user verification to protect against fraud.\n  \n- **[Alerts & notifications](#)**  \n  Deliver notifications across text, email, and voice.\n  \n- **[Marketing & promotions](#)**  \n  Create multichannel marketing campaigns.\n  \n- **[Contact Center](#)**  \n  Provide personalized, data-driven service.\n  \n- **[IVR & self-service](#)**  \n  Set up a modern IVR with AI-enabled support.\n\n### Teams\n- **Marketing**  \n  Keep customers engaged on any channel\n- **Product & Engineering**  \n  Connect with target users reliably and securely\n- **Customer Experience**  \n  Deliver personalized sales and support experiences at scale\n- **Developers**  \n  Tutorials and docs to start building on Twilio\n\n### Industries\n- **Financial Services**\n- **Healthcare**\n- **Hospitality**\n- **Public Sector**\n- **Real Estate**\n- **Retail**\n\n### Business Size\n- **Enterprise**\n- **Startup**\n- **Nonprofit ↗**\n\n[See all solutions](#)\n\n### Partners\n- **[Find a partner](#)**  \n  Work with a Twilio partner to buy or build the right solution\n- **[Partner with us](#)**  \n  Join our Partner Program to build or sell Twilio solutions to your customers.\n\n## Developers\n### Documentation\n- **[Twilio Flex](https://www.twilio.com/docs/flex)**\n- **[SMS](https://www.twilio.com/docs/sms)**\n- **[Voice](https://www.twilio.com/docs/voice)**\n- **[Email](https://docs.sendgrid.com/)**\n- **[WhatsApp API](https://www.twilio.com/docs/whatsapp)**\n- **[Verify](https://www.twilio.com/docs/verify/api)**\n- **[Functions](https://www.twilio.com/docs/serverless/functions-assets/functions)**\n- **[Studio](https://www.twilio.com/docs/studio)**\n- **[Twilio CLI](https://www.twilio.com/docs/twilio-cli/quickstart)**\n\n[See all docs](https://www.twilio.com/docs)\n\n## Community\n- **[Ahoy!](#)**  \n  Get inspired by the latest from our developer community\n- **[Developer Blog](#)**  \n  Read tutorials, community projects, and product updates\n- **[Stack Overflow](#)**  \n  Ask the Twilio community for help\n- **[Champions](#)**  \n  Become a Twilio community Champion\n\n## Tools & Resources\n- **[CodeExchange](#)**  \n  Usable code samples for faster builds\n- **[Changelog](#)**  \n  See updates and additions to Twilio products\n- **[API Status](#)**  \n  Check real-time monitoring of APIs and all services\n\n## Why Twilio\n### Company\n- **[Why Twilio](#)**  \n  The trusted platform for data-driven customer engagement across any channel.\n  \n- **[About Us](#)**  \n  Twilio company page\n- **[Twilio Magic](#)**  \n  Twilio core values\n- **[Diversity](#)**  \n  Diversity, equity, and inclusion\n- **[Investor Relations](#)**  \n  Information for Twilio investors\n- **[Press & Media](#)**  \n  Latest announcements and launches\n\n### Our Platform\n- **[Customer Engagement Platform](#)**  \n  Build durable customer relationships with personalized, data-driven engagement\n- **[CustomerAI](#)**  \n  Combine real-time engagement data with AI to know your customers better.\n- **[Trust Center](#)**  \n  Twilio’s security, data privacy, regulatory compliance, and resiliency policies.\n- **[Super Network](#)**  \n  Simplify, strengthen, and unite carrier communication networks using software.\n\n### Resources\n- **[Resource Center](#)**  \n  Browse our content library for more resources on how you can create lasting customer relationships\n- **[Customer Stories](#)**  \n  See what customers are building with Twilio\n- **[Blog](#)**  \n  Explore the latest product updates, technical tutorials, and best practices\n- **[State of Customer Engagement](#)**  \n  See the top trends shaping customer engagement in our annual report\n- **[Twilio Events](#)**  \n  Join upcoming group events\n\n## Pricing\n### Communications\n- **[Messaging](#)**  \n- **[Email ↗](#)**  \n- **[Voice](#)**  \n- **[Verify](#)**  \n- **[Lookup](#)**  \n- **[Serverless](#)**  \n- **[Video](#)**  \n\n### Applications\n- **[Twilio Flex](#)**  \n- **[Twilio Segment ↗](#)**  \n- **[Marketing Campaigns](#)**  \n\n[See all pricing](#)\n\n---\n\n### Company Information\n- **[Overview](#)**\n- **[Values](#)**\n- **[Diversity](#)**\n- **[Culture](#)**\n- **[Jobs](#)**\n- **[Press](#)**\n- **[Blog](#)**\n\n### Open Jobs\n**Find your dream job.**  \nWe welcome builders of every persuasion at Twilio. If you see a position that sparks your imagination, please apply. Come help us grow a global, remote-first company where all feel proud to belong and do their best.\n\n**[Find and apply for a remote Twilio job](#)**\n\n## Commitment to Equal Employment Opportunity\nTwilio is proud to be an Equal Employment Opportunity and Affirmative Action employer. We do not discriminate based on legally protected characteristics. We also accommodate qualified individuals with disabilities and disabled veterans in our job application procedures.\n\n### Important Notice to Applicants\nTwilio and our recruiters only direct candidates to apply through our official careers page at [www.Twilio.com/company/jobs](www.Twilio.com/company/jobs). We will never refer you to external websites or ask for personal information.\n\n---\n\n**We can't wait to see what you build.**\n```","response":"```markdown\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-5JLZ694\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n\n## Languages\n- [日本語](#)\n- [Deutsch](#)\n- [English [Selected language icon]](#)\n- [Español (México)](#)\n- [Français](#)\n- [Português (Brasil)](#)\n\n## Support\n- [Help Center](https://help.twilio.com/)\n- [Talk to Support](https://help.twilio.com/)\n- [Training](https://www.twiliotraining.com/store)\n- [Support Plans](#)\n- [Partner Solutions](#)\n\n## Links\n- [Login](https://www.twilio.com/login)\n- [Console](https://www.twilio.com/console)\n\n## Products\n### Communications\n- **[Messaging](#)**  \n  Send and receive multichannel text and media messages in 180+ countries  \n  - [SMS](#)  \n  - [WhatsApp](#)  \n  - [Conversations](#)  \n  - [RCS](#)\n\n- **[Voice](#)**  \n  Make, receive, and monitor calls around the world  \n  - [PSTN](#)  \n  - [SIP Trunking](#)  \n  - [SDK](#)\n\n- **[Verify](#)**  \n  Globally-managed multichannel 2FA and passwordless authentication\n\n- **[Lookup](#)**  \n  Know your customer and assess identity risk with real-time phone intelligence\n\n- **[Email](#)**  \n  Deliver email messages reliably at scale with SendGrid\n\n- **[Serverless](#)**  \n  Build, deploy, and run apps with Twilio’s serverless environment and visual builder\n\n- **[Phone Numbers](#)**  \n  Access local, national, and toll-free phone numbers  \n  - [Toll-Free](#)  \n  - [10DLC](#)  \n  - [Short Codes](#)\n\n- **[Video](#)**  \n  Connect virtually with secure, high-quality video calling at global scale\n\n### Applications\n- **[Twilio Flex](#)**  \n  Digital engagement center for customer service and sales  \n  - [Contact center](#)\n\n- **[Twilio Engage](#)**  \n  Create multi-channel campaigns with a unified data-first platform\n\n- **[Marketing Campaigns](#)**  \n  Create and manage email marketing campaigns with SendGrid\n\n### Customer Data\n- **[Twilio Segment ↗](https://segment.com/)**  \n  Unify your customer data with Segment CDP to power personalized engagement\n- **[Connections ↗](https://segment.com/product/connections/)**  \n  Integrate web and mobile app data with a single API\n- **[Protocols ↗](https://segment.com/product/protocols/)**  \n  Protect the integrity of your data\n- **[Unify ↗](https://segment.com/product/unify/)**  \n  Unify customer data across every channel\n- **[Journeys ↗](https://segment.com/product/twilio-engage/journeys)**  \n  Orchestrate multichannel customer journeys\n\n[See all products](#)\n\n## Solutions\n### Use Cases\n- **[Verification & identity](#)**  \n  Add user verification to protect against fraud.\n  \n- **[Alerts & notifications](#)**  \n  Deliver notifications across text, email, and voice.\n  \n- **[Marketing & promotions](#)**  \n  Create multichannel marketing campaigns.\n  \n- **[Contact Center](#)**  \n  Provide personalized, data-driven service.\n  \n- **[IVR & self-service](#)**  \n  Set up a modern IVR with AI-enabled support.\n\n### Teams\n- **Marketing**  \n  Keep customers engaged on any channel\n- **Product & Engineering**  \n  Connect with target users reliably and securely\n- **Customer Experience**  \n  Deliver personalized sales and support experiences at scale\n- **Developers**  \n  Tutorials and docs to start building on Twilio\n\n### Industries\n- **Financial Services**\n- **Healthcare**\n- **Hospitality**\n- **Public Sector**\n- **Real Estate**\n- **Retail**\n\n### Business Size\n- **Enterprise**\n- **Startup**\n- **Nonprofit ↗**\n\n[See all solutions](#)\n\n### Partners\n- **[Find a partner](#)**  \n  Work with a Twilio partner to buy or build the right solution\n- **[Partner with us](#)**  \n  Join our Partner Program to build or sell Twilio solutions to your customers.\n\n## Developers\n### Documentation\n- **[Twilio Flex](https://www.twilio.com/docs/flex)**\n- **[SMS](https://www.twilio.com/docs/sms)**\n- **[Voice](https://www.twilio.com/docs/voice)**\n- **[Email](https://docs.sendgrid.com/)**\n- **[WhatsApp API](https://www.twilio.com/docs/whatsapp)**\n- **[Verify](https://www.twilio.com/docs/verify/api)**\n- **[Functions](https://www.twilio.com/docs/serverless/functions-assets/functions)**\n- **[Studio](https://www.twilio.com/docs/studio)**\n- **[Twilio CLI](https://www.twilio.com/docs/twilio-cli/quickstart)**\n\n[See all docs](https://www.twilio.com/docs)\n\n## Community\n- **[Ahoy!](#)**  \n  Get inspired by the latest from our developer community\n- **[Developer Blog](#)**  \n  Read tutorials, community projects, and product updates\n- **[Stack Overflow](#)**  \n  Ask the Twilio community for help\n- **[Champions](#)**  \n  Become a Twilio community Champion\n\n## Tools & Resources\n- **[CodeExchange](#)**  \n  Usable code samples for faster builds\n- **[Changelog](#)**  \n  See updates and additions to Twilio products\n- **[API Status](#)**  \n  Check real-time monitoring of APIs and all services\n\n## Why Twilio\n### Company\n- **[Why Twilio](#)**  \n  The trusted platform for data-driven customer engagement across any channel.\n  \n- **[About Us](#)**  \n  Twilio company page\n- **[Twilio Magic](#)**  \n  Twilio core values\n- **[Diversity](#)**  \n  Diversity, equity, and inclusion\n- **[Investor Relations](#)**  \n  Information for Twilio investors\n- **[Press & Media](#)**  \n  Latest announcements and launches\n\n### Our Platform\n- **[Customer Engagement Platform](#)**  \n  Build durable customer relationships with personalized, data-driven engagement\n- **[CustomerAI](#)**  \n  Combine real-time engagement data with AI to know your customers better.\n- **[Trust Center](#)**  \n  Twilio’s security, data privacy, regulatory compliance, and resiliency policies.\n- **[Super Network](#)**  \n  Simplify, strengthen, and unite carrier communication networks using software.\n\n### Resources\n- **[Resource Center](#)**  \n  Browse our content library for more resources on how you can create lasting customer relationships\n- **[Customer Stories](#)**  \n  See what customers are building with Twilio\n- **[Blog](#)**  \n  Explore the latest product updates, technical tutorials, and best practices\n- **[State of Customer Engagement](#)**  \n  See the top trends shaping customer engagement in our annual report\n- **[Twilio Events](#)**  \n  Join upcoming group events\n\n## Pricing\n### Communications\n- **[Messaging](#)**  \n- **[Email ↗](#)**  \n- **[Voice](#)**  \n- **[Verify](#)**  \n- **[Lookup](#)**  \n- **[Serverless](#)**  \n- **[Video](#)**  \n\n### Applications\n- **[Twilio Flex](#)**  \n- **[Twilio Segment ↗](#)**  \n- **[Marketing Campaigns](#)**  \n\n[See all pricing](#)\n\n---\n\n### Company Information\n- **[Overview](#)**\n- **[Values](#)**\n- **[Diversity](#)**\n- **[Culture](#)**\n- **[Jobs](#)**\n- **[Press](#)**\n- **[Blog](#)**\n\n### Open Jobs\n**Find your dream job.**  \nWe welcome builders of every persuasion at Twilio. If you see a position that sparks your imagination, please apply. Come help us grow a global, remote-first company where all feel proud to belong and do their best.\n\n**[Find and apply for a remote Twilio job](#)**\n\n## Commitment to Equal Employment Opportunity\nTwilio is proud to be an Equal Employment Opportunity and Affirmative Action employer. We do not discriminate based on legally protected characteristics. We also accommodate qualified individuals with disabilities and disabled veterans in our job application procedures.\n\n### Important Notice to Applicants\nTwilio and our recruiters only direct candidates to apply through our official careers page at [www.Twilio.com/company/jobs](www.Twilio.com/company/jobs). We will never refer you to external websites or ask for personal information.\n\n---\n\n**We can't wait to see what you build.**\n```"}
{"timestamp":"2024-11-07 15:27:28.169","prompt":"enable-javascript-instructions","response":"enable-javascript-instructions"}
{"timestamp":"2024-11-07 15:27:28.299","prompt":"You need to enable JavaScript to run this app.","response":"You need to enable JavaScript to run this app."}
{"timestamp":"2024-11-07 15:31:26.412","prompt":"# JavaScript Required\n\nYou need to enable JavaScript to run this app.","response":"# JavaScript Required\n\nYou need to enable JavaScript to run this app."}
{"timestamp":"2024-11-07 15:31:26.925","prompt":"enable-javascript-instructions","response":"enable-javascript-instructions"}
{"timestamp":"2024-11-07 15:32:31.166","prompt":"You need to enable JavaScript to run this app.","response":"You need to enable JavaScript to run this app."}
{"timestamp":"2024-11-07 15:32:31.168","prompt":"enable-javascript-to-run-app","response":"enable-javascript-to-run-app"}
{"timestamp":"2024-11-07 15:35:20.150","prompt":"realtime_api_integration_guide","response":"realtime_api_integration_guide"}
{"timestamp":"2024-11-07 15:35:55.279","prompt":"# Realtime API\n\n## Beta\n\nBuild low-latency, multi-modal experiences with Realtime API. The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports **text and audio** as both **input** and **output**, as well as **[function calling](#function-calls)**.\n\n### Benefits of the API\n\n1. **Native speech-to-speech:** Skipping an intermediate text format means low latency and nuanced output.\n2. **Natural, steerable voices:** Models can laugh, whisper, and adhere to tone direction, with natural inflection.\n3. **Simultaneous multimodal output:** Text is useful for moderation; faster-than-realtime audio ensures stable playback.\n\n**Note:** The Realtime API is in beta, and we currently don't offer client-side authentication. Applications should route audio from the client to an application server, which can then securely authenticate with the Realtime API.\n\nNetwork conditions heavily affect real-time audio, and delivering audio reliably from a client to a server at scale is challenging when conditions are unpredictable. If your application does not control network reliability, consider using a purpose-built third-party solution.\n\n---\n\n## Quickstart\n\nThe Realtime API is a **server-side WebSocket interface**. You can download and configure the Realtime console demo to visualize and inspect the event flow in a Realtime integration.\n\n### Getting Started\n\n1. **[Get started with the Realtime console](https://github.com/openai/openai-realtime-console)**\n2. **Partner Integrations for Frontend Applications:**\n   - **[LiveKit integration guide](https://docs.livekit.io/agents/openai/overview/)**\n   - **[Twilio integration guide](https://www.twilio.com/en-us/blog/twilio-openai-realtime-api-launch-integration)**\n   - **[Agora integration quickstart](https://docs.agora.io/en/open-ai-integration/get-started/quickstart)**\n\n---\n\n## Overview\n\nThe Realtime API is a **stateful**, **event-based API** that communicates over a WebSocket. Here are the connection parameters:\n\n- **URL:** `wss://api.openai.com/v1/realtime`\n- **Query Parameters:** `?model=gpt-4o-realtime-preview-2024-10-01`\n- **Headers:** \n  - `Authorization: Bearer YOUR_API_KEY`\n  - `OpenAI-Beta: realtime=v1`\n\n### Example Connection in Node.js\n\n```javascript\nimport WebSocket from \"ws\";\n\nconst url = \"wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01\";\nconst ws = new WebSocket(url, {\n    headers: {\n        \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n        \"OpenAI-Beta\": \"realtime=v1\",\n    },\n});\n\nws.on(\"open\", function open() {\n    console.log(\"Connected to server.\");\n    ws.send(JSON.stringify({\n        type: \"response.create\",\n        response: {\n            modalities: [\"text\"],\n            instructions: \"Please assist the user.\",\n        }\n    }));\n});\n\nws.on(\"message\", function incoming(message) {\n    console.log(JSON.parse(message.toString()));\n});\n```\n\n### Events Overview\n\nOnce connected, you'll be able to send and receive a variety of events which represent text, audio, function calls, interruptions, and more.\n\nFor a complete listing of events sent by the client and emitted by the server, refer to the **[API reference](#api-reference)**.\n\n---\n\n## Concepts\n\n### State\n\nThe session's state consists of:\n- Session\n- Input Audio Buffer\n- Conversations (list of items)\n- Responses (generate list of items)\n\n#### Session\n\nA session refers to a single WebSocket connection between a client and the server.\n\nOnce a client creates a session, it then sends JSON-formatted events containing text and audio chunks. Example Session object:\n\n```json\n{\n  \"id\": \"sess_001\",\n  \"object\": \"realtime.session\",\n  \"model\": \"gpt-4o\",\n  \"voice\": \"alloy\"\n}\n```\n\n#### Conversation\n\nA realtime Conversation consists of a list of items. Example Conversation object:\n\n```json\n{\n  \"id\": \"conv_001\",\n  \"object\": \"realtime.conversation\"\n}\n```\n\n#### Items\n\nA realtime Item can be one of three types:\n- `message` (can contain text or audio)\n- `function_call` (indicates a model's desire to call a function)\n- `function_call_output` (indicates a function response)\n\nExample Item object:\n\n```json\n{\n  \"id\": \"msg_001\",\n  \"object\": \"realtime.item\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"role\": \"user\",\n  \"content\": [{\n    \"type\": \"input_text\",\n    \"text\": \"Hello, how's it going?\"\n  }]\n}\n```\n\n#### Input Audio Buffer\n\nThe server maintains an Input Audio Buffer containing client-provided audio that has not yet been committed to the conversation state.\n\n### Responses\n\nThe server's response timing depends on the `turn_detection` configuration.\n\n#### Server VAD mode\n\nThe server runs Voice Activity Detection (VAD) over the incoming audio and responds after the end of speech.\n\n### No turn detection\n\nThe client sends an explicit message requesting a response from the server.\n\n---\n\n## Integration Guide\n\n### Audio Formats\n\nSupported audio formats include:\n- Raw 16-bit PCM audio at 24kHz\n- G.711 at 8kHz (both u-law and a-law)\n\nAudio must be base64 encoded chunks of audio frames.\n\n### Instructions\n\nYou can control the content of the server's response by setting `instructions` on the session or per-response. Recommended instructions:\n\n> Your knowledge cutoff is 2023-10. You are a helpful, witty, and friendly AI...\n\n### Sending Events\n\nTo send events to the API, use a JSON string for your event payload:\n\n```javascript\nws.on('open', () => {\n  const event = {\n    type: 'conversation.item.create',\n    item: {\n      type: 'message',\n      role: 'user',\n      content: [{ type: 'input_text', text: 'Hello!' }]\n    }\n  };\n  ws.send(JSON.stringify(event));\n});\n```\n\n### Receiving Events\n\nListen for the WebSocket message event and parse the result as JSON:\n\n```javascript\nws.on('message', data => {\n  try {\n    const event = JSON.parse(data);\n    console.log(event);\n  } catch (e) {\n    console.error(e);\n  }\n});\n```\n\n### Handling Interruptions\n\nYou can interrupt server audio responses by sending a `response.cancel` message.\n\n### Handling Errors\n\nMonitor for the `error` message type and handle errors accordingly:\n\n```javascript\nconst errorHandler = (error) => {\n  console.log('type', error.type);\n  console.log('code', error.code);\n  console.log('message', error.message);\n  console.log('param', error.param);\n  console.log('event_id', error.event_id);\n};\n\nws.on('message', data => {\n  try {\n    const event = JSON.parse(data);\n    if (event.type === 'error') {\n      const { error } = event;\n      errorHandler(error);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n});\n```\n\n### Adding History\n\nYou can populate a conversation history, but only the server can create Assistant messages with audio.\n\n### Continuing Conversations\n\nSessions and conversations are ephemeral—use previous transcripts to simulate prior discussions upon reconnection.\n\n---\n\n## Events Overview\n\nThere are **9 client events** and **28 server events**. You can view the full specification in the **[API reference](#api-reference)**.\n\n### Client Events\n\n- [session.update](#session-update)\n- [input_audio_buffer.append](#input_audio_buffer/append)\n- [input_audio_buffer.commit](#input_audio_buffer/commit)\n- [input_audio_buffer.clear](#input_audio_buffer/clear)\n- [conversation.item.create](#conversation/item/create)\n- [conversation.item.truncate](#conversation/item/truncate)\n- [conversation.item.delete](#conversation/item/delete)\n- [response.create](#response/create)\n- [response.cancel](#response/cancel)\n\n### Server Events\n\n- [error](#error)\n- [session.created](#session/created)\n- [session.updated](#session/updated)\n- [conversation.created](#conversation/created)\n- [input_audio_buffer.committed](#input_audio_buffer/committed)\n- [input_audio_buffer.cleared](#input_audio_buffer/cleared)\n- [input_audio_buffer.speech_started](#input_audio_buffer/speech_started)\n- [input_audio_buffer.speech_stopped](#input_audio_buffer/speech_stopped)\n- [conversation.item.created](#conversation/item/created)\n- [response.created](#response/created)\n- [response.done](#response/done)\n\nFor additional details, refer to the relevant sections of this guide.","response":"# Realtime API\n\n## Beta\n\nBuild low-latency, multi-modal experiences with Realtime API. The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports **text and audio** as both **input** and **output**, as well as **[function calling](#function-calls)**.\n\n### Benefits of the API\n\n1. **Native speech-to-speech:** Skipping an intermediate text format means low latency and nuanced output.\n2. **Natural, steerable voices:** Models can laugh, whisper, and adhere to tone direction, with natural inflection.\n3. **Simultaneous multimodal output:** Text is useful for moderation; faster-than-realtime audio ensures stable playback.\n\n**Note:** The Realtime API is in beta, and we currently don't offer client-side authentication. Applications should route audio from the client to an application server, which can then securely authenticate with the Realtime API.\n\nNetwork conditions heavily affect real-time audio, and delivering audio reliably from a client to a server at scale is challenging when conditions are unpredictable. If your application does not control network reliability, consider using a purpose-built third-party solution.\n\n---\n\n## Quickstart\n\nThe Realtime API is a **server-side WebSocket interface**. You can download and configure the Realtime console demo to visualize and inspect the event flow in a Realtime integration.\n\n### Getting Started\n\n1. **[Get started with the Realtime console](https://github.com/openai/openai-realtime-console)**\n2. **Partner Integrations for Frontend Applications:**\n   - **[LiveKit integration guide](https://docs.livekit.io/agents/openai/overview/)**\n   - **[Twilio integration guide](https://www.twilio.com/en-us/blog/twilio-openai-realtime-api-launch-integration)**\n   - **[Agora integration quickstart](https://docs.agora.io/en/open-ai-integration/get-started/quickstart)**\n\n---\n\n## Overview\n\nThe Realtime API is a **stateful**, **event-based API** that communicates over a WebSocket. Here are the connection parameters:\n\n- **URL:** `wss://api.openai.com/v1/realtime`\n- **Query Parameters:** `?model=gpt-4o-realtime-preview-2024-10-01`\n- **Headers:** \n  - `Authorization: Bearer YOUR_API_KEY`\n  - `OpenAI-Beta: realtime=v1`\n\n### Example Connection in Node.js\n\n```javascript\nimport WebSocket from \"ws\";\n\nconst url = \"wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01\";\nconst ws = new WebSocket(url, {\n    headers: {\n        \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n        \"OpenAI-Beta\": \"realtime=v1\",\n    },\n});\n\nws.on(\"open\", function open() {\n    console.log(\"Connected to server.\");\n    ws.send(JSON.stringify({\n        type: \"response.create\",\n        response: {\n            modalities: [\"text\"],\n            instructions: \"Please assist the user.\",\n        }\n    }));\n});\n\nws.on(\"message\", function incoming(message) {\n    console.log(JSON.parse(message.toString()));\n});\n```\n\n### Events Overview\n\nOnce connected, you'll be able to send and receive a variety of events which represent text, audio, function calls, interruptions, and more.\n\nFor a complete listing of events sent by the client and emitted by the server, refer to the **[API reference](#api-reference)**.\n\n---\n\n## Concepts\n\n### State\n\nThe session's state consists of:\n- Session\n- Input Audio Buffer\n- Conversations (list of items)\n- Responses (generate list of items)\n\n#### Session\n\nA session refers to a single WebSocket connection between a client and the server.\n\nOnce a client creates a session, it then sends JSON-formatted events containing text and audio chunks. Example Session object:\n\n```json\n{\n  \"id\": \"sess_001\",\n  \"object\": \"realtime.session\",\n  \"model\": \"gpt-4o\",\n  \"voice\": \"alloy\"\n}\n```\n\n#### Conversation\n\nA realtime Conversation consists of a list of items. Example Conversation object:\n\n```json\n{\n  \"id\": \"conv_001\",\n  \"object\": \"realtime.conversation\"\n}\n```\n\n#### Items\n\nA realtime Item can be one of three types:\n- `message` (can contain text or audio)\n- `function_call` (indicates a model's desire to call a function)\n- `function_call_output` (indicates a function response)\n\nExample Item object:\n\n```json\n{\n  \"id\": \"msg_001\",\n  \"object\": \"realtime.item\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"role\": \"user\",\n  \"content\": [{\n    \"type\": \"input_text\",\n    \"text\": \"Hello, how's it going?\"\n  }]\n}\n```\n\n#### Input Audio Buffer\n\nThe server maintains an Input Audio Buffer containing client-provided audio that has not yet been committed to the conversation state.\n\n### Responses\n\nThe server's response timing depends on the `turn_detection` configuration.\n\n#### Server VAD mode\n\nThe server runs Voice Activity Detection (VAD) over the incoming audio and responds after the end of speech.\n\n### No turn detection\n\nThe client sends an explicit message requesting a response from the server.\n\n---\n\n## Integration Guide\n\n### Audio Formats\n\nSupported audio formats include:\n- Raw 16-bit PCM audio at 24kHz\n- G.711 at 8kHz (both u-law and a-law)\n\nAudio must be base64 encoded chunks of audio frames.\n\n### Instructions\n\nYou can control the content of the server's response by setting `instructions` on the session or per-response. Recommended instructions:\n\n> Your knowledge cutoff is 2023-10. You are a helpful, witty, and friendly AI...\n\n### Sending Events\n\nTo send events to the API, use a JSON string for your event payload:\n\n```javascript\nws.on('open', () => {\n  const event = {\n    type: 'conversation.item.create',\n    item: {\n      type: 'message',\n      role: 'user',\n      content: [{ type: 'input_text', text: 'Hello!' }]\n    }\n  };\n  ws.send(JSON.stringify(event));\n});\n```\n\n### Receiving Events\n\nListen for the WebSocket message event and parse the result as JSON:\n\n```javascript\nws.on('message', data => {\n  try {\n    const event = JSON.parse(data);\n    console.log(event);\n  } catch (e) {\n    console.error(e);\n  }\n});\n```\n\n### Handling Interruptions\n\nYou can interrupt server audio responses by sending a `response.cancel` message.\n\n### Handling Errors\n\nMonitor for the `error` message type and handle errors accordingly:\n\n```javascript\nconst errorHandler = (error) => {\n  console.log('type', error.type);\n  console.log('code', error.code);\n  console.log('message', error.message);\n  console.log('param', error.param);\n  console.log('event_id', error.event_id);\n};\n\nws.on('message', data => {\n  try {\n    const event = JSON.parse(data);\n    if (event.type === 'error') {\n      const { error } = event;\n      errorHandler(error);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n});\n```\n\n### Adding History\n\nYou can populate a conversation history, but only the server can create Assistant messages with audio.\n\n### Continuing Conversations\n\nSessions and conversations are ephemeral—use previous transcripts to simulate prior discussions upon reconnection.\n\n---\n\n## Events Overview\n\nThere are **9 client events** and **28 server events**. You can view the full specification in the **[API reference](#api-reference)**.\n\n### Client Events\n\n- [session.update](#session-update)\n- [input_audio_buffer.append](#input_audio_buffer/append)\n- [input_audio_buffer.commit](#input_audio_buffer/commit)\n- [input_audio_buffer.clear](#input_audio_buffer/clear)\n- [conversation.item.create](#conversation/item/create)\n- [conversation.item.truncate](#conversation/item/truncate)\n- [conversation.item.delete](#conversation/item/delete)\n- [response.create](#response/create)\n- [response.cancel](#response/cancel)\n\n### Server Events\n\n- [error](#error)\n- [session.created](#session/created)\n- [session.updated](#session/updated)\n- [conversation.created](#conversation/created)\n- [input_audio_buffer.committed](#input_audio_buffer/committed)\n- [input_audio_buffer.cleared](#input_audio_buffer/cleared)\n- [input_audio_buffer.speech_started](#input_audio_buffer/speech_started)\n- [input_audio_buffer.speech_stopped](#input_audio_buffer/speech_stopped)\n- [conversation.item.created](#conversation/item/created)\n- [response.created](#response/created)\n- [response.done](#response/done)\n\nFor additional details, refer to the relevant sections of this guide."}
{"timestamp":"2024-11-07 15:36:11.907","prompt":"scrapingbee_html_api_documentation","response":"scrapingbee_html_api_documentation"}
{"timestamp":"2024-11-07 15:37:03.891","prompt":"```markdown\n# Documentation - HTML API\n\n**Choose your favorite language**\n- [Python](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [cURL](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [NodeJS](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Java](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Ruby](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Php](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Go](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n\n## Overview\n\nHere is the list of the different parameters you can use with ScrapingBee's HTML API.\n\nYou can also discover this API using our Postman collection covering every ScrapingBee's features.\n\n| Name                | Type                      | Default Value     | Description                                                                         |\n|---------------------|--------------------------|--------------------|-------------------------------------------------------------------------------------|\n| `api_key`           | string                   | required            | Your API key  [Get your API Key](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `url`               | string                   | required            | The URL of the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `ai_query`          | string                   | \"\"                 | Information you want to extract from the webpage using AI [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `ai_selector`       | string                   | \"\"                 | CSS selector to focus the AI extraction on a specific part of the page [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `block_ads`         | boolean                  | false              | Block ads on the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `block_resources`    | boolean                  | true               | Block images and CSS on the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `cookies`           | string                   | \"\"                 | Pass custom cookies to the webpage you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `country_code`      | string                   | \"\"                 | Premium proxy geolocation [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `custom_google`     | boolean                  | false              | Set to true to scrape Google [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `device`            | string                   | \"desktop\"          | Control the device the request will be sent from [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `extract_rules`     | stringified JSON         | \"\"                 | Data extraction from CSS selectors [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `forward_headers`   | boolean                  | false              | Forward particular headers to the webpage, as well as other headers generated by ScrapingBee [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `forward_headers_pure` | boolean               | false              | Forward only particular headers to the webpage, and nothing else [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `js_scenario`       | stringified JSON         | {}                 | JavaScript scenario to execute [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `json_response`     | bool                     | false              | Wrap response in JSON [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `own_proxy`         | string                   | \"\"                 | Allows you to use ScrapingBee with your own proxy provider [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `premium_proxy`     | boolean                  | false              | Use premium proxies to bypass difficult to scrape websites [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `render_js`         | boolean                  | True               | Render the JavaScript on the page with a headless browser [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `return_page_source` | boolean                 | false              | Return the original HTML before the JavaScript rendering [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `screenshot`        | boolean                  | false              | Return a screenshot of the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `screenshot_full_page` | boolean               | false              | Return a screenshot of the full page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `screenshot_selector` | string                 | \"\"                 | Return a screenshot of a particular area of the page, targeted by a CSS selector [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `session_id`        | integer                  | \"\"                 | Route multiple API requests through the same IP address [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `stealth_proxy`     | boolean                  | false              | Use special stealth proxy pool [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `timeout`           | int                      | 140000             | Timeout for your requests [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `transparent_status_code` | boolean            | false              | Transparently return the same HTTP code of the page requested [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `wait`              | integer                  | 0                  | Additional time in ms for JavaScript to render [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `wait_browser`      | string                   | domcontentloaded    | Wait until certain browser conditions are met before returning the response [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `wait_for`          | string                   | \"\"                 | CSS / XPath selector to wait for in the DOM [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `window_height`     | int                      | 1080               | Height, in pixel, of the viewport used to render the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `window_width`      | int                      | 1920               | Width, in pixel, of the viewport used to render the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n\n### Getting Started\nScrapingBee is meant to be the easiest scraping API available on the web.\n\nTo scrape a web page, you only need two things:\n1. Your API key, available [here](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY)\n2. The **encoded** web page URL ([learn more about URL encoding](https://www.w3schools.com/tags/ref_urlencode.asp))\n\nThe following snippet is an example of a simple `GET` API call to scrape the URL defined in the query string variable `YOUR-URL`:\n\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL\"\n```\n\n### Example Code\n#### Python\n```python\n# Install the Python ScrapingBee library:\n# pip install scrapingbee\n\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get(\"YOUR-URL\")\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n#### NodeJS\n```javascript\n// Install the Node ScrapingBee library\n// npm install scrapingbee\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: { },\n  })\n  return response\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs: ' + e.response.data));\n```\n\n#### Java\n```java\nimport java.io.IOException;\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL\")\n        .execute().returnContent();\n      System.out.println(content);\n    } catch (IOException e) {\n      System.out.println(e);\n    }\n  }\n}\n```\n\n#### Ruby\n```ruby\nrequire 'net/http'\nrequire 'net/https'\n\ndef send_request \n    uri = URI('https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL')\n\n    http = Net::HTTP.new(uri.host, uri.port)\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n\n    req =  Net::HTTP::Get.new(uri)\n\n    res = http.request(req)\n    puts \"Response HTTP Status Code: #{ res.code }\"\n    puts \"Response HTTP Response Body: #{ res.body }\"\nrescue StandardError => e\n    puts \"HTTP Request failed (#{ e.message })\"\nend\n\nsend_request()\n```\n\n#### PHP\n```php\n<?php\n$ch = curl_init();\n\ncurl_setopt($ch, CURLOPT_URL, 'https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL');\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n$response = curl_exec($ch);\nif (!$response) {\n    die('Error: \"' . curl_error($ch) . '\" - Code: ' . curl_errno($ch));\n}\n\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\ncurl_close($ch);\n?>\n```\n\n#### Go\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        client := &http.Client{}\n\n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL\", nil)\n\n        if err != nil {\n                fmt.Println(err)\n        }\n\n        resp, err := client.Do(req)\n        if err != nil {\n                fmt.Println(\"Failure: \", err)\n        }\n\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        fmt.Println(\"Response Status: \", resp.Status)\n        fmt.Println(\"Response Headers: \", resp.Header)\n        fmt.Println(\"Response Body: \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n### Response\nThe API will then respond with the raw HTML content of the target URL:\n```html\n<html>\n  <head>\n     ...\n  </head>\n  <body>\n     ...\n  </body>\n</html>\n```\n\nEvery URL that failed will be retried as many times as possible for 30 seconds. Be aware of the maximum 30-second timeout when your code calls the API.\n\nHeaders and cookies returned by the target website are prefixed with `Spb-` (for **S**cra**P**ing**B**ee).\n\n## API Key\n### `api_key`\n- **Type**: `string` (default= `\"\"`)\n- **Required**: Yes\n\nAll requests are authenticated using your private API key.\n\nTo get access to your API key, create an account [here](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) and confirm your email address.\n```\n","response":"```markdown\n# Documentation - HTML API\n\n**Choose your favorite language**\n- [Python](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [cURL](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [NodeJS](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Java](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Ruby](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Php](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n- [Go](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL)\n\n## Overview\n\nHere is the list of the different parameters you can use with ScrapingBee's HTML API.\n\nYou can also discover this API using our Postman collection covering every ScrapingBee's features.\n\n| Name                | Type                      | Default Value     | Description                                                                         |\n|---------------------|--------------------------|--------------------|-------------------------------------------------------------------------------------|\n| `api_key`           | string                   | required            | Your API key  [Get your API Key](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `url`               | string                   | required            | The URL of the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `ai_query`          | string                   | \"\"                 | Information you want to extract from the webpage using AI [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `ai_selector`       | string                   | \"\"                 | CSS selector to focus the AI extraction on a specific part of the page [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `block_ads`         | boolean                  | false              | Block ads on the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `block_resources`    | boolean                  | true               | Block images and CSS on the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `cookies`           | string                   | \"\"                 | Pass custom cookies to the webpage you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `country_code`      | string                   | \"\"                 | Premium proxy geolocation [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `custom_google`     | boolean                  | false              | Set to true to scrape Google [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `device`            | string                   | \"desktop\"          | Control the device the request will be sent from [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `extract_rules`     | stringified JSON         | \"\"                 | Data extraction from CSS selectors [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `forward_headers`   | boolean                  | false              | Forward particular headers to the webpage, as well as other headers generated by ScrapingBee [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `forward_headers_pure` | boolean               | false              | Forward only particular headers to the webpage, and nothing else [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `js_scenario`       | stringified JSON         | {}                 | JavaScript scenario to execute [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `json_response`     | bool                     | false              | Wrap response in JSON [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `own_proxy`         | string                   | \"\"                 | Allows you to use ScrapingBee with your own proxy provider [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `premium_proxy`     | boolean                  | false              | Use premium proxies to bypass difficult to scrape websites [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `render_js`         | boolean                  | True               | Render the JavaScript on the page with a headless browser [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `return_page_source` | boolean                 | false              | Return the original HTML before the JavaScript rendering [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `screenshot`        | boolean                  | false              | Return a screenshot of the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `screenshot_full_page` | boolean               | false              | Return a screenshot of the full page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `screenshot_selector` | string                 | \"\"                 | Return a screenshot of a particular area of the page, targeted by a CSS selector [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `session_id`        | integer                  | \"\"                 | Route multiple API requests through the same IP address [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `stealth_proxy`     | boolean                  | false              | Use special stealth proxy pool [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `timeout`           | int                      | 140000             | Timeout for your requests [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `transparent_status_code` | boolean            | false              | Transparently return the same HTTP code of the page requested [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `wait`              | integer                  | 0                  | Additional time in ms for JavaScript to render [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `wait_browser`      | string                   | domcontentloaded    | Wait until certain browser conditions are met before returning the response [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `wait_for`          | string                   | \"\"                 | CSS / XPath selector to wait for in the DOM [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `window_height`     | int                      | 1080               | Height, in pixel, of the viewport used to render the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n| `window_width`      | int                      | 1920               | Width, in pixel, of the viewport used to render the page you want to scrape [Learn more](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) |\n\n### Getting Started\nScrapingBee is meant to be the easiest scraping API available on the web.\n\nTo scrape a web page, you only need two things:\n1. Your API key, available [here](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY)\n2. The **encoded** web page URL ([learn more about URL encoding](https://www.w3schools.com/tags/ref_urlencode.asp))\n\nThe following snippet is an example of a simple `GET` API call to scrape the URL defined in the query string variable `YOUR-URL`:\n\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL\"\n```\n\n### Example Code\n#### Python\n```python\n# Install the Python ScrapingBee library:\n# pip install scrapingbee\n\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get(\"YOUR-URL\")\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n#### NodeJS\n```javascript\n// Install the Node ScrapingBee library\n// npm install scrapingbee\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: { },\n  })\n  return response\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs: ' + e.response.data));\n```\n\n#### Java\n```java\nimport java.io.IOException;\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL\")\n        .execute().returnContent();\n      System.out.println(content);\n    } catch (IOException e) {\n      System.out.println(e);\n    }\n  }\n}\n```\n\n#### Ruby\n```ruby\nrequire 'net/http'\nrequire 'net/https'\n\ndef send_request \n    uri = URI('https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL')\n\n    http = Net::HTTP.new(uri.host, uri.port)\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n\n    req =  Net::HTTP::Get.new(uri)\n\n    res = http.request(req)\n    puts \"Response HTTP Status Code: #{ res.code }\"\n    puts \"Response HTTP Response Body: #{ res.body }\"\nrescue StandardError => e\n    puts \"HTTP Request failed (#{ e.message })\"\nend\n\nsend_request()\n```\n\n#### PHP\n```php\n<?php\n$ch = curl_init();\n\ncurl_setopt($ch, CURLOPT_URL, 'https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL');\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n$response = curl_exec($ch);\nif (!$response) {\n    die('Error: \"' . curl_error($ch) . '\" - Code: ' . curl_errno($ch));\n}\n\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\ncurl_close($ch);\n?>\n```\n\n#### Go\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        client := &http.Client{}\n\n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL\", nil)\n\n        if err != nil {\n                fmt.Println(err)\n        }\n\n        resp, err := client.Do(req)\n        if err != nil {\n                fmt.Println(\"Failure: \", err)\n        }\n\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        fmt.Println(\"Response Status: \", resp.Status)\n        fmt.Println(\"Response Headers: \", resp.Header)\n        fmt.Println(\"Response Body: \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n### Response\nThe API will then respond with the raw HTML content of the target URL:\n```html\n<html>\n  <head>\n     ...\n  </head>\n  <body>\n     ...\n  </body>\n</html>\n```\n\nEvery URL that failed will be retried as many times as possible for 30 seconds. Be aware of the maximum 30-second timeout when your code calls the API.\n\nHeaders and cookies returned by the target website are prefixed with `Spb-` (for **S**cra**P**ing**B**ee).\n\n## API Key\n### `api_key`\n- **Type**: `string` (default= `\"\"`)\n- **Required**: Yes\n\nAll requests are authenticated using your private API key.\n\nTo get access to your API key, create an account [here](https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY) and confirm your email address.\n```\n"}
{"timestamp":"2024-11-07 15:37:56.906","prompt":"```markdown\n}\n\n```php\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\n// Close curl resource to free up system resources\ncurl_close($ch);\n```\n\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        // Create client\n        client := &http.Client{}\n\n        // Create request \n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&window_height=500\", nil)\n\n        parseFormErr := req.ParseForm()\n        if parseFormErr != nil {\n                fmt.Println(parseFormErr)\n        }\n\n        // Fetch Request\n        resp, err := client.Do(req)\n\n        if err != nil {\n                fmt.Println(\"Failure : \", err)\n        }\n\n        // Read Response Body\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        // Display Results\n        fmt.Println(\"response Status : \", resp.Status)\n        fmt.Println(\"response Headers : \", resp.Header)\n        fmt.Println(\"response Body : \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n## Proxies\n\n### Premium Proxy\n\n- `premium_proxy`: **boolean** (default=`false`)\n  \nFor some hard-to-scrape websites, you may need to use premium or residential proxies. These proxies are rarely blocked, and we recommend trying them when you receive error codes from difficult-to-scrape websites, such as search engines or social networks.\n\nTo use premium proxies, add the parameter `premium_proxy=true`.\n\n- Each request with this parameter will count as **25 API credits with JavaScript enabled**. If used without [JavaScript rendering](https://docs.scrapingbee.com/javascript-rendering), it will cost **10 credits**.\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True\"\n```\n\n#### Python Example\n\nInstall the Python ScrapingBee library:\n```bash\npip install scrapingbee\n```\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'premium_proxy': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n#### NodeJS Example\n\nInstall the Node ScrapingBee library:\n```bash\nnpm install scrapingbee\n```\n\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'premium_proxy': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n#### Java Example\n\n```java\nimport java.io.IOException;\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    // Classic (GET)\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True\")\n      .execute().returnContent();\n\n      // Print content\n      System.out.println(content);\n    } catch (IOException e) {\n      System.out.println(e);\n    }\n  }\n}\n```\n\n#### Ruby Example\n\n```ruby\nrequire 'net/http'\nrequire 'net/https'\n\n# Classic (GET)\ndef send_request \n    uri = URI('https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True')\n\n    # Create client\n    http = Net::HTTP.new(uri.host, uri.port)\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n\n    # Create Request\n    req = Net::HTTP::Get.new(uri)\n\n    # Fetch Request\n    res = http.request(req)\n    puts \"Response HTTP Status Code: #{ res.code }\"\n    puts \"Response HTTP Response Body: #{ res.body }\"\nrescue StandardError => e\n    puts \"HTTP Request failed (#{ e.message })\"\nend\n\nsend_request()\n```\n\n#### PHP Example\n\n```php\n<?php\n\n// Get cURL resource\n$ch = curl_init();\n\n// Set URL \ncurl_setopt($ch, CURLOPT_URL, 'https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True');\n\n// Set method\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\n\n// Return the transfer as a string\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n// Send the request and save response to $response\n$response = curl_exec($ch);\n\n// Stop if fails\nif (!$response) {\n    die('Error: \"' . curl_error($ch) . '\" - Code: ' . curl_errno($ch));\n}\n\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\n// Close curl resource to free up system resources\ncurl_close($ch);\n?>\n```\n\n#### Go Example\n\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        // Create client\n        client := &http.Client{}\n\n        // Create request \n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True\", nil)\n\n        parseFormErr := req.ParseForm()\n        if parseFormErr != nil {\n                fmt.Println(parseFormErr)\n        }\n\n        // Fetch Request\n        resp, err := client.Do(req)\n\n        if err != nil {\n                fmt.Println(\"Failure : \", err)\n        }\n\n        // Read Response Body\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        // Display Results\n        fmt.Println(\"response Status : \", resp.Status)\n        fmt.Println(\"response Headers : \", resp.Header)\n        fmt.Println(\"response Body : \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n### Geolocation\n\n- `country_code`: **string** (default=`\"\"`)\n\nIn addition to premium proxies, you can choose the proxy country from a list of countries by using the parameter `country_code=COUNTRY_CODE`.\n\nTo use premium proxies from Germany, set both `premium_proxy=true` and `country_code=de` in your API call.\n\n**Country Codes Table:**\n\n| country_code | Country Name      |\n|--------------|-------------------|\n| br           | Brazil            |\n| in           | India             |\n| mx           | Mexico            |\n| ...          | ...               |\n| ru           | Russia            |\n| us           | United States     |\n| gb           | United Kingdom    |\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True\"\n```\n\n#### Python Example\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'country_code': 'de',\n         'premium_proxy': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n#### NodeJS Example\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'country_code': 'de',\n         'premium_proxy': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n#### Java Example\n```java\nimport java.io.IOException;\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True\")\n      .execute().returnContent();\n\n      System.out.println(content);\n    } catch (IOException e) {\n      System.out.println(e);\n    }\n  }\n}\n```\n\n#### Ruby Example\n```ruby\nrequire 'net/http'\nrequire 'net/https'\n\n# Classic (GET)\ndef send_request \n    uri = URI('https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True')\n\n    # Create client\n    http = Net::HTTP.new(uri.host, uri.port)\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n\n    # Create Request\n    req = Net::HTTP::Get.new(uri)\n\n    # Fetch Request\n    res = http.request(req)\n    puts \"Response HTTP Status Code: #{ res.code }\"\n    puts \"Response HTTP Response Body: #{ res.body }\"\nrescue StandardError => e\n    puts \"HTTP Request failed (#{ e.message })\"\nend\n\nsend_request()\n```\n\n#### PHP Example\n```php\n<?php\n\n// Get cURL resource\n$ch = curl_init();\n\n// Set URL \ncurl_setopt($ch, CURLOPT_URL, 'https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True');\n\n// Set method\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\n\n// Return the transfer as a string\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n// Send the request and save response to $response\n$response = curl_exec($ch);\n\n// Stop if fails\nif (!$response) {\n    die('Error: \"' . curl_error($ch) . '\" - Code: ' . curl_errno($ch));\n}\n\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\n// Close curl resource to free up system resources\ncurl_close($ch);\n?>\n```\n\n#### Go Example\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        // Create client\n        client := &http.Client{}\n\n        // Create request \n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True\", nil)\n\n        parseFormErr := req.ParseForm()\n        if parseFormErr != nil {\n                fmt.Println(parseFormErr)\n        }\n\n        // Fetch Request\n        resp, err := client.Do(req)\n\n        if err != nil {\n                fmt.Println(\"Failure : \", err)\n        }\n\n        // Read Response Body\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        // Display Results\n        fmt.Println(\"response Status : \", resp.Status)\n        fmt.Println(\"response Headers : \", resp.Header)\n        fmt.Println(\"response Body : \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n### Stealth Proxy (Beta)\n\n- `stealth_proxy`: **boolean** (default=`false`)\n  \nFor hard-to-scrape websites, even `premium_proxy=True` may not suffice. We have developed a new pool of proxies that should work for these challenging situations.\n\nTo use this option, add `stealth_proxy=True` to your API calls.\n\n**Important Notes:**\n- This option currently only operates with [JavaScript rendering](https://docs.scrapingbee.com/javascript-rendering) enabled.\n- **Each successful API call using this option will cost 75 credits**, even when using [custom_google](https://docs.scrapingbee.com/custom-google).\n  \n**Things not supported:** \n- The `infinite_scroll` instruction\n- Custom headers and cookies\n- The `timeout` parameter\n- `xhr` and `evaluate_results` data when using `json_response`\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&stealth_proxy=True\"\n```\n\n### Own Proxy\n\n- `own_proxy`: **string** (default=`\"\"`)\n\nIf you wish to leverage ScrapingBee's infrastructure with your own proxy, use the `own_proxy` parameter.\n\nThe syntax for the proxy information is:\n```plaintext\n<protocol><username>:<password>@<host>:<port>\n```\n- Protocol is optional.\n- If no port is specified, ScrapingBee will use `1080` (the cURL default).\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&own_proxy=https%3A%2F%2Fjohndoe%3Apassword%40my_proxy.com%3A1234\"\n```\n\n### Headers\n\n#### Header Forwarding\n\n- `forward_headers`: **boolean** (default=`false`)\n\nYou may need to forward specific headers to the target website. This is done by setting `forward_headers` to `true` and prefixing the headers with **\"Spb-\"**.\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=http%3A%2F%2Fhttpbin.org%2Fheaders%3Fjson&forward_headers=true\" \\\n  -H \"Spb-Accept-Language:En-US\"\n```\n\n### JSON Response\n\n- `json_response`: **bool** (default=`false`)\n\nIf you want to integrate ScrapingBee with third-party tools that only accept JSON responses or wish to intercept certain XHR/Ajax requests, you can enable this by setting `json_response=True`.\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&json_response=True\"\n```\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'json_response': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'json_response': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n### Return Page Source\n\nTo receive the raw HTML from the server before JavaScript execution, use `return_page_source=true`.\n\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&return_page_source=True\"\n```\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'return_page_source': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'return_page_source': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n### HTML to PDF Conversion\n\nComing soon.\n\n## Proxy Mode\n\nScrapingBee also offers a proxy front-end to the API. This can simplify integration with third-party tools.\n```","response":"```markdown\n}\n\n```php\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\n// Close curl resource to free up system resources\ncurl_close($ch);\n```\n\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        // Create client\n        client := &http.Client{}\n\n        // Create request \n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&window_height=500\", nil)\n\n        parseFormErr := req.ParseForm()\n        if parseFormErr != nil {\n                fmt.Println(parseFormErr)\n        }\n\n        // Fetch Request\n        resp, err := client.Do(req)\n\n        if err != nil {\n                fmt.Println(\"Failure : \", err)\n        }\n\n        // Read Response Body\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        // Display Results\n        fmt.Println(\"response Status : \", resp.Status)\n        fmt.Println(\"response Headers : \", resp.Header)\n        fmt.Println(\"response Body : \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n## Proxies\n\n### Premium Proxy\n\n- `premium_proxy`: **boolean** (default=`false`)\n  \nFor some hard-to-scrape websites, you may need to use premium or residential proxies. These proxies are rarely blocked, and we recommend trying them when you receive error codes from difficult-to-scrape websites, such as search engines or social networks.\n\nTo use premium proxies, add the parameter `premium_proxy=true`.\n\n- Each request with this parameter will count as **25 API credits with JavaScript enabled**. If used without [JavaScript rendering](https://docs.scrapingbee.com/javascript-rendering), it will cost **10 credits**.\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True\"\n```\n\n#### Python Example\n\nInstall the Python ScrapingBee library:\n```bash\npip install scrapingbee\n```\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'premium_proxy': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n#### NodeJS Example\n\nInstall the Node ScrapingBee library:\n```bash\nnpm install scrapingbee\n```\n\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'premium_proxy': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n#### Java Example\n\n```java\nimport java.io.IOException;\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    // Classic (GET)\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True\")\n      .execute().returnContent();\n\n      // Print content\n      System.out.println(content);\n    } catch (IOException e) {\n      System.out.println(e);\n    }\n  }\n}\n```\n\n#### Ruby Example\n\n```ruby\nrequire 'net/http'\nrequire 'net/https'\n\n# Classic (GET)\ndef send_request \n    uri = URI('https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True')\n\n    # Create client\n    http = Net::HTTP.new(uri.host, uri.port)\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n\n    # Create Request\n    req = Net::HTTP::Get.new(uri)\n\n    # Fetch Request\n    res = http.request(req)\n    puts \"Response HTTP Status Code: #{ res.code }\"\n    puts \"Response HTTP Response Body: #{ res.body }\"\nrescue StandardError => e\n    puts \"HTTP Request failed (#{ e.message })\"\nend\n\nsend_request()\n```\n\n#### PHP Example\n\n```php\n<?php\n\n// Get cURL resource\n$ch = curl_init();\n\n// Set URL \ncurl_setopt($ch, CURLOPT_URL, 'https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True');\n\n// Set method\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\n\n// Return the transfer as a string\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n// Send the request and save response to $response\n$response = curl_exec($ch);\n\n// Stop if fails\nif (!$response) {\n    die('Error: \"' . curl_error($ch) . '\" - Code: ' . curl_errno($ch));\n}\n\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\n// Close curl resource to free up system resources\ncurl_close($ch);\n?>\n```\n\n#### Go Example\n\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        // Create client\n        client := &http.Client{}\n\n        // Create request \n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&premium_proxy=True\", nil)\n\n        parseFormErr := req.ParseForm()\n        if parseFormErr != nil {\n                fmt.Println(parseFormErr)\n        }\n\n        // Fetch Request\n        resp, err := client.Do(req)\n\n        if err != nil {\n                fmt.Println(\"Failure : \", err)\n        }\n\n        // Read Response Body\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        // Display Results\n        fmt.Println(\"response Status : \", resp.Status)\n        fmt.Println(\"response Headers : \", resp.Header)\n        fmt.Println(\"response Body : \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n### Geolocation\n\n- `country_code`: **string** (default=`\"\"`)\n\nIn addition to premium proxies, you can choose the proxy country from a list of countries by using the parameter `country_code=COUNTRY_CODE`.\n\nTo use premium proxies from Germany, set both `premium_proxy=true` and `country_code=de` in your API call.\n\n**Country Codes Table:**\n\n| country_code | Country Name      |\n|--------------|-------------------|\n| br           | Brazil            |\n| in           | India             |\n| mx           | Mexico            |\n| ...          | ...               |\n| ru           | Russia            |\n| us           | United States     |\n| gb           | United Kingdom    |\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True\"\n```\n\n#### Python Example\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'country_code': 'de',\n         'premium_proxy': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n#### NodeJS Example\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'country_code': 'de',\n         'premium_proxy': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n#### Java Example\n```java\nimport java.io.IOException;\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True\")\n      .execute().returnContent();\n\n      System.out.println(content);\n    } catch (IOException e) {\n      System.out.println(e);\n    }\n  }\n}\n```\n\n#### Ruby Example\n```ruby\nrequire 'net/http'\nrequire 'net/https'\n\n# Classic (GET)\ndef send_request \n    uri = URI('https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True')\n\n    # Create client\n    http = Net::HTTP.new(uri.host, uri.port)\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_PEER\n\n    # Create Request\n    req = Net::HTTP::Get.new(uri)\n\n    # Fetch Request\n    res = http.request(req)\n    puts \"Response HTTP Status Code: #{ res.code }\"\n    puts \"Response HTTP Response Body: #{ res.body }\"\nrescue StandardError => e\n    puts \"HTTP Request failed (#{ e.message })\"\nend\n\nsend_request()\n```\n\n#### PHP Example\n```php\n<?php\n\n// Get cURL resource\n$ch = curl_init();\n\n// Set URL \ncurl_setopt($ch, CURLOPT_URL, 'https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True');\n\n// Set method\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\n\n// Return the transfer as a string\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n// Send the request and save response to $response\n$response = curl_exec($ch);\n\n// Stop if fails\nif (!$response) {\n    die('Error: \"' . curl_error($ch) . '\" - Code: ' . curl_errno($ch));\n}\n\necho 'HTTP Status Code: ' . curl_getinfo($ch, CURLINFO_HTTP_CODE) . PHP_EOL;\necho 'Response Body: ' . $response . PHP_EOL;\n\n// Close curl resource to free up system resources\ncurl_close($ch);\n?>\n```\n\n#### Go Example\n```go\npackage main\n\nimport (\n        \"fmt\"\n        \"io/ioutil\"\n        \"net/http\"\n)\n\nfunc sendClassic() {\n        // Create client\n        client := &http.Client{}\n\n        // Create request \n        req, err := http.NewRequest(\"GET\", \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&country_code=de&premium_proxy=True\", nil)\n\n        parseFormErr := req.ParseForm()\n        if parseFormErr != nil {\n                fmt.Println(parseFormErr)\n        }\n\n        // Fetch Request\n        resp, err := client.Do(req)\n\n        if err != nil {\n                fmt.Println(\"Failure : \", err)\n        }\n\n        // Read Response Body\n        respBody, _ := ioutil.ReadAll(resp.Body)\n\n        // Display Results\n        fmt.Println(\"response Status : \", resp.Status)\n        fmt.Println(\"response Headers : \", resp.Header)\n        fmt.Println(\"response Body : \", string(respBody))\n}\n\nfunc main() {\n    sendClassic()\n}\n```\n\n### Stealth Proxy (Beta)\n\n- `stealth_proxy`: **boolean** (default=`false`)\n  \nFor hard-to-scrape websites, even `premium_proxy=True` may not suffice. We have developed a new pool of proxies that should work for these challenging situations.\n\nTo use this option, add `stealth_proxy=True` to your API calls.\n\n**Important Notes:**\n- This option currently only operates with [JavaScript rendering](https://docs.scrapingbee.com/javascript-rendering) enabled.\n- **Each successful API call using this option will cost 75 credits**, even when using [custom_google](https://docs.scrapingbee.com/custom-google).\n  \n**Things not supported:** \n- The `infinite_scroll` instruction\n- Custom headers and cookies\n- The `timeout` parameter\n- `xhr` and `evaluate_results` data when using `json_response`\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&stealth_proxy=True\"\n```\n\n### Own Proxy\n\n- `own_proxy`: **string** (default=`\"\"`)\n\nIf you wish to leverage ScrapingBee's infrastructure with your own proxy, use the `own_proxy` parameter.\n\nThe syntax for the proxy information is:\n```plaintext\n<protocol><username>:<password>@<host>:<port>\n```\n- Protocol is optional.\n- If no port is specified, ScrapingBee will use `1080` (the cURL default).\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&own_proxy=https%3A%2F%2Fjohndoe%3Apassword%40my_proxy.com%3A1234\"\n```\n\n### Headers\n\n#### Header Forwarding\n\n- `forward_headers`: **boolean** (default=`false`)\n\nYou may need to forward specific headers to the target website. This is done by setting `forward_headers` to `true` and prefixing the headers with **\"Spb-\"**.\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=http%3A%2F%2Fhttpbin.org%2Fheaders%3Fjson&forward_headers=true\" \\\n  -H \"Spb-Accept-Language:En-US\"\n```\n\n### JSON Response\n\n- `json_response`: **bool** (default=`false`)\n\nIf you want to integrate ScrapingBee with third-party tools that only accept JSON responses or wish to intercept certain XHR/Ajax requests, you can enable this by setting `json_response=True`.\n\n**Example Usage:**\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&json_response=True\"\n```\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'json_response': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'json_response': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n### Return Page Source\n\nTo receive the raw HTML from the server before JavaScript execution, use `return_page_source=true`.\n\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&return_page_source=True\"\n```\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL',\n    params = { \n         'return_page_source': 'True',\n    }\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: {  \n         'return_page_source': 'True',\n    },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n    var decoder = new TextDecoder();\n    var text = decoder.decode(response.data);\n    console.log(text);\n}).catch((e) => console.log('A problem occurs : ' + e.response.data));\n```\n\n### HTML to PDF Conversion\n\nComing soon.\n\n## Proxy Mode\n\nScrapingBee also offers a proxy front-end to the API. This can simplify integration with third-party tools.\n```"}
{"timestamp":"2024-11-07 15:38:32.604","prompt":"# Access\n\nThe ScrapingBee API will handle requests just like any standard request, with request costs, return codes, and default parameters remaining the same as a standard no-proxy request.\n\n**Important:** We recommend disabling [Javascript rendering](#javascript-rendering) in proxy mode, as it is enabled by default. Below are the credentials and configurations used to access proxy mode:\n\n- **HTTP Address:** `proxy.scrapingbee.com:8886`\n- **HTTPS Address:** `proxy.scrapingbee.com:8887`\n- **Socks5 Address:** `socks.scrapingbee.com:8888`\n- **Username:** `YOUR-API-KEY`\n- **Password:** `PARAMETERS`\n\n**Important:** Replace `PARAMETERS` with the supported API parameters. If uncertain, you can start with `render_js=False`.\n\n### Alternative URL Configuration\n\nYou can also use URLs structured like this:\n\n```json\n{\n  \"url_http\": \"http://YOUR-API-KEY:[email protected]:8886\",\n  \"url_https\": \"https://YOUR-API-KEY:[email protected]:8887\",\n  \"url_socks5\": \"socks5://YOUR-API-KEY:[email protected]:8888\"\n}\n```\n\n**Important:** Scraping Google using this mode will cost **20 credits** per request.\n\nFor more integration details with different tools and languages, visit our [dedicated page](#).\n\n## Session\n\n### `session_id` [`integer`] (default=`\"\"`)\n\nAll API requests that use the same `session_id` will be routed through the same IP address for **5 minutes**. It is advisable to use a random integer between `0` and `10,000,000` each time you wish to generate a new `session_id`.\n\n### Example Usage\n\n- **Python:**\n\n```python\n# Install the Python ScrapingBee library\n# pip install scrapingbee\n\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'session_id': '123'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n- **cURL:**\n\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&session_id=123\"\n```\n\n- **NodeJS:**\n\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: { 'session_id': '123' },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n  console.log(response.data);\n}).catch((e) => console.log('A problem occurs: ' + e.response.data));\n```\n\n- **Java:**\n\n```java\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&session_id=123\")\n        .execute().returnContent();\n      System.out.println(content);\n    } catch (IOException e) { \n      System.out.println(e); \n    }\n  }\n}\n```\n\n(Continue with other languages accordingly...)\n\n## Timeout\n\n### `timeout` [`int`] (default=`140000`)\n\nThe maximum number of milliseconds that ScrapingBee will wait before returning results, in the range of `1000` to `140000`. Use `timeout=45000` in your API call to modify it.\n\n**Important:** A 0.5-second margin of error exists between the `timeout` provided in your API call and the actual maximum duration.\n\n### Example Usage\n\n- **Python:**\n\n```python\n# pip install scrapingbee\n\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'timeout': '10000'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Custom Cookies\n\n### `cookies` [`string`] (default=`\"\"`)\n\nTo pass custom cookies to the target webpage, include a cookie string in the `cookies` parameter. Multiple cookies should be separated by `;`.\n\n### Cookie Syntax\n\n```\nname=value,other_attributes=other_attributes_value;\n```\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\nresponse = client.get('http://httpbin.org/cookies?json', \n                      cookies={\"cookie_name_1\": \"cookie_value1\", \n                               \"cookie_name_2\": \"cookie_value_2\"})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Device\n\n### `device` [`string`] (default=`\"desktop\"`)\n\nChoose the type of device that will send the request to the server, either `desktop` (default) or `mobile`.\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'device': 'desktop'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Google\n\n### `custom_google` [`boolean`] (default=`false`)\n\nIf scraping Google domains (`google.com`, `news.google.com`, etc.), use `custom_google=True`. Each request using this option costs **20 credits**.\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('https://www.google.com', params={'custom_google': 'True'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## POST / PUT\n\nTo send a POST/PUT request, send it to the main endpoint with your `api_key` and `url` parameters. Data will be forwarded transparently.\n\n### Example Usage\n\n- **Python:**\n\n```python\nimport requests\n\nresponse = requests.post(\n    url=\"https://app.scrapingbee.com/api/v1\",\n    params={\"url\": \"https://httpbin.org/anything\", \"api_key\": \"YOUR-API-KEY\"},\n    headers={\"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"},\n    data={\"KEY_1\": \"VALUE_1\"},\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Credit Cost for Your Requests\n\n| Feature Used                                   | API Credit Cost |\n|------------------------------------------------|------------------|\n| Rotating Proxy without JavaScript rendering     | 1                |\n| Rotating Proxy with JavaScript rendering (default)| 5                |\n| Premium Proxy without JavaScript rendering      | 10               |\n| Premium Proxy with JavaScript rendering         | 25               |\n| Stealth Proxy without JavaScript rendering      | (coming soon)    |\n| Stealth Proxy with JavaScript rendering         | 75               |\n\n## Usage Endpoint\n\nTo monitor credit consumption and concurrency usage programmatically, use the `/usage` endpoint. This can be called **6** times per minute.\n\n### Example Usage\n\n- **Python:**\n\n```python\nimport requests\n\nresponse = requests.get(url=\"https://app.scrapingbee.com/api/v1/usage\", params={\"api_key\": \"YOUR-API-KEY\"})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Response Status Code\n\n### Status Codes List\n\n| Code | Bill?  | Meaning                                     | Solution                                         |\n|------|--------|---------------------------------------------|-------------------------------------------------|\n| 200  | Yes    | Successful Call                             |                                                 |\n| 400  | No     | Bad Request                                 | Incorrect parameters or parameters type.        |\n| 401  | No     | No More Credit Available                    | Upgrade your plan or contact sales.            |\n| 404  | Yes    | Requested URL Not Found                     | Provide a valid URL.                            |\n| 410  | Yes    | Requested URL Gone                          | Provide a valid URL.                            |\n| 413  | No     | File Too Large                             | Request a smaller file.                         |\n| 429  | No     | Too Many Concurrent Requests                | Upgrade your plan or contact sales.            |\n| 500  | No     | Misc Error                                  | Please retry and see the message in the response body.|\n\n### Transparent HTTP Status Code\n\n### `transparent_status_code` [`boolean`] (default=`false`)\n\nBy default, ScrapingBee returns HTTP 500 for non-200 responses. Set `transparent_status_code=true` to return the original status code.\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'transparent_status_code': 'True'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Response Headers\n\n| Name                | Meaning                                          |\n|---------------------|--------------------------------------------------|\n| `Spb-cost`          | Request cost in credits.                        |\n| `Spb-initial-status-code` | The initial status code from the scraped page. Useful for redirects. |\n| `Spb-resolved-url`  | The resolved URL of the scraped page. Useful for redirects. |\n\n\n## Ready to Get Started?\n\nGet access to 1,000 free API credits, no credit card required! [Try ScrapingBee for Free](#).\n\n---\n\n### Legal\n\n* [Terms of Service](#)\n* [Privacy Policy](#)\n* [GDPR Compliance](#)\n* [Data Processing Agreement](#)\n* [Cookie Policy](#)\n* [Acceptable Use Policy](#)\n* [Legal Notices](#)\n\n### Company\n\n* [Team](#)\n* [Company's Journey](#)\n* [Blog](#)\n* [Rebranding](#)\n* [Affiliate Program](#)\n\n### Learning Web Scraping\n\n* [Web Scraping Questions](#)\n* [A Guide to Web Scraping without Getting Blocked](#)","response":"# Access\n\nThe ScrapingBee API will handle requests just like any standard request, with request costs, return codes, and default parameters remaining the same as a standard no-proxy request.\n\n**Important:** We recommend disabling [Javascript rendering](#javascript-rendering) in proxy mode, as it is enabled by default. Below are the credentials and configurations used to access proxy mode:\n\n- **HTTP Address:** `proxy.scrapingbee.com:8886`\n- **HTTPS Address:** `proxy.scrapingbee.com:8887`\n- **Socks5 Address:** `socks.scrapingbee.com:8888`\n- **Username:** `YOUR-API-KEY`\n- **Password:** `PARAMETERS`\n\n**Important:** Replace `PARAMETERS` with the supported API parameters. If uncertain, you can start with `render_js=False`.\n\n### Alternative URL Configuration\n\nYou can also use URLs structured like this:\n\n```json\n{\n  \"url_http\": \"http://YOUR-API-KEY:[email protected]:8886\",\n  \"url_https\": \"https://YOUR-API-KEY:[email protected]:8887\",\n  \"url_socks5\": \"socks5://YOUR-API-KEY:[email protected]:8888\"\n}\n```\n\n**Important:** Scraping Google using this mode will cost **20 credits** per request.\n\nFor more integration details with different tools and languages, visit our [dedicated page](#).\n\n## Session\n\n### `session_id` [`integer`] (default=`\"\"`)\n\nAll API requests that use the same `session_id` will be routed through the same IP address for **5 minutes**. It is advisable to use a random integer between `0` and `10,000,000` each time you wish to generate a new `session_id`.\n\n### Example Usage\n\n- **Python:**\n\n```python\n# Install the Python ScrapingBee library\n# pip install scrapingbee\n\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'session_id': '123'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n- **cURL:**\n\n```bash\ncurl \"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&session_id=123\"\n```\n\n- **NodeJS:**\n\n```javascript\nconst scrapingbee = require('scrapingbee');\n\nasync function get(url) {\n  var client = new scrapingbee.ScrapingBeeClient('YOUR-API-KEY');\n  var response = await client.get({\n    url: url,\n    params: { 'session_id': '123' },\n  });\n  return response;\n}\n\nget('YOUR-URL').then(function (response) {\n  console.log(response.data);\n}).catch((e) => console.log('A problem occurs: ' + e.response.data));\n```\n\n- **Java:**\n\n```java\nimport org.apache.http.client.fluent.*;\n\npublic class SendRequest {\n  public static void main(String[] args) {\n    sendRequest();\n  }\n\n  private static void sendRequest() {\n    try {\n      Content content = Request.Get(\"https://app.scrapingbee.com/api/v1/?api_key=YOUR-API-KEY&url=YOUR-URL&session_id=123\")\n        .execute().returnContent();\n      System.out.println(content);\n    } catch (IOException e) { \n      System.out.println(e); \n    }\n  }\n}\n```\n\n(Continue with other languages accordingly...)\n\n## Timeout\n\n### `timeout` [`int`] (default=`140000`)\n\nThe maximum number of milliseconds that ScrapingBee will wait before returning results, in the range of `1000` to `140000`. Use `timeout=45000` in your API call to modify it.\n\n**Important:** A 0.5-second margin of error exists between the `timeout` provided in your API call and the actual maximum duration.\n\n### Example Usage\n\n- **Python:**\n\n```python\n# pip install scrapingbee\n\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'timeout': '10000'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Custom Cookies\n\n### `cookies` [`string`] (default=`\"\"`)\n\nTo pass custom cookies to the target webpage, include a cookie string in the `cookies` parameter. Multiple cookies should be separated by `;`.\n\n### Cookie Syntax\n\n```\nname=value,other_attributes=other_attributes_value;\n```\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\nresponse = client.get('http://httpbin.org/cookies?json', \n                      cookies={\"cookie_name_1\": \"cookie_value1\", \n                               \"cookie_name_2\": \"cookie_value_2\"})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Device\n\n### `device` [`string`] (default=`\"desktop\"`)\n\nChoose the type of device that will send the request to the server, either `desktop` (default) or `mobile`.\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'device': 'desktop'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Google\n\n### `custom_google` [`boolean`] (default=`false`)\n\nIf scraping Google domains (`google.com`, `news.google.com`, etc.), use `custom_google=True`. Each request using this option costs **20 credits**.\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('https://www.google.com', params={'custom_google': 'True'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## POST / PUT\n\nTo send a POST/PUT request, send it to the main endpoint with your `api_key` and `url` parameters. Data will be forwarded transparently.\n\n### Example Usage\n\n- **Python:**\n\n```python\nimport requests\n\nresponse = requests.post(\n    url=\"https://app.scrapingbee.com/api/v1\",\n    params={\"url\": \"https://httpbin.org/anything\", \"api_key\": \"YOUR-API-KEY\"},\n    headers={\"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"},\n    data={\"KEY_1\": \"VALUE_1\"},\n)\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Credit Cost for Your Requests\n\n| Feature Used                                   | API Credit Cost |\n|------------------------------------------------|------------------|\n| Rotating Proxy without JavaScript rendering     | 1                |\n| Rotating Proxy with JavaScript rendering (default)| 5                |\n| Premium Proxy without JavaScript rendering      | 10               |\n| Premium Proxy with JavaScript rendering         | 25               |\n| Stealth Proxy without JavaScript rendering      | (coming soon)    |\n| Stealth Proxy with JavaScript rendering         | 75               |\n\n## Usage Endpoint\n\nTo monitor credit consumption and concurrency usage programmatically, use the `/usage` endpoint. This can be called **6** times per minute.\n\n### Example Usage\n\n- **Python:**\n\n```python\nimport requests\n\nresponse = requests.get(url=\"https://app.scrapingbee.com/api/v1/usage\", params={\"api_key\": \"YOUR-API-KEY\"})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Response Status Code\n\n### Status Codes List\n\n| Code | Bill?  | Meaning                                     | Solution                                         |\n|------|--------|---------------------------------------------|-------------------------------------------------|\n| 200  | Yes    | Successful Call                             |                                                 |\n| 400  | No     | Bad Request                                 | Incorrect parameters or parameters type.        |\n| 401  | No     | No More Credit Available                    | Upgrade your plan or contact sales.            |\n| 404  | Yes    | Requested URL Not Found                     | Provide a valid URL.                            |\n| 410  | Yes    | Requested URL Gone                          | Provide a valid URL.                            |\n| 413  | No     | File Too Large                             | Request a smaller file.                         |\n| 429  | No     | Too Many Concurrent Requests                | Upgrade your plan or contact sales.            |\n| 500  | No     | Misc Error                                  | Please retry and see the message in the response body.|\n\n### Transparent HTTP Status Code\n\n### `transparent_status_code` [`boolean`] (default=`false`)\n\nBy default, ScrapingBee returns HTTP 500 for non-200 responses. Set `transparent_status_code=true` to return the original status code.\n\n### Example Usage\n\n- **Python:**\n\n```python\nfrom scrapingbee import ScrapingBeeClient\n\nclient = ScrapingBeeClient(api_key='YOUR-API-KEY')\n\nresponse = client.get('YOUR-URL', params={'transparent_status_code': 'True'})\n\nprint('Response HTTP Status Code: ', response.status_code)\nprint('Response HTTP Response Body: ', response.content)\n```\n\n(Continue with other languages accordingly...)\n\n## Response Headers\n\n| Name                | Meaning                                          |\n|---------------------|--------------------------------------------------|\n| `Spb-cost`          | Request cost in credits.                        |\n| `Spb-initial-status-code` | The initial status code from the scraped page. Useful for redirects. |\n| `Spb-resolved-url`  | The resolved URL of the scraped page. Useful for redirects. |\n\n\n## Ready to Get Started?\n\nGet access to 1,000 free API credits, no credit card required! [Try ScrapingBee for Free](#).\n\n---\n\n### Legal\n\n* [Terms of Service](#)\n* [Privacy Policy](#)\n* [GDPR Compliance](#)\n* [Data Processing Agreement](#)\n* [Cookie Policy](#)\n* [Acceptable Use Policy](#)\n* [Legal Notices](#)\n\n### Company\n\n* [Team](#)\n* [Company's Journey](#)\n* [Blog](#)\n* [Rebranding](#)\n* [Affiliate Program](#)\n\n### Learning Web Scraping\n\n* [Web Scraping Questions](#)\n* [A Guide to Web Scraping without Getting Blocked](#)"}
{"timestamp":"2024-11-07 15:55:36.668","prompt":"# Realtime API\n\n## Overview\n\nThe Realtime API is a server-side WebSocket interface designed to build low-latency, multi-modal experiences. It supports text and audio inputs and outputs, alongside functionality for function calling. Key benefits include:\n\n- **Native speech-to-speech**: Allows low latency and nuanced output by skipping intermediate text formats.\n- **Natural, steerable voices**: Models offer natural inflection, able to convey emotions and adhere to tone direction.\n- **Simultaneous multimodal output**: Useful for tasks like moderation, ensuring faster-than-realtime audio stability during playback.\n\nNote: The API is in beta and doesn't support client-side authentication. It's recommended to route audio from the client to an application server, which will authenticate with the Realtime API securely.\n\n### Quickstart\n\nThe Realtime API uses a stateful, event-based WebSocket connection:\n\n- **URL**: `wss://api.openai.com/v1/realtime`\n- **Query Parameters**: `?model=gpt-4o-realtime-preview-2024-10-01`\n- **Headers**:\n  - `Authorization: Bearer YOUR_API_KEY`\n  - `OpenAI-Beta: realtime=v1`\n\nExample in Node.js using the `ws` library:\n\n```javascript\nimport WebSocket from \"ws\";\n\nconst url = \"wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01\";\nconst ws = new WebSocket(url, {\n  headers: {\n    \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n    \"OpenAI-Beta\": \"realtime=v1\",\n  },\n});\n\nws.on(\"open\", function open() {\n  console.log(\"Connected to server.\");\n  ws.send(JSON.stringify({\n    type: \"response.create\",\n    response: {\n      modalities: [\"text\"],\n      instructions: \"Please assist the user.\",\n    }\n  }));\n});\n\nws.on(\"message\", function incoming(message) {\n  console.log(JSON.parse(message.toString()));\n});\n```\n\nFor further integration, see the [API Reference](#api-reference).\n\n### API Concepts\n\nThe Realtime API is structured around stateful interactions that persist across its sessions:\n\n- **Session**: Represents a single WebSocket connection.\n- **Conversations**: Comprised of multiple Items, created at session start.\n- **Items**: Can be `message`, `function_call`, or `function_call_output`.\n\n**Input Audio Buffer**: Holds unprocessed audio data, committed during server VAD triggered events or manually via API commands.\n\n### Integration Guide\n\n#### Audio Formats Supported\n\n- Raw 16-bit PCM audio at 24kHz, 1 channel, little-endian.\n- G.711 at 8kHz (both u-law and a-law).\n\n#### Transcoding Example in Python\n\n```python\nimport io\nimport json\nfrom pydub import AudioSegment\nimport base64\n\ndef audio_to_item_create_event(audio_bytes: bytes) -> str:\n    audio = AudioSegment.from_file(io.BytesIO(audio_bytes))\n    pcm_audio = audio.set_frame_rate(24000).set_channels(1).set_sample_width(2).raw_data\n    pcm_base64 = base64.b64encode(pcm_audio).decode()\n    \n    event = {\n        \"type\": \"conversation.item.create\", \n        \"item\": {\n            \"type\": \"message\",\n            \"role\": \"user\",\n            \"content\": [{\n                \"type\": \"input_audio\", \n                \"audio\": pcm_base64\n            }]\n        }\n    }\n    return json.dumps(event)\n```\n\n#### Handling Errors\n\nConfigure error handlers to capture different server response error types:\n\n```javascript\nws.on('message', data => {\n  try {\n    const event = JSON.parse(data);\n    if (event.type === 'error') {\n      const { error } = event;\n      errorHandler(error);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n});\n\nconst errorHandler = (error) => {\n  console.log('type', error.type);\n  console.log('code', error.code);\n  console.log('message', error.message);\n  console.log('param', error.param);\n  console.log('event_id', error.event_id);\n};\n```\n\n### Creating and Managing Sessions\n\nEstablish and manage sessions by sending conversational items. Sessions are not automatically saved and should be reconstructed upon reconnection by sending prior conversation history to the API.\n\n### Events and Responses\n\n- **Client Events**: Includes commands like `session.update`, `conversation.item.create`, and `response.create`.\n- **Server Events**: Such as `session.created`, `response.done`, and `error`.\n\nConsider examining the full [API Reference](#api-reference) to grasp all available client and server events.\n\n## Additional Resources\n\n- [LiveKit Integration Guide](https://docs.livekit.io/agents/openai/overview/)\n- [Twilio Integration Guide](https://www.twilio.com/en-us/blog/twilio-openai-realtime-api-launch-integr-ation)\n- [Agora Integration Quickstart](https://docs.agora.io/en/open-ai-integration/get-started/quickstart)","response":"# Realtime API\n\n## Overview\n\nThe Realtime API is a server-side WebSocket interface designed to build low-latency, multi-modal experiences. It supports text and audio inputs and outputs, alongside functionality for function calling. Key benefits include:\n\n- **Native speech-to-speech**: Allows low latency and nuanced output by skipping intermediate text formats.\n- **Natural, steerable voices**: Models offer natural inflection, able to convey emotions and adhere to tone direction.\n- **Simultaneous multimodal output**: Useful for tasks like moderation, ensuring faster-than-realtime audio stability during playback.\n\nNote: The API is in beta and doesn't support client-side authentication. It's recommended to route audio from the client to an application server, which will authenticate with the Realtime API securely.\n\n### Quickstart\n\nThe Realtime API uses a stateful, event-based WebSocket connection:\n\n- **URL**: `wss://api.openai.com/v1/realtime`\n- **Query Parameters**: `?model=gpt-4o-realtime-preview-2024-10-01`\n- **Headers**:\n  - `Authorization: Bearer YOUR_API_KEY`\n  - `OpenAI-Beta: realtime=v1`\n\nExample in Node.js using the `ws` library:\n\n```javascript\nimport WebSocket from \"ws\";\n\nconst url = \"wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01\";\nconst ws = new WebSocket(url, {\n  headers: {\n    \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n    \"OpenAI-Beta\": \"realtime=v1\",\n  },\n});\n\nws.on(\"open\", function open() {\n  console.log(\"Connected to server.\");\n  ws.send(JSON.stringify({\n    type: \"response.create\",\n    response: {\n      modalities: [\"text\"],\n      instructions: \"Please assist the user.\",\n    }\n  }));\n});\n\nws.on(\"message\", function incoming(message) {\n  console.log(JSON.parse(message.toString()));\n});\n```\n\nFor further integration, see the [API Reference](#api-reference).\n\n### API Concepts\n\nThe Realtime API is structured around stateful interactions that persist across its sessions:\n\n- **Session**: Represents a single WebSocket connection.\n- **Conversations**: Comprised of multiple Items, created at session start.\n- **Items**: Can be `message`, `function_call`, or `function_call_output`.\n\n**Input Audio Buffer**: Holds unprocessed audio data, committed during server VAD triggered events or manually via API commands.\n\n### Integration Guide\n\n#### Audio Formats Supported\n\n- Raw 16-bit PCM audio at 24kHz, 1 channel, little-endian.\n- G.711 at 8kHz (both u-law and a-law).\n\n#### Transcoding Example in Python\n\n```python\nimport io\nimport json\nfrom pydub import AudioSegment\nimport base64\n\ndef audio_to_item_create_event(audio_bytes: bytes) -> str:\n    audio = AudioSegment.from_file(io.BytesIO(audio_bytes))\n    pcm_audio = audio.set_frame_rate(24000).set_channels(1).set_sample_width(2).raw_data\n    pcm_base64 = base64.b64encode(pcm_audio).decode()\n    \n    event = {\n        \"type\": \"conversation.item.create\", \n        \"item\": {\n            \"type\": \"message\",\n            \"role\": \"user\",\n            \"content\": [{\n                \"type\": \"input_audio\", \n                \"audio\": pcm_base64\n            }]\n        }\n    }\n    return json.dumps(event)\n```\n\n#### Handling Errors\n\nConfigure error handlers to capture different server response error types:\n\n```javascript\nws.on('message', data => {\n  try {\n    const event = JSON.parse(data);\n    if (event.type === 'error') {\n      const { error } = event;\n      errorHandler(error);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n});\n\nconst errorHandler = (error) => {\n  console.log('type', error.type);\n  console.log('code', error.code);\n  console.log('message', error.message);\n  console.log('param', error.param);\n  console.log('event_id', error.event_id);\n};\n```\n\n### Creating and Managing Sessions\n\nEstablish and manage sessions by sending conversational items. Sessions are not automatically saved and should be reconstructed upon reconnection by sending prior conversation history to the API.\n\n### Events and Responses\n\n- **Client Events**: Includes commands like `session.update`, `conversation.item.create`, and `response.create`.\n- **Server Events**: Such as `session.created`, `response.done`, and `error`.\n\nConsider examining the full [API Reference](#api-reference) to grasp all available client and server events.\n\n## Additional Resources\n\n- [LiveKit Integration Guide](https://docs.livekit.io/agents/openai/overview/)\n- [Twilio Integration Guide](https://www.twilio.com/en-us/blog/twilio-openai-realtime-api-launch-integr-ation)\n- [Agora Integration Quickstart](https://docs.agora.io/en/open-ai-integration/get-started/quickstart)"}
{"timestamp":"2024-11-07 15:55:38.243","prompt":"realtime_api_websocket_integration_documentation_for_rust_implementation","response":"realtime_api_websocket_integration_documentation_for_rust_implementation"}
{"timestamp":"2024-11-07 15:56:52.560","prompt":"# Media Streams - WebSocket Messages\n\n## Support for Twilio Regions\n\nMedia Streams is now available in the Ireland (IE1) and Australia (AU1) Regions.\n\n- For outbound calls, follow the guide for outbound calls in non-US Regions.\n- For inbound calls, follow the guide for inbound call processing in non-US Regions.\n- For more info on Twilio Regions, visit the Global Infrastructure docs.\n\nDuring a Media Stream, Twilio sends messages to your WebSocket server that provide information about the Stream. For bidirectional Media Streams, your server can also send messages back to Twilio.\n\nThis section covers each type of message that your WebSocket server can send and receive when using Media Streams.\n\n## WebSocket Messages from Twilio\n\nTwilio sends the following message types to your WebSocket server during a Stream:\n\n- **Connected**\n- **Start**\n- **Media**\n- **DTMF**\n- **Stop**\n- **Mark** (bidirectional Streams only)\n\n### Connected Message\n\nTwilio sends the `connected` event once a WebSocket connection is established. This is the first message your WebSocket server receives, and this message describes the protocol to expect in the following messages.\n\n| Property   | Description                                      |\n|------------|--------------------------------------------------|\n| `event`    | Describes the type of WebSocket message.         |\n| `protocol` | Defines the protocol for the WebSocket connection's lifetime. |\n| `version`  | Semantic version of the protocol.                |\n\n**Example `connected` message:**\n\n```json\n{ \n  \"event\": \"connected\",\n  \"protocol\": \"Call\", \n  \"version\": \"1.0.0\"\n}\n```\n\n### Start Message\n\nThe `start` message contains metadata about the Stream and is sent immediately after the `connected` message. It is only sent once at the start of the Stream.\n\n| Property           | Description                                                        |\n|--------------------|--------------------------------------------------------------------|\n| `event`            | Describes the type of WebSocket message.                           |\n| `sequenceNumber`   | Number used to keep track of message sending order.                |\n| `start`            | An object containing Stream metadata                               |\n| `start.streamSid`  | The unique identifier of the Stream                                |\n| `start.accountSid` | The SID of the Account that created the Stream                     |\n| `start.callSid`    | The SID of the Call that started the Stream                        |\n| `start.tracks`     | Array of strings indicating media flows expected in subsequent messages (e.g., `inbound`, `outbound`). |\n| `start.customParameters` | Object containing custom parameters set when defining the Stream |\n| `start.mediaFormat`| Object containing the format of the payload in the `media` messages. |\n| `start.mediaFormat.encoding` | Encoding of the data in the payload, always `audio/x-mulaw`. |\n| `start.mediaFormat.sampleRate` | Sample rate in hertz, always `8000`.                  |\n| `start.mediaFormat.channels` | Number of channels, always `1`.                          |\n| `streamSid`        | The unique identifier of the Stream                                |\n\n**Example `start` message:**\n\n```json\n{\n  \"event\": \"start\",\n  \"sequenceNumber\": \"1\",\n  \"start\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"tracks\": [ \"inbound\" ],\n    \"mediaFormat\": { \n        \"encoding\": \"audio/x-mulaw\", \n        \"sampleRate\": 8000, \n        \"channels\": 1 },\n    \"customParameters\": {\n     \"FirstName\": \"Jane\",\n     \"LastName\": \"Doe\",\n     \"RemoteParty\": \"Bob\"\n   }\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Media Message\n\nThis message type encapsulates the raw audio data.\n\n| Property    | Description                                   |\n|-------------|-----------------------------------------------|\n| `event`     | Describes the type of WebSocket message.      |\n| `sequenceNumber` | Number for message sending order.       |\n| `media`     | Object containing media metadata and payload  |\n| `media.track` | One of `inbound` or `outbound`              |\n| `media.chunk` | Chunk number for the message.               |\n| `media.timestamp` | Presentation Timestamp in milliseconds. |\n| `media.payload` | Raw audio data encoded in base64.         |\n| `streamSid` | The unique identifier of the Stream           |\n\n**Example `outbound` media message (abbreviated `payload`):**\n\n```json\n{ \n \"event\": \"media\",\n \"sequenceNumber\": \"3\", \n \"media\": { \n   \"track\": \"outbound\", \n   \"chunk\": \"1\", \n   \"timestamp\": \"5\",\n   \"payload\": \"no+JhoaJjpz...\"\n } ,\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n**Example `inbound` media message (abbreviated `payload`):**\n\n```json\n{ \n \"event\": \"media\",\n \"sequenceNumber\": \"4\",\n \"media\": { \n   \"track\": \"inbound\", \n   \"chunk\": \"2\", \n   \"timestamp\": \"5\",\n   \"payload\": \"no+JhoaJjpzS...\"\n },\n\"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" \n}\n```\n\n### Stop Message\n\nTwilio sends a `stop` message when the Stream has stopped or the call has ended.\n\n| Property    | Description                                   |\n|-------------|-----------------------------------------------|\n| `event`     | Describes the type of WebSocket message.      |\n| `sequenceNumber` | Number for message sending order.        |\n| `stop`      | Object containing Stream metadata             |\n| `stop.accountSid` | The Account identifier                  |\n| `stop.callSid` | The Call identifier                        |\n| `streamSid` | The unique identifier of the Stream           |\n\n**Example `stop` message:**\n\n```json\n{ \n \"event\": \"stop\",\n \"sequenceNumber\": \"5\",\n \"stop\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" \n}\n```\n\n### DTMF Message\n\nThe `dtmf` message is sent when someone presses a touch-tone number key in the inbound stream.\n\n| Property      | Description                                   |\n|---------------|-----------------------------------------------|\n| `event`       | Describes the type of WebSocket message.      |\n| `streamSid`   | The unique identifier of the Stream           |\n| `sequenceNumber` | Number for message sending order.         |\n| `dtmf.track`  | The track on which the DTMF key was pressed.  |\n| `dtmf.digit`  | The number-key tone detected                  |\n\n**Example `dtmf` message:**\n\n```json\n{ \n  \"event\": \"dtmf\", \n  \"streamSid\":\"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \n  \"sequenceNumber\":\"5\", \n  \"dtmf\": { \n      \"track\":\"inbound_track\", \n      \"digit\": \"1\"\n  }\n}\n```\n\n### Mark Message\n\nFor bidirectional Streams, when your server sends a media message, it can then send a mark message to Twilio. When the media message's playback is complete, Twilio sends a mark message back.\n\n| Property      | Description                                   |\n|---------------|-----------------------------------------------|\n| `event`       | Describes the type of WebSocket message.      |\n| `streamSid`   | The unique identifier of the Stream           |\n| `sequenceNumber` | Number for message sending order.         |\n| `mark`        | An object containing the mark metadata        |\n| `mark.name`   | A custom value to recognize future messages   |\n\n**Example `mark` message:**\n\n```json\n{ \n \"event\": \"mark\",\n \"sequenceNumber\": \"4\",\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n \"mark\": {\n   \"name\": \"my label\"\n }\n}\n```\n\n## Send WebSocket Messages to Twilio\n\nIf you initiated a Stream using `<Connect><Stream>`, your Stream is bidirectional. You can send the following WebSocket messages back to Twilio:\n\n- **Media**\n- **Mark**\n- **Clear**\n\n### Send a Media Message\n\nTo send media back to Twilio, provide a properly formatted `media` message. The payload should be encoded as `audio/x-mulaw`, with a sample rate of `8000`, and encoded in base64.\n\n**Example `media` message to send to Twilio:**\n\n```json\n{\n  \"event\": \"media\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"media\": {\n    \"payload\": \"a3242sa...\"\n  }\n}\n```\n\n### Send a Mark Message\n\nSend a `mark` event message after a `media` event to be notified when the audio you sent is completed.\n\n**Example `mark` message sent to Twilio:**\n\n```json\n{ \n \"event\": \"mark\",\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n \"mark\": {\n   \"name\": \"my label\"\n }\n}\n```\n\n### Send a Clear Message\n\nSend a `clear` message to interrupt the audio sent in various `media` messages, clearing all buffered audio.\n\n**Example `clear` message sent to Twilio:**\n\n```json\n{ \n \"event\": \"clear\",\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n## Need some help?\n\nFor additional support, contact the support team or visit Twilio's Stack Overflow Collective.","response":"# Media Streams - WebSocket Messages\n\n## Support for Twilio Regions\n\nMedia Streams is now available in the Ireland (IE1) and Australia (AU1) Regions.\n\n- For outbound calls, follow the guide for outbound calls in non-US Regions.\n- For inbound calls, follow the guide for inbound call processing in non-US Regions.\n- For more info on Twilio Regions, visit the Global Infrastructure docs.\n\nDuring a Media Stream, Twilio sends messages to your WebSocket server that provide information about the Stream. For bidirectional Media Streams, your server can also send messages back to Twilio.\n\nThis section covers each type of message that your WebSocket server can send and receive when using Media Streams.\n\n## WebSocket Messages from Twilio\n\nTwilio sends the following message types to your WebSocket server during a Stream:\n\n- **Connected**\n- **Start**\n- **Media**\n- **DTMF**\n- **Stop**\n- **Mark** (bidirectional Streams only)\n\n### Connected Message\n\nTwilio sends the `connected` event once a WebSocket connection is established. This is the first message your WebSocket server receives, and this message describes the protocol to expect in the following messages.\n\n| Property   | Description                                      |\n|------------|--------------------------------------------------|\n| `event`    | Describes the type of WebSocket message.         |\n| `protocol` | Defines the protocol for the WebSocket connection's lifetime. |\n| `version`  | Semantic version of the protocol.                |\n\n**Example `connected` message:**\n\n```json\n{ \n  \"event\": \"connected\",\n  \"protocol\": \"Call\", \n  \"version\": \"1.0.0\"\n}\n```\n\n### Start Message\n\nThe `start` message contains metadata about the Stream and is sent immediately after the `connected` message. It is only sent once at the start of the Stream.\n\n| Property           | Description                                                        |\n|--------------------|--------------------------------------------------------------------|\n| `event`            | Describes the type of WebSocket message.                           |\n| `sequenceNumber`   | Number used to keep track of message sending order.                |\n| `start`            | An object containing Stream metadata                               |\n| `start.streamSid`  | The unique identifier of the Stream                                |\n| `start.accountSid` | The SID of the Account that created the Stream                     |\n| `start.callSid`    | The SID of the Call that started the Stream                        |\n| `start.tracks`     | Array of strings indicating media flows expected in subsequent messages (e.g., `inbound`, `outbound`). |\n| `start.customParameters` | Object containing custom parameters set when defining the Stream |\n| `start.mediaFormat`| Object containing the format of the payload in the `media` messages. |\n| `start.mediaFormat.encoding` | Encoding of the data in the payload, always `audio/x-mulaw`. |\n| `start.mediaFormat.sampleRate` | Sample rate in hertz, always `8000`.                  |\n| `start.mediaFormat.channels` | Number of channels, always `1`.                          |\n| `streamSid`        | The unique identifier of the Stream                                |\n\n**Example `start` message:**\n\n```json\n{\n  \"event\": \"start\",\n  \"sequenceNumber\": \"1\",\n  \"start\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"tracks\": [ \"inbound\" ],\n    \"mediaFormat\": { \n        \"encoding\": \"audio/x-mulaw\", \n        \"sampleRate\": 8000, \n        \"channels\": 1 },\n    \"customParameters\": {\n     \"FirstName\": \"Jane\",\n     \"LastName\": \"Doe\",\n     \"RemoteParty\": \"Bob\"\n   }\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Media Message\n\nThis message type encapsulates the raw audio data.\n\n| Property    | Description                                   |\n|-------------|-----------------------------------------------|\n| `event`     | Describes the type of WebSocket message.      |\n| `sequenceNumber` | Number for message sending order.       |\n| `media`     | Object containing media metadata and payload  |\n| `media.track` | One of `inbound` or `outbound`              |\n| `media.chunk` | Chunk number for the message.               |\n| `media.timestamp` | Presentation Timestamp in milliseconds. |\n| `media.payload` | Raw audio data encoded in base64.         |\n| `streamSid` | The unique identifier of the Stream           |\n\n**Example `outbound` media message (abbreviated `payload`):**\n\n```json\n{ \n \"event\": \"media\",\n \"sequenceNumber\": \"3\", \n \"media\": { \n   \"track\": \"outbound\", \n   \"chunk\": \"1\", \n   \"timestamp\": \"5\",\n   \"payload\": \"no+JhoaJjpz...\"\n } ,\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n**Example `inbound` media message (abbreviated `payload`):**\n\n```json\n{ \n \"event\": \"media\",\n \"sequenceNumber\": \"4\",\n \"media\": { \n   \"track\": \"inbound\", \n   \"chunk\": \"2\", \n   \"timestamp\": \"5\",\n   \"payload\": \"no+JhoaJjpzS...\"\n },\n\"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" \n}\n```\n\n### Stop Message\n\nTwilio sends a `stop` message when the Stream has stopped or the call has ended.\n\n| Property    | Description                                   |\n|-------------|-----------------------------------------------|\n| `event`     | Describes the type of WebSocket message.      |\n| `sequenceNumber` | Number for message sending order.        |\n| `stop`      | Object containing Stream metadata             |\n| `stop.accountSid` | The Account identifier                  |\n| `stop.callSid` | The Call identifier                        |\n| `streamSid` | The unique identifier of the Stream           |\n\n**Example `stop` message:**\n\n```json\n{ \n \"event\": \"stop\",\n \"sequenceNumber\": \"5\",\n \"stop\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" \n}\n```\n\n### DTMF Message\n\nThe `dtmf` message is sent when someone presses a touch-tone number key in the inbound stream.\n\n| Property      | Description                                   |\n|---------------|-----------------------------------------------|\n| `event`       | Describes the type of WebSocket message.      |\n| `streamSid`   | The unique identifier of the Stream           |\n| `sequenceNumber` | Number for message sending order.         |\n| `dtmf.track`  | The track on which the DTMF key was pressed.  |\n| `dtmf.digit`  | The number-key tone detected                  |\n\n**Example `dtmf` message:**\n\n```json\n{ \n  \"event\": \"dtmf\", \n  \"streamSid\":\"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \n  \"sequenceNumber\":\"5\", \n  \"dtmf\": { \n      \"track\":\"inbound_track\", \n      \"digit\": \"1\"\n  }\n}\n```\n\n### Mark Message\n\nFor bidirectional Streams, when your server sends a media message, it can then send a mark message to Twilio. When the media message's playback is complete, Twilio sends a mark message back.\n\n| Property      | Description                                   |\n|---------------|-----------------------------------------------|\n| `event`       | Describes the type of WebSocket message.      |\n| `streamSid`   | The unique identifier of the Stream           |\n| `sequenceNumber` | Number for message sending order.         |\n| `mark`        | An object containing the mark metadata        |\n| `mark.name`   | A custom value to recognize future messages   |\n\n**Example `mark` message:**\n\n```json\n{ \n \"event\": \"mark\",\n \"sequenceNumber\": \"4\",\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n \"mark\": {\n   \"name\": \"my label\"\n }\n}\n```\n\n## Send WebSocket Messages to Twilio\n\nIf you initiated a Stream using `<Connect><Stream>`, your Stream is bidirectional. You can send the following WebSocket messages back to Twilio:\n\n- **Media**\n- **Mark**\n- **Clear**\n\n### Send a Media Message\n\nTo send media back to Twilio, provide a properly formatted `media` message. The payload should be encoded as `audio/x-mulaw`, with a sample rate of `8000`, and encoded in base64.\n\n**Example `media` message to send to Twilio:**\n\n```json\n{\n  \"event\": \"media\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"media\": {\n    \"payload\": \"a3242sa...\"\n  }\n}\n```\n\n### Send a Mark Message\n\nSend a `mark` event message after a `media` event to be notified when the audio you sent is completed.\n\n**Example `mark` message sent to Twilio:**\n\n```json\n{ \n \"event\": \"mark\",\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n \"mark\": {\n   \"name\": \"my label\"\n }\n}\n```\n\n### Send a Clear Message\n\nSend a `clear` message to interrupt the audio sent in various `media` messages, clearing all buffered audio.\n\n**Example `clear` message sent to Twilio:**\n\n```json\n{ \n \"event\": \"clear\",\n \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n## Need some help?\n\nFor additional support, contact the support team or visit Twilio's Stack Overflow Collective."}
{"timestamp":"2024-11-07 15:56:53.525","prompt":"twilio_media_streams_websocket_messages_documentation","response":"twilio_media_streams_websocket_messages_documentation"}
{"timestamp":"2024-11-07 15:57:39.709","prompt":"# Twilio Programmable Voice Documentation\n\n## Media Streams Overview\n\nTwilio's Media Streams service provides access to the raw audio stream of your Programmable Voice calls via WebSockets. This can be used for real-time transcriptions, sentiment analysis, voice authentication, and more. Audio can be streamed into calls from another application, enabling conversational IVR or integration with AI chatbots.\n\n### Support for Twilio Regions\n\nMedia Streams are available in the Ireland (IE1) and Australia (AU1) regions.\n\n- **Outbound Calls**: [Guide for outbound calls in non-US regions][216].\n- **Inbound Calls**: [Guide for inbound call processing in non-US regions][217].\n- **Twilio Regions**: [Global Infrastructure docs][218].\n\nBefore you start using Media Streams, complete one of the [Voice quickstarts][219] if new to Twilio.\n\nConsider whether unidirectional or bidirectional streams suit your use case. The differences are detailed below.\n\n## Unidirectional Media Streams\n\nUnidirectional Media Streams allow your WebSocket application to receive audio from Twilio, but you can't send audio back.\n\n- **Audio Streams**: Inbound (to Twilio), outbound (from Twilio), or both.\n- **DTMF**: Not supported.\n- **Initiation**: Use `<Start><Stream>` TwiML instructions or the [Stream resource][222] via REST API.\n- **Termination**: Use `<Stop><Stream>` or the [Stream resource][223].\n\n### Resources for Unidirectional Streams\n\n- [<Stream> TwiML Reference][225]\n- [Stream Resource API Reference][226]\n- [WebSocket Messages][227]\n  - Node.js, Python, and Java sample applications available.\n\n## Bidirectional Media Streams\n\nBidirectional Media Streams enable your application to both receive audio from Twilio and send audio back to be played in the call.\n\n- **Use Case**: Real-time conversation with AI assistant.\n- **Audio Streams**: Receive inbound track only.\n- **DTMF**: Supported from Twilio to your server only.\n- **Initiation**: Use `<Connect><Stream>`. Subsequent TwiML instructions are blocked until the WebSocket disconnects.\n- **Termination**: Close the WebSocket or end the call.\n\n### Resources for Bidirectional Streams\n\n- [<Stream> TwiML Reference][235]\n- [WebSocket Messages][236]\n  - Basic sample application for bidirectional streaming available.\n\n## Limits\n\n- **Unidirectional Streams**: Up to four tracks can be streamed at a time on a call.\n- **Bidirectional Streams**: One stream per call.\n  \nEach stream corresponds to one WebSocket connection.\n\n## Communication with Twilio's Media Servers\n\nConfigure your firewall to allow secure WebSocket connections through TCP port 443 from Twilio to your servers. Validate the `X-Twilio-Signature` header to ensure authenticity. More info is available on the [Security page][242].\n\n## Additional Resources\n\n- [<Stream> TwiML Reference][244]\n- [WebSocket Messages][245]\n- [Stream Resource API Reference][246]\n- [Sample Application Repo][247]\n\n## Need Help?\n\nFor support, reach out to our [support team][248] or consult the Twilio [Stack Overflow Collective][249].\n\n## Privacy and Terms\n\n- [Terms of Service][251]\n- [Privacy Policy][252]\n\nCopyright © 2024 Twilio Inc.\n\n[216]: /docs/global-infrastructure/create-an-outbound-call-via-rest-api-in-a-non-us-twilio-region\n[217]: /docs/global-infrastructure/inbound-call-processing\n[218]: /docs/global-infrastructure\n[219]: https://www.twilio.com/docs/voice/quickstart\n[222]: /docs/voice/api/stream-resource\n[223]: /docs/voice/api/stream-resource#update-a-stream-resource\n[225]: /docs/voice/twiml/stream\n[226]: /docs/voice/api/stream-resource\n[227]: /docs/voice/media-streams/websocket-messages\n[235]: /docs/voice/twiml/stream\n[236]: /docs/voice/media-streams/websocket-messages\n[244]: /docs/voice/twiml/stream\n[245]: /docs/voice/media-streams/websocket-messages\n[246]: /docs/voice/api/stream-resource\n[247]: https://github.com/twilio/media-streams\n[248]: https://help.twilio.com\n[249]: https://stackoverflow.com/collectives/twilio\n[251]: /en-us/legal/tos\n[252]: /en-us/legal/privacy","response":"# Twilio Programmable Voice Documentation\n\n## Media Streams Overview\n\nTwilio's Media Streams service provides access to the raw audio stream of your Programmable Voice calls via WebSockets. This can be used for real-time transcriptions, sentiment analysis, voice authentication, and more. Audio can be streamed into calls from another application, enabling conversational IVR or integration with AI chatbots.\n\n### Support for Twilio Regions\n\nMedia Streams are available in the Ireland (IE1) and Australia (AU1) regions.\n\n- **Outbound Calls**: [Guide for outbound calls in non-US regions][216].\n- **Inbound Calls**: [Guide for inbound call processing in non-US regions][217].\n- **Twilio Regions**: [Global Infrastructure docs][218].\n\nBefore you start using Media Streams, complete one of the [Voice quickstarts][219] if new to Twilio.\n\nConsider whether unidirectional or bidirectional streams suit your use case. The differences are detailed below.\n\n## Unidirectional Media Streams\n\nUnidirectional Media Streams allow your WebSocket application to receive audio from Twilio, but you can't send audio back.\n\n- **Audio Streams**: Inbound (to Twilio), outbound (from Twilio), or both.\n- **DTMF**: Not supported.\n- **Initiation**: Use `<Start><Stream>` TwiML instructions or the [Stream resource][222] via REST API.\n- **Termination**: Use `<Stop><Stream>` or the [Stream resource][223].\n\n### Resources for Unidirectional Streams\n\n- [<Stream> TwiML Reference][225]\n- [Stream Resource API Reference][226]\n- [WebSocket Messages][227]\n  - Node.js, Python, and Java sample applications available.\n\n## Bidirectional Media Streams\n\nBidirectional Media Streams enable your application to both receive audio from Twilio and send audio back to be played in the call.\n\n- **Use Case**: Real-time conversation with AI assistant.\n- **Audio Streams**: Receive inbound track only.\n- **DTMF**: Supported from Twilio to your server only.\n- **Initiation**: Use `<Connect><Stream>`. Subsequent TwiML instructions are blocked until the WebSocket disconnects.\n- **Termination**: Close the WebSocket or end the call.\n\n### Resources for Bidirectional Streams\n\n- [<Stream> TwiML Reference][235]\n- [WebSocket Messages][236]\n  - Basic sample application for bidirectional streaming available.\n\n## Limits\n\n- **Unidirectional Streams**: Up to four tracks can be streamed at a time on a call.\n- **Bidirectional Streams**: One stream per call.\n  \nEach stream corresponds to one WebSocket connection.\n\n## Communication with Twilio's Media Servers\n\nConfigure your firewall to allow secure WebSocket connections through TCP port 443 from Twilio to your servers. Validate the `X-Twilio-Signature` header to ensure authenticity. More info is available on the [Security page][242].\n\n## Additional Resources\n\n- [<Stream> TwiML Reference][244]\n- [WebSocket Messages][245]\n- [Stream Resource API Reference][246]\n- [Sample Application Repo][247]\n\n## Need Help?\n\nFor support, reach out to our [support team][248] or consult the Twilio [Stack Overflow Collective][249].\n\n## Privacy and Terms\n\n- [Terms of Service][251]\n- [Privacy Policy][252]\n\nCopyright © 2024 Twilio Inc.\n\n[216]: /docs/global-infrastructure/create-an-outbound-call-via-rest-api-in-a-non-us-twilio-region\n[217]: /docs/global-infrastructure/inbound-call-processing\n[218]: /docs/global-infrastructure\n[219]: https://www.twilio.com/docs/voice/quickstart\n[222]: /docs/voice/api/stream-resource\n[223]: /docs/voice/api/stream-resource#update-a-stream-resource\n[225]: /docs/voice/twiml/stream\n[226]: /docs/voice/api/stream-resource\n[227]: /docs/voice/media-streams/websocket-messages\n[235]: /docs/voice/twiml/stream\n[236]: /docs/voice/media-streams/websocket-messages\n[244]: /docs/voice/twiml/stream\n[245]: /docs/voice/media-streams/websocket-messages\n[246]: /docs/voice/api/stream-resource\n[247]: https://github.com/twilio/media-streams\n[248]: https://help.twilio.com\n[249]: https://stackoverflow.com/collectives/twilio\n[251]: /en-us/legal/tos\n[252]: /en-us/legal/privacy"}
{"timestamp":"2024-11-07 15:57:40.458","prompt":"twilio_media_streams_programmable_voice_websockets_implementation_guide","response":"twilio_media_streams_programmable_voice_websockets_implementation_guide"}
{"timestamp":"2024-11-07 16:02:16.338","prompt":"# TwiML™️ Voice: `<Stream>`\n\nThe `<Stream>` TwiML noun is used in conjunction with either `<Start>` or `<Connect>`. When Twilio executes the `<Start><Stream>` or `<Connect><Stream>` instruction during a Call, Twilio forks the raw audio stream of the Call and streams it to your WebSocket server in near real-time.\n\nThis page covers `<Stream>`'s supported attributes and provides sample code for generating `<Stream>` TwiML instructions with a Helper Library.\n\n`<Stream>` is part of Twilio's Media Streams product. To learn more about Media Streams and how to integrate it with your Voice application, [check out the Media Streams Overview page][219].\n\n`<Start><Stream>` creates a [unidirectional Stream][220]. `<Connect><Stream>` creates a [bidirectional Stream][221].\n\nBelow is a basic example of `<Start><Stream>`:\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nstart.stream({\n  name: 'Example Audio Stream',\n  url: 'wss://example.com/audiostream',\n});\nresponse.say('The stream has started.');\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream name=\"Example Audio Stream\" url=\"wss://example.com/audiostream\" />\n    </Start>\n    <Say>The stream has started.</Say>\n</Response>\n```\n\nWhen Twilio executes this instruction, Twilio forks the audio stream of the current Call and sends it in real-time over a WebSocket connection to the URL specified in the `url` attribute.\n\nBelow is an example of `<Connect><Stream>`:\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst connect = response.connect();\nconnect.stream({ url: 'wss://example.com/audiostream' });\nresponse.say(\n  'This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.'\n);\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n   <Connect>\n       <Stream url=\"wss://example.com/audiostream\" />\n   </Connect>\n   <Say>This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.</Say>\n</Response>\n```\n\nWhen `<Connect><Stream>` is used, Twilio does not execute the next set of TwiML instructions. The only way Twilio executes TwiML instructions after `<Connect><Stream>` is if your server closes the WebSocket connection with Twilio.\n\n## Attributes\n\n`<Stream>` supports the following attributes:\n\n| Attribute Name         | Allowed Values                              | Default Value    |\n|------------------------|----------------------------------------------|------------------|\n| `url`                  | A relative or absolute URL.                  | none             |\n| `name`                 | Optional. Unique name for the Stream.        | none             |\n| `track`                | Optional. `inbound_track`, `outbound_track`, `both_tracks` | `inbound_track` |\n| `statusCallback`       | Optional. A relative or absolute URL.        | none             |\n| `statusCallbackMethod` | Optional. `GET` or `POST`                    | `POST`           |\n\n### url\n\nThe `url` attribute accepts a relative or absolute URL. On successful execution, a WebSocket connection to the URL will be established and audio will start streaming. `wss` is the only supported protocol.\n\nThe `url` *does not* support query string parameters. To pass custom key-value pairs to the WebSocket, make use of [Custom Parameters][231] instead.\n\n### name\n\nProviding a `name` allows you to reference the Stream directly. This name must be unique per Call. This allows you to [stop a Stream by name][233].\n\n### track\n\nFor unidirectional Streams (`<Start><Stream>`), the `track` attribute allows you to specify which tracks of a Call to receive, `inbound_track`, `outbound_track`, or `both_tracks`. The default value is `inbound_track`.\n\nFor bidirectional Streams (`<Connect><Stream>`), you can only receive the `inbound_track`.\n\n### statusCallback\n\nThe `statusCallback` attribute takes an absolute or relative URL as value. Whenever a Stream is started or stopped, Twilio sends an HTTP request to this URL with the following parameters:\n\n- `AccountSid`: The unique identifier of the Account responsible for this Stream.\n- `CallSid`: The unique identifier of the Call.\n- `StreamSid`: The unique identifier for this Stream.\n- `StreamName`: If defined, this is the unique name of the Stream. Defaults to the StreamSid.\n- `StreamEvent`: One of `stream-started`, `stream-stopped`, or `stream-error`.\n- `StreamError`: If an error has occurred, this will contain a detailed error message.\n- `Timestamp`: The time of the event in [ISO 8601 format][240].\n\n### statusCallbackMethod\n\nThe HTTP method to use when requesting the `statusCallback` URL. Default is `POST`.\n\n## Custom parameters\n\nIt is possible to include additional key-value pairs that Twilio then passes along to your WebSocket server. You can do this by using the nested `<Parameter>` TwiML noun.\n\n**Note:** The combined length of each `<Parameter>`'s `name` and `value` attributes must be under 500 characters.\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nconst stream = start.stream({\n    url: 'wss://mystream.ngrok.io/example'\n});\nstream.parameter({\n    name: 'FirstName',\n    value: 'Jane'\n});\nstream.parameter({\n    name: 'LastName',\n    value: 'Doe'\n});\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream url=\"wss://mystream.ngrok.io/example\">\n            <Parameter name=\"FirstName\" value=\"Jane\" />\n            <Parameter name=\"LastName\" value=\"Doe\" />\n        </Stream>\n    </Start>\n</Response>\n```\n\n## Stop a Stream\n\nIf you started a Stream with `<Start>` and the `name` attribute, you can use the `<Stop>` TwiML verb to stop the Stream by `name`.\n\n**Note:** The only way you can stop a bidirectional Stream (one that was started with `<Connect><Stream>`) is to end the call.\n\n```xml\n<Start>\n    <Stream name=\"my_first_stream\" url=\"wss://mystream.ngrok.io/audiostream\" />\n</Start>\n```\n\nYou can later use the unique `name` of `my_first_stream` to stop the Stream:\n\n```xml\n<Stop>\n   <Stream name=\"my_first_stream\" />\n</Stop>\n```\n\nYou can also stop a [unidirectional Stream][246] via API. Visit the [Stream resource API reference page][247] for more information.\n\n## Need some help?\n\nWe all do sometimes; code is hard. Get help now from our [support team][248], or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective][249] or browsing the [Twilio tag][250] on Stack Overflow. \n\n---\n\n[Terms of Service][251] | [Privacy Policy][252] \n\n© 2024 Twilio Inc.\n\n[Twilio][253]","response":"# TwiML™️ Voice: `<Stream>`\n\nThe `<Stream>` TwiML noun is used in conjunction with either `<Start>` or `<Connect>`. When Twilio executes the `<Start><Stream>` or `<Connect><Stream>` instruction during a Call, Twilio forks the raw audio stream of the Call and streams it to your WebSocket server in near real-time.\n\nThis page covers `<Stream>`'s supported attributes and provides sample code for generating `<Stream>` TwiML instructions with a Helper Library.\n\n`<Stream>` is part of Twilio's Media Streams product. To learn more about Media Streams and how to integrate it with your Voice application, [check out the Media Streams Overview page][219].\n\n`<Start><Stream>` creates a [unidirectional Stream][220]. `<Connect><Stream>` creates a [bidirectional Stream][221].\n\nBelow is a basic example of `<Start><Stream>`:\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nstart.stream({\n  name: 'Example Audio Stream',\n  url: 'wss://example.com/audiostream',\n});\nresponse.say('The stream has started.');\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream name=\"Example Audio Stream\" url=\"wss://example.com/audiostream\" />\n    </Start>\n    <Say>The stream has started.</Say>\n</Response>\n```\n\nWhen Twilio executes this instruction, Twilio forks the audio stream of the current Call and sends it in real-time over a WebSocket connection to the URL specified in the `url` attribute.\n\nBelow is an example of `<Connect><Stream>`:\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst connect = response.connect();\nconnect.stream({ url: 'wss://example.com/audiostream' });\nresponse.say(\n  'This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.'\n);\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n   <Connect>\n       <Stream url=\"wss://example.com/audiostream\" />\n   </Connect>\n   <Say>This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.</Say>\n</Response>\n```\n\nWhen `<Connect><Stream>` is used, Twilio does not execute the next set of TwiML instructions. The only way Twilio executes TwiML instructions after `<Connect><Stream>` is if your server closes the WebSocket connection with Twilio.\n\n## Attributes\n\n`<Stream>` supports the following attributes:\n\n| Attribute Name         | Allowed Values                              | Default Value    |\n|------------------------|----------------------------------------------|------------------|\n| `url`                  | A relative or absolute URL.                  | none             |\n| `name`                 | Optional. Unique name for the Stream.        | none             |\n| `track`                | Optional. `inbound_track`, `outbound_track`, `both_tracks` | `inbound_track` |\n| `statusCallback`       | Optional. A relative or absolute URL.        | none             |\n| `statusCallbackMethod` | Optional. `GET` or `POST`                    | `POST`           |\n\n### url\n\nThe `url` attribute accepts a relative or absolute URL. On successful execution, a WebSocket connection to the URL will be established and audio will start streaming. `wss` is the only supported protocol.\n\nThe `url` *does not* support query string parameters. To pass custom key-value pairs to the WebSocket, make use of [Custom Parameters][231] instead.\n\n### name\n\nProviding a `name` allows you to reference the Stream directly. This name must be unique per Call. This allows you to [stop a Stream by name][233].\n\n### track\n\nFor unidirectional Streams (`<Start><Stream>`), the `track` attribute allows you to specify which tracks of a Call to receive, `inbound_track`, `outbound_track`, or `both_tracks`. The default value is `inbound_track`.\n\nFor bidirectional Streams (`<Connect><Stream>`), you can only receive the `inbound_track`.\n\n### statusCallback\n\nThe `statusCallback` attribute takes an absolute or relative URL as value. Whenever a Stream is started or stopped, Twilio sends an HTTP request to this URL with the following parameters:\n\n- `AccountSid`: The unique identifier of the Account responsible for this Stream.\n- `CallSid`: The unique identifier of the Call.\n- `StreamSid`: The unique identifier for this Stream.\n- `StreamName`: If defined, this is the unique name of the Stream. Defaults to the StreamSid.\n- `StreamEvent`: One of `stream-started`, `stream-stopped`, or `stream-error`.\n- `StreamError`: If an error has occurred, this will contain a detailed error message.\n- `Timestamp`: The time of the event in [ISO 8601 format][240].\n\n### statusCallbackMethod\n\nThe HTTP method to use when requesting the `statusCallback` URL. Default is `POST`.\n\n## Custom parameters\n\nIt is possible to include additional key-value pairs that Twilio then passes along to your WebSocket server. You can do this by using the nested `<Parameter>` TwiML noun.\n\n**Note:** The combined length of each `<Parameter>`'s `name` and `value` attributes must be under 500 characters.\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nconst stream = start.stream({\n    url: 'wss://mystream.ngrok.io/example'\n});\nstream.parameter({\n    name: 'FirstName',\n    value: 'Jane'\n});\nstream.parameter({\n    name: 'LastName',\n    value: 'Doe'\n});\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream url=\"wss://mystream.ngrok.io/example\">\n            <Parameter name=\"FirstName\" value=\"Jane\" />\n            <Parameter name=\"LastName\" value=\"Doe\" />\n        </Stream>\n    </Start>\n</Response>\n```\n\n## Stop a Stream\n\nIf you started a Stream with `<Start>` and the `name` attribute, you can use the `<Stop>` TwiML verb to stop the Stream by `name`.\n\n**Note:** The only way you can stop a bidirectional Stream (one that was started with `<Connect><Stream>`) is to end the call.\n\n```xml\n<Start>\n    <Stream name=\"my_first_stream\" url=\"wss://mystream.ngrok.io/audiostream\" />\n</Start>\n```\n\nYou can later use the unique `name` of `my_first_stream` to stop the Stream:\n\n```xml\n<Stop>\n   <Stream name=\"my_first_stream\" />\n</Stop>\n```\n\nYou can also stop a [unidirectional Stream][246] via API. Visit the [Stream resource API reference page][247] for more information.\n\n## Need some help?\n\nWe all do sometimes; code is hard. Get help now from our [support team][248], or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective][249] or browsing the [Twilio tag][250] on Stack Overflow. \n\n---\n\n[Terms of Service][251] | [Privacy Policy][252] \n\n© 2024 Twilio Inc.\n\n[Twilio][253]"}
{"timestamp":"2024-11-07 16:02:17.030","prompt":"twiml-voice-stream-overview-and-code-examples","response":"twiml-voice-stream-overview-and-code-examples"}
{"timestamp":"2024-11-07 16:28:52.791","prompt":"# Realtime API\n## Beta\n\nBuild low-latency, multi-modal experiences with Realtime API.\n\nThe Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports **text and audio** as both **input** and **output**, as well as **[function calling][50]**.\n\nNotable benefits of the API include:\n\n1. **Native speech-to-speech:** Low latency with nuanced output by skipping intermediate text format.\n2. **Natural, steerable voices:** Models have natural inflection and can adapt to various tones.\n3. **Simultaneous multimodal output:** Text is useful for moderation; faster-than-realtime audio ensures stable playback.\n\nThe Realtime API is in beta, and we don't offer client-side authentication at this time. Applications need to route audio from the client to an application server for secure authentication with the Realtime API.\n\nNetwork conditions can impact audio reliability. For client-side or telephony applications where network reliability is not controlled, using a third-party solution is recommended. Consider our partners' integrations.\n\n## Quickstart\n\nThe Realtime API is a server-side WebSocket interface. To help you get started, we have a console demo application showcasing API features.\n\n**Note:** The frontend patterns in the demo app are not recommended for production use. However, they help visualize and inspect Realtime integration.\n\n### Get Started\n\nTo start quickly, download and configure the Realtime console demo.\n\n[Get started with the Realtime console][51]\n\nUse partner integrations for frontend applications:\n\n- [LiveKit integration guide][52]\n- [Twilio integration guide][53]\n- [Agora integration quickstart][54]\n\n## Overview\n\nThe Realtime API is a **stateful**, **event-based** API that uses WebSocket. Connection parameters are:\n\n- **URL:** `wss://api.openai.com/v1/realtime`\n- **Query Parameters:** `?model=gpt-4o-realtime-preview-2024-10-01`\n- **Headers:**\n  - `Authorization: Bearer YOUR_API_KEY`\n  - `OpenAI-Beta: realtime=v1`\n\n### Example\n\nUsing the `ws` library in Node.js:\n\n```javascript\nimport WebSocket from \"ws\";\n\nconst url = \"wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01\";\nconst ws = new WebSocket(url, {\n    headers: {\n        \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n        \"OpenAI-Beta\": \"realtime=v1\",\n    },\n});\n\nws.on(\"open\", function open() {\n    console.log(\"Connected to server.\");\n    ws.send(JSON.stringify({\n        type: \"response.create\",\n        response: {\n            modalities: [\"text\"],\n            instructions: \"Please assist the user.\",\n        }\n    }));\n});\n\nws.on(\"message\", function incoming(message) {\n    console.log(JSON.parse(message.toString()));\n});\n```\n\nRefer to the [API reference][56] for a full list of events. You'll exchange events representing text, audio, function calls, and more.\n\n## Concepts\n\nThe Realtime API maintains interaction state during a session.\n\nClients connect via WebSockets to `wss://api.openai.com/v1/realtime` and exchange JSON-formatted events while the session is active.\n\n### State\n\nSession state includes:\n\n- **Session**\n- **Input Audio Buffer**\n- **Conversations**, a list of Items\n- **Responses**, generating a list of Items\n\nObjects:\n\n- **Session:** Single WebSocket connection for exchanging JSON events (text and audio).\n- **Conversation:** List of Items initiated at session start.\n- **Items:** `message`, `function_call`, or `function_call_output`.\n\n### Input Audio Buffer\n\nThe server's audio buffer holds uncommitted client audio. Append audio using `input_audio_buffer.append`.\n\n## Integration Guide\n\n### Audio Formats\n\nSupported formats:\n\n- raw 16-bit PCM audio at 24kHz, mono, little-endian\n- G.711 at 8kHz (u-law and a-law)\n\nEncode audio chunks as base64. Use `pydub` for Python or `audio-decode` for Node.js.\n\n### Instructions\n\nSet `instructions` on session or response to control server output. Example:\n\n> Your knowledge cutoff is 2023-10. You are a helpful, witty, and friendly AI. Speak quickly and engage warmly.\n\n## Events\n\nNine client events you can send and 28 server events you can listen to. See [API reference][67] for full specifications.\n\nBasic implementation recommendation: Refer to [API reference client source][68].\n\n## Client Events\n\n- [session.update][69]\n- [input_audio_buffer.append][70]\n- [input_audio_buffer.commit][71]\n- [input_audio_buffer.clear][72]\n- [conversation.item.create][73]\n\n## Server Events\n\n- [error][78]\n- [session.created][79]\n- [conversation.created][81]\n- [response.created][91]\n- [response.done][92]\n\nComplete documentation on integration, client events, server events, and more is available through referenced links.","response":"# Realtime API\n## Beta\n\nBuild low-latency, multi-modal experiences with Realtime API.\n\nThe Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports **text and audio** as both **input** and **output**, as well as **[function calling][50]**.\n\nNotable benefits of the API include:\n\n1. **Native speech-to-speech:** Low latency with nuanced output by skipping intermediate text format.\n2. **Natural, steerable voices:** Models have natural inflection and can adapt to various tones.\n3. **Simultaneous multimodal output:** Text is useful for moderation; faster-than-realtime audio ensures stable playback.\n\nThe Realtime API is in beta, and we don't offer client-side authentication at this time. Applications need to route audio from the client to an application server for secure authentication with the Realtime API.\n\nNetwork conditions can impact audio reliability. For client-side or telephony applications where network reliability is not controlled, using a third-party solution is recommended. Consider our partners' integrations.\n\n## Quickstart\n\nThe Realtime API is a server-side WebSocket interface. To help you get started, we have a console demo application showcasing API features.\n\n**Note:** The frontend patterns in the demo app are not recommended for production use. However, they help visualize and inspect Realtime integration.\n\n### Get Started\n\nTo start quickly, download and configure the Realtime console demo.\n\n[Get started with the Realtime console][51]\n\nUse partner integrations for frontend applications:\n\n- [LiveKit integration guide][52]\n- [Twilio integration guide][53]\n- [Agora integration quickstart][54]\n\n## Overview\n\nThe Realtime API is a **stateful**, **event-based** API that uses WebSocket. Connection parameters are:\n\n- **URL:** `wss://api.openai.com/v1/realtime`\n- **Query Parameters:** `?model=gpt-4o-realtime-preview-2024-10-01`\n- **Headers:**\n  - `Authorization: Bearer YOUR_API_KEY`\n  - `OpenAI-Beta: realtime=v1`\n\n### Example\n\nUsing the `ws` library in Node.js:\n\n```javascript\nimport WebSocket from \"ws\";\n\nconst url = \"wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01\";\nconst ws = new WebSocket(url, {\n    headers: {\n        \"Authorization\": \"Bearer \" + process.env.OPENAI_API_KEY,\n        \"OpenAI-Beta\": \"realtime=v1\",\n    },\n});\n\nws.on(\"open\", function open() {\n    console.log(\"Connected to server.\");\n    ws.send(JSON.stringify({\n        type: \"response.create\",\n        response: {\n            modalities: [\"text\"],\n            instructions: \"Please assist the user.\",\n        }\n    }));\n});\n\nws.on(\"message\", function incoming(message) {\n    console.log(JSON.parse(message.toString()));\n});\n```\n\nRefer to the [API reference][56] for a full list of events. You'll exchange events representing text, audio, function calls, and more.\n\n## Concepts\n\nThe Realtime API maintains interaction state during a session.\n\nClients connect via WebSockets to `wss://api.openai.com/v1/realtime` and exchange JSON-formatted events while the session is active.\n\n### State\n\nSession state includes:\n\n- **Session**\n- **Input Audio Buffer**\n- **Conversations**, a list of Items\n- **Responses**, generating a list of Items\n\nObjects:\n\n- **Session:** Single WebSocket connection for exchanging JSON events (text and audio).\n- **Conversation:** List of Items initiated at session start.\n- **Items:** `message`, `function_call`, or `function_call_output`.\n\n### Input Audio Buffer\n\nThe server's audio buffer holds uncommitted client audio. Append audio using `input_audio_buffer.append`.\n\n## Integration Guide\n\n### Audio Formats\n\nSupported formats:\n\n- raw 16-bit PCM audio at 24kHz, mono, little-endian\n- G.711 at 8kHz (u-law and a-law)\n\nEncode audio chunks as base64. Use `pydub` for Python or `audio-decode` for Node.js.\n\n### Instructions\n\nSet `instructions` on session or response to control server output. Example:\n\n> Your knowledge cutoff is 2023-10. You are a helpful, witty, and friendly AI. Speak quickly and engage warmly.\n\n## Events\n\nNine client events you can send and 28 server events you can listen to. See [API reference][67] for full specifications.\n\nBasic implementation recommendation: Refer to [API reference client source][68].\n\n## Client Events\n\n- [session.update][69]\n- [input_audio_buffer.append][70]\n- [input_audio_buffer.commit][71]\n- [input_audio_buffer.clear][72]\n- [conversation.item.create][73]\n\n## Server Events\n\n- [error][78]\n- [session.created][79]\n- [conversation.created][81]\n- [response.created][91]\n- [response.done][92]\n\nComplete documentation on integration, client events, server events, and more is available through referenced links."}
{"timestamp":"2024-11-07 16:28:55.762","prompt":"realtime_api_beta_documentation_overview_and_integration_guide","response":"realtime_api_beta_documentation_overview_and_integration_guide"}
{"timestamp":"2024-11-07 16:30:00.193","prompt":"# Media Streams - WebSocket Messages\n\n## Support for Twilio Regions\n\nMedia Streams is now available in the Ireland (IE1) and Australia (AU1) Regions.\n\n- For outbound calls, [follow the guide for outbound calls in non-US Regions](https://www.twilio.com/docs/global-infrastructure/create-an-outbound-call-via-rest-api-in-a-non-us-twilio-region).\n- For inbound calls, [follow the guide for inbound call processing in non-US Regions](https://www.twilio.com/docs/global-infrastructure/inbound-call-processing).\n- For more info on Twilio Regions, [visit the Global Infrastructure docs](https://www.twilio.com/docs/global-infrastructure).\n\nDuring a [Media Stream](https://www.twilio.com/docs/voice/media-streams), Twilio sends messages to your WebSocket server that provide information about the Stream. For [bidirectional Media Streams](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams), your server can also send messages back to Twilio.\n\nThis page covers each type of message that your WebSocket server can send and receive when using Media Streams.\n\n## WebSocket Messages from Twilio\n\nTwilio sends the following message types to your WebSocket server during a Stream:\n\n- [Connected](#connected-message)\n- [Start](#start-message)\n- [Media](#media-message)\n- [DTMF](#dtmf-message)\n- [Stop](#stop-message)\n- [Mark](#mark-message) (bidirectional Streams only)\n\n### Connected Message\n\nTwilio sends the `connected` event once a WebSocket connection is established. This is the first message your WebSocket server receives, and this message describes the protocol to expect in the following messages.\n\n| Property   | Description                                           |\n|------------|-------------------------------------------------------|\n| `event`    | Describes the type of WebSocket message. In this case, `connected`. |\n| `protocol` | Defines the protocol for the WebSocket connection's lifetime.       |\n| `version`  | Semantic version of the protocol.                                  |\n\nAn example `connected` message is shown below.\n\n```json\n{\n  \"event\": \"connected\",\n  \"protocol\": \"Call\",\n  \"version\": \"1.0.0\"\n}\n```\n\n### Start Message\n\nThe `start` message contains metadata about the Stream and is sent immediately after the `connected` message. It is only sent once at the start of the Stream.\n\n| Property           | Description                                                    |\n|--------------------|----------------------------------------------------------------|\n| `event`            | Describes the type of WebSocket message. In this case, `start`.|\n| `sequenceNumber`   | Number used to keep track of message sending order. The first message has a value of `1` and then is incremented for each subsequent message. |\n| `start`            | An object containing Stream metadata                           |\n| `start.streamSid`  | The unique identifier of the Stream                            |\n| `start.accountSid` | The SID of the Account that created the Stream                 |\n| `start.callSid`    | The SID of the Call that started the Stream                    |\n| `start.tracks`     | An array of strings that indicate which media flows are expected in subsequent messages. Values include `inbound`, `outbound`. |\n| `start.customParameters` | An object containing the custom parameters that were set when defining the Stream |\n| `start.mediaFormat`| An object containing the format of the payload in the `media` messages.|\n| `start.mediaFormat.encoding` | The encoding of the data in the upcoming payload. Value is always `audio/x-mulaw`.|\n| `start.mediaFormat.sampleRate`| The sample rate in hertz of the upcoming audio data. Value is always `8000` |\n| `start.mediaFormat.channels` | The number of channels in the input audio data. Value is always `1` |\n| `streamSid`         | The unique identifier of the Stream                          |\n\nAn example `start` message is shown below.\n\n```json\n{\n  \"event\": \"start\",\n  \"sequenceNumber\": \"1\",\n  \"start\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"tracks\": [\"inbound\"],\n    \"mediaFormat\": {\n      \"encoding\": \"audio/x-mulaw\",\n      \"sampleRate\": 8000,\n      \"channels\": 1\n    },\n    \"customParameters\": {\n      \"FirstName\": \"Jane\",\n      \"LastName\": \"Doe\",\n      \"RemoteParty\": \"Bob\"\n    }\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Media Message\n\nThis message type encapsulates the raw audio data.\n\n| Property          | Description                                                 |\n|-------------------|-------------------------------------------------------------|\n| `event`           | Describes the type of WebSocket message. In this case, `\"media\"`.|\n| `sequenceNumber`  | Number used to keep track of message sending order. It increments for each subsequent message. |\n| `media`           | An object containing media metadata and payload            |\n| `media.track`     | One of `inbound` or `outbound`                             |\n| `media.chunk`     | The chunk for the message. The first message will begin with `1` and increment with each subsequent message. |\n| `media.timestamp` | Presentation Timestamp in Milliseconds from the start of the stream. |\n| `media.payload`   | Raw audio in encoded in base64                             |\n| `streamSid`       | The unique identifier of the Stream                        |\n\nAn example `outbound` media message is shown below. The `payload` value is abbreviated.\n\n```json\n{\n  \"event\": \"media\",\n  \"sequenceNumber\": \"3\",\n  \"media\": {\n    \"track\": \"outbound\",\n    \"chunk\": \"1\",\n    \"timestamp\": \"5\",\n    \"payload\": \"no+JhoaJjpz...\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\nAn example `inbound` media message is shown below. The `payload` value is abbreviated.\n\n```json\n{\n  \"event\": \"media\",\n  \"sequenceNumber\": \"4\",\n  \"media\": {\n    \"track\": \"inbound\",\n    \"chunk\": \"2\",\n    \"timestamp\": \"5\",\n    \"payload\": \"no+JhoaJjpzS...\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Stop Message\n\nTwilio sends a `stop` message when the Stream has stopped or the call has ended.\n\n| Property          | Description                                                 |\n|-------------------|-------------------------------------------------------------|\n| `event`           | Describes the type of WebSocket message. In this case, `stop`. |\n| `sequenceNumber`  | Number used to keep track of message sending order. It increments for each subsequent message. |\n| `stop`            | An object containing Stream metadata                       |\n| `stop.accountSid` | The Account identifier that created the Stream             |\n| `stop.callSid`    | The Call identifier that started the Stream                |\n| `streamSid`       | The unique identifier of the Stream                        |\n\nAn example `stop` message is shown below.\n\n```json\n{\n  \"event\": \"stop\",\n  \"sequenceNumber\": \"5\",\n  \"stop\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### DTMF Message\n\nThe `dtmf` message is currently only supported in [bidirectional Streams](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams).\n\n| Property  | Description                                                |\n|-----------|------------------------------------------------------------|\n| `event`   | Describes the type of WebSocket message. In this case, `dtmf`.|\n| `streamSid` | The unique identifier of the Stream                        |\n| `sequenceNumber` | Number used to keep track of message sending order.  |\n| `dtmf.track` | The track on which the DTMF key was pressed. Its is always `inbound_track` |\n| `dtmf.digit`| The number-key tone detected                             |\n\nAn example `dtmf` message is shown below. The `dtmf.digit` value is `1`, indicating that someone pressed the `1` key on their handset.\n\n```json\n{\n  \"event\": \"dtmf\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"sequenceNumber\": \"5\",\n  \"dtmf\": {\n    \"track\": \"inbound_track\",\n    \"digit\": \"1\"\n  }\n}\n```\n\n### Mark Message\n\nTwilio sends the `mark` event only during [bidirectional Streams](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams).\n\n| Property    | Description                                              |\n|-------------|----------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case, `\"mark\"`.|\n| `streamSid` | The unique identifier of the Stream                      |\n| `sequenceNumber` | Number used to keep track of message sending order.  |\n| `mark`      | An object containing the mark metadata                   |\n| `mark.name` | A custom value. Twilio sends back the `mark.name` you specify when it receives a `mark` message |\n\nAn example `mark` message is shown below.\n\n```json\n{\n  \"event\": \"mark\",\n  \"sequenceNumber\": \"4\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"mark\": {\n    \"name\": \"my label\"\n  }\n}\n```\n\n## Send WebSocket Messages to Twilio\n\nIf you initiated a Stream using `<Connect><Stream>`, your Stream is [bidirectional](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams). This means you can send WebSocket messages back to Twilio, allowing you to pipe audio back into the Call and control the flow of the Stream.\n\nThe messages that your WebSocket server can send back to Twilio are:\n\n- [Media](#send-a-media-message)\n- [Mark](#send-a-mark-message)\n- [Clear](#send-a-clear-message)\n\n### Send a Media Message\n\nTo send media back to Twilio, you must provide a properly formatted `media` message.\n\n| Property    | Description                                                  |\n|-------------|--------------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case, `\"media\"`. |\n| `streamSid` | The SID of the Stream that should play the audio             |\n| `media`     | An object containing the media payload                       |\n| `media.payload` | Raw `mulaw/8000` audio in encoded in base64               |\n\nBelow is an example `media` message that your WebSocket server sends back to Twilio. The `media.payload` is abbreviated.\n\n```json\n{\n  \"event\": \"media\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"media\": {\n    \"payload\": \"a3242sa...\"\n  }\n}\n```\n\n### Send a Mark Message\n\nSend a `mark` event message after sending a [`media` event message](https://www.twilio.com/docs/voice/media-streams/websocket-messages#send-a-media-message) to be notified when the audio that you have sent has been completed.\n\n| Property    | Description                                           |\n|-------------|-------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case `\"mark\"`. |\n| `streamSid` | The SID of the Stream that should receive the mark    |\n| `mark`      | An object containing mark metadata and payload        |\n| `mark.name` | A name specific to your needs that will assist in recognizing future received `mark` event |\n\nBelow is an example `mark` message that your WebSocket server sends to Twilio.\n\n```json\n{\n  \"event\": \"mark\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"mark\": {\n    \"name\": \"my label\"\n  }\n}\n```\n\n### Send a Clear Message\n\nSend a `clear` message if you want to interrupt the audio that has been sent in various `media` messages. This empties all buffered audio and causes any `mark` messages to be sent back to your WebSocket server.\n\n| Property    | Description                                            |\n|-------------|--------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case, `\"clear\"`. |\n| `streamSid` | The SID of the Stream in which you wish to interrupt the audio. |\n\nBelow is an example `clear` message that your WebSocket server sends to Twilio.\n\n```json\n{\n  \"event\": \"clear\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n## Need Some Help?\n\nWe all do sometimes; code is hard. Get help now from our [support team](https://help.twilio.com), or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio) or browsing the [Twilio tag](https://stackoverflow.com/questions/tagged/twilio) on Stack Overflow.\n\n[Terms of Service](https://www.twilio.com/en-us/legal/tos) | [Privacy Policy](https://www.twilio.com/en-us/legal/privacy)\n\nCopyright © 2024 Twilio Inc.","response":"# Media Streams - WebSocket Messages\n\n## Support for Twilio Regions\n\nMedia Streams is now available in the Ireland (IE1) and Australia (AU1) Regions.\n\n- For outbound calls, [follow the guide for outbound calls in non-US Regions](https://www.twilio.com/docs/global-infrastructure/create-an-outbound-call-via-rest-api-in-a-non-us-twilio-region).\n- For inbound calls, [follow the guide for inbound call processing in non-US Regions](https://www.twilio.com/docs/global-infrastructure/inbound-call-processing).\n- For more info on Twilio Regions, [visit the Global Infrastructure docs](https://www.twilio.com/docs/global-infrastructure).\n\nDuring a [Media Stream](https://www.twilio.com/docs/voice/media-streams), Twilio sends messages to your WebSocket server that provide information about the Stream. For [bidirectional Media Streams](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams), your server can also send messages back to Twilio.\n\nThis page covers each type of message that your WebSocket server can send and receive when using Media Streams.\n\n## WebSocket Messages from Twilio\n\nTwilio sends the following message types to your WebSocket server during a Stream:\n\n- [Connected](#connected-message)\n- [Start](#start-message)\n- [Media](#media-message)\n- [DTMF](#dtmf-message)\n- [Stop](#stop-message)\n- [Mark](#mark-message) (bidirectional Streams only)\n\n### Connected Message\n\nTwilio sends the `connected` event once a WebSocket connection is established. This is the first message your WebSocket server receives, and this message describes the protocol to expect in the following messages.\n\n| Property   | Description                                           |\n|------------|-------------------------------------------------------|\n| `event`    | Describes the type of WebSocket message. In this case, `connected`. |\n| `protocol` | Defines the protocol for the WebSocket connection's lifetime.       |\n| `version`  | Semantic version of the protocol.                                  |\n\nAn example `connected` message is shown below.\n\n```json\n{\n  \"event\": \"connected\",\n  \"protocol\": \"Call\",\n  \"version\": \"1.0.0\"\n}\n```\n\n### Start Message\n\nThe `start` message contains metadata about the Stream and is sent immediately after the `connected` message. It is only sent once at the start of the Stream.\n\n| Property           | Description                                                    |\n|--------------------|----------------------------------------------------------------|\n| `event`            | Describes the type of WebSocket message. In this case, `start`.|\n| `sequenceNumber`   | Number used to keep track of message sending order. The first message has a value of `1` and then is incremented for each subsequent message. |\n| `start`            | An object containing Stream metadata                           |\n| `start.streamSid`  | The unique identifier of the Stream                            |\n| `start.accountSid` | The SID of the Account that created the Stream                 |\n| `start.callSid`    | The SID of the Call that started the Stream                    |\n| `start.tracks`     | An array of strings that indicate which media flows are expected in subsequent messages. Values include `inbound`, `outbound`. |\n| `start.customParameters` | An object containing the custom parameters that were set when defining the Stream |\n| `start.mediaFormat`| An object containing the format of the payload in the `media` messages.|\n| `start.mediaFormat.encoding` | The encoding of the data in the upcoming payload. Value is always `audio/x-mulaw`.|\n| `start.mediaFormat.sampleRate`| The sample rate in hertz of the upcoming audio data. Value is always `8000` |\n| `start.mediaFormat.channels` | The number of channels in the input audio data. Value is always `1` |\n| `streamSid`         | The unique identifier of the Stream                          |\n\nAn example `start` message is shown below.\n\n```json\n{\n  \"event\": \"start\",\n  \"sequenceNumber\": \"1\",\n  \"start\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"tracks\": [\"inbound\"],\n    \"mediaFormat\": {\n      \"encoding\": \"audio/x-mulaw\",\n      \"sampleRate\": 8000,\n      \"channels\": 1\n    },\n    \"customParameters\": {\n      \"FirstName\": \"Jane\",\n      \"LastName\": \"Doe\",\n      \"RemoteParty\": \"Bob\"\n    }\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Media Message\n\nThis message type encapsulates the raw audio data.\n\n| Property          | Description                                                 |\n|-------------------|-------------------------------------------------------------|\n| `event`           | Describes the type of WebSocket message. In this case, `\"media\"`.|\n| `sequenceNumber`  | Number used to keep track of message sending order. It increments for each subsequent message. |\n| `media`           | An object containing media metadata and payload            |\n| `media.track`     | One of `inbound` or `outbound`                             |\n| `media.chunk`     | The chunk for the message. The first message will begin with `1` and increment with each subsequent message. |\n| `media.timestamp` | Presentation Timestamp in Milliseconds from the start of the stream. |\n| `media.payload`   | Raw audio in encoded in base64                             |\n| `streamSid`       | The unique identifier of the Stream                        |\n\nAn example `outbound` media message is shown below. The `payload` value is abbreviated.\n\n```json\n{\n  \"event\": \"media\",\n  \"sequenceNumber\": \"3\",\n  \"media\": {\n    \"track\": \"outbound\",\n    \"chunk\": \"1\",\n    \"timestamp\": \"5\",\n    \"payload\": \"no+JhoaJjpz...\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\nAn example `inbound` media message is shown below. The `payload` value is abbreviated.\n\n```json\n{\n  \"event\": \"media\",\n  \"sequenceNumber\": \"4\",\n  \"media\": {\n    \"track\": \"inbound\",\n    \"chunk\": \"2\",\n    \"timestamp\": \"5\",\n    \"payload\": \"no+JhoaJjpzS...\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Stop Message\n\nTwilio sends a `stop` message when the Stream has stopped or the call has ended.\n\n| Property          | Description                                                 |\n|-------------------|-------------------------------------------------------------|\n| `event`           | Describes the type of WebSocket message. In this case, `stop`. |\n| `sequenceNumber`  | Number used to keep track of message sending order. It increments for each subsequent message. |\n| `stop`            | An object containing Stream metadata                       |\n| `stop.accountSid` | The Account identifier that created the Stream             |\n| `stop.callSid`    | The Call identifier that started the Stream                |\n| `streamSid`       | The unique identifier of the Stream                        |\n\nAn example `stop` message is shown below.\n\n```json\n{\n  \"event\": \"stop\",\n  \"sequenceNumber\": \"5\",\n  \"stop\": {\n    \"accountSid\": \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"callSid\": \"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n  },\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### DTMF Message\n\nThe `dtmf` message is currently only supported in [bidirectional Streams](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams).\n\n| Property  | Description                                                |\n|-----------|------------------------------------------------------------|\n| `event`   | Describes the type of WebSocket message. In this case, `dtmf`.|\n| `streamSid` | The unique identifier of the Stream                        |\n| `sequenceNumber` | Number used to keep track of message sending order.  |\n| `dtmf.track` | The track on which the DTMF key was pressed. Its is always `inbound_track` |\n| `dtmf.digit`| The number-key tone detected                             |\n\nAn example `dtmf` message is shown below. The `dtmf.digit` value is `1`, indicating that someone pressed the `1` key on their handset.\n\n```json\n{\n  \"event\": \"dtmf\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"sequenceNumber\": \"5\",\n  \"dtmf\": {\n    \"track\": \"inbound_track\",\n    \"digit\": \"1\"\n  }\n}\n```\n\n### Mark Message\n\nTwilio sends the `mark` event only during [bidirectional Streams](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams).\n\n| Property    | Description                                              |\n|-------------|----------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case, `\"mark\"`.|\n| `streamSid` | The unique identifier of the Stream                      |\n| `sequenceNumber` | Number used to keep track of message sending order.  |\n| `mark`      | An object containing the mark metadata                   |\n| `mark.name` | A custom value. Twilio sends back the `mark.name` you specify when it receives a `mark` message |\n\nAn example `mark` message is shown below.\n\n```json\n{\n  \"event\": \"mark\",\n  \"sequenceNumber\": \"4\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"mark\": {\n    \"name\": \"my label\"\n  }\n}\n```\n\n## Send WebSocket Messages to Twilio\n\nIf you initiated a Stream using `<Connect><Stream>`, your Stream is [bidirectional](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams). This means you can send WebSocket messages back to Twilio, allowing you to pipe audio back into the Call and control the flow of the Stream.\n\nThe messages that your WebSocket server can send back to Twilio are:\n\n- [Media](#send-a-media-message)\n- [Mark](#send-a-mark-message)\n- [Clear](#send-a-clear-message)\n\n### Send a Media Message\n\nTo send media back to Twilio, you must provide a properly formatted `media` message.\n\n| Property    | Description                                                  |\n|-------------|--------------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case, `\"media\"`. |\n| `streamSid` | The SID of the Stream that should play the audio             |\n| `media`     | An object containing the media payload                       |\n| `media.payload` | Raw `mulaw/8000` audio in encoded in base64               |\n\nBelow is an example `media` message that your WebSocket server sends back to Twilio. The `media.payload` is abbreviated.\n\n```json\n{\n  \"event\": \"media\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"media\": {\n    \"payload\": \"a3242sa...\"\n  }\n}\n```\n\n### Send a Mark Message\n\nSend a `mark` event message after sending a [`media` event message](https://www.twilio.com/docs/voice/media-streams/websocket-messages#send-a-media-message) to be notified when the audio that you have sent has been completed.\n\n| Property    | Description                                           |\n|-------------|-------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case `\"mark\"`. |\n| `streamSid` | The SID of the Stream that should receive the mark    |\n| `mark`      | An object containing mark metadata and payload        |\n| `mark.name` | A name specific to your needs that will assist in recognizing future received `mark` event |\n\nBelow is an example `mark` message that your WebSocket server sends to Twilio.\n\n```json\n{\n  \"event\": \"mark\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"mark\": {\n    \"name\": \"my label\"\n  }\n}\n```\n\n### Send a Clear Message\n\nSend a `clear` message if you want to interrupt the audio that has been sent in various `media` messages. This empties all buffered audio and causes any `mark` messages to be sent back to your WebSocket server.\n\n| Property    | Description                                            |\n|-------------|--------------------------------------------------------|\n| `event`     | Describes the type of WebSocket message. In this case, `\"clear\"`. |\n| `streamSid` | The SID of the Stream in which you wish to interrupt the audio. |\n\nBelow is an example `clear` message that your WebSocket server sends to Twilio.\n\n```json\n{\n  \"event\": \"clear\",\n  \"streamSid\": \"MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n## Need Some Help?\n\nWe all do sometimes; code is hard. Get help now from our [support team](https://help.twilio.com), or lean on the wisdom of the crowd by visiting Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio) or browsing the [Twilio tag](https://stackoverflow.com/questions/tagged/twilio) on Stack Overflow.\n\n[Terms of Service](https://www.twilio.com/en-us/legal/tos) | [Privacy Policy](https://www.twilio.com/en-us/legal/privacy)\n\nCopyright © 2024 Twilio Inc."}
{"timestamp":"2024-11-07 16:30:02.499","prompt":"twilio-media-streams-websocket-messages-documentation","response":"twilio-media-streams-websocket-messages-documentation"}
{"timestamp":"2024-11-07 16:30:45.590","prompt":"# Twilio Programmable Voice Documentation\n\n## Getting Started\n\n- [No-code quickstart](https://www.twilio.com/docs/voice/quickstart/no-code-voice-studio-quickstart)\n- Language-specific quickstarts:\n  - [C#/.NET](https://www.twilio.com/docs/voice/quickstart/csharp)\n  - [Java](https://www.twilio.com/docs/voice/quickstart/java)\n  - [Node.js](https://www.twilio.com/docs/voice/quickstart/node)\n  - [PHP](https://www.twilio.com/docs/voice/quickstart/php)\n  - [Python](https://www.twilio.com/docs/voice/quickstart/python)\n  - [Ruby](https://www.twilio.com/docs/voice/quickstart/ruby)\n  - [Go](https://www.twilio.com/docs/voice/quickstart/go)\n  - [Android SDK](https://www.twilio.com/docs/voice/sdks/android/get-started)\n  - [iOS SDK (Objective-C and Swift)](https://www.twilio.com/docs/voice/sdks/ios/get-started)\n  - [JavaScript SDK](https://www.twilio.com/docs/voice/sdks/javascript/get-started)\n  - [React Native SDK](https://www.twilio.com/docs/voice/sdks/react-native/getting-started-with-the-voice-react-native-sdk)\n\n## Tutorials\n\n- [Make outbound phone calls](https://www.twilio.com/docs/voice/tutorials/how-to-make-outbound-phone-calls)\n- [Respond to incoming phone calls](https://www.twilio.com/docs/voice/tutorials/how-to-respond-to-incoming-phone-calls)\n- [Modify calls in progress](https://www.twilio.com/docs/voice/tutorials/how-to-modify-calls-in-progress)\n- [Record phone calls](https://www.twilio.com/docs/voice/tutorials/how-to-record-phone-calls)\n- [Create conference calls](https://www.twilio.com/docs/voice/tutorials/how-to-create-conference-calls)\n- [Gather user input via keypad](https://www.twilio.com/docs/voice/tutorials/how-to-gather-user-input-via-keypad)\n- [Retrieve call logs](https://www.twilio.com/docs/voice/tutorials/how-to-retrieve-call-logs)\n\n## Media Streams\n\n### Overview\n\nMedia Streams allows access to the raw audio stream of your Programmable Voice calls via WebSockets. Use cases include real-time transcriptions, sentiment analysis, and integrations with AI chat bots.\n\n### Support for Twilio Regions\n\nAvailable in Ireland (IE1) and Australia (AU1) Regions for both inbound and outbound calls.\n\n### Unidirectional Media Streams\n\n- Only receives a Call's audio stream.\n- Use `<Start><Stream>` TwiML instructions or the [Stream resource API](https://www.twilio.com/docs/voice/api/stream-resource) to initiate.\n- Not supported for sending DTMF from your server to Twilio.\n\n### Bidirectional Media Streams\n\n- Allows receiving and sending audio to/from Twilio.\n- Starts using `<Connect><Stream>` in TwiML.\n- Supports DTMF in the inbound direction only.\n\n### Limits\n\n- Unidirectional: Up to four tracks.\n- Bidirectional: One Stream per Call.\n\n### Communicate with Twilio's Media Servers\n\nEnsure secure WebSocket connections from Twilio are allowed and validate `X-Twilio-Signature` for authenticity.\n\n## Resources\n\n- [Stream TwiML Reference](https://www.twilio.com/docs/voice/twiml/stream)\n- [WebSocket Messages](https://www.twilio.com/docs/voice/media-streams/websocket-messages)\n- [Sample GitHub Repos](https://github.com/twilio/media-streams)\n\n## Need Help?\n\nAccess support via [Twilio's support team](https://help.twilio.com) or engage with the community on [Twilio's Stack Overflow Collective](https://stackoverflow.com/collectives/twilio).","response":"# Twilio Programmable Voice Documentation\n\n## Getting Started\n\n- [No-code quickstart](https://www.twilio.com/docs/voice/quickstart/no-code-voice-studio-quickstart)\n- Language-specific quickstarts:\n  - [C#/.NET](https://www.twilio.com/docs/voice/quickstart/csharp)\n  - [Java](https://www.twilio.com/docs/voice/quickstart/java)\n  - [Node.js](https://www.twilio.com/docs/voice/quickstart/node)\n  - [PHP](https://www.twilio.com/docs/voice/quickstart/php)\n  - [Python](https://www.twilio.com/docs/voice/quickstart/python)\n  - [Ruby](https://www.twilio.com/docs/voice/quickstart/ruby)\n  - [Go](https://www.twilio.com/docs/voice/quickstart/go)\n  - [Android SDK](https://www.twilio.com/docs/voice/sdks/android/get-started)\n  - [iOS SDK (Objective-C and Swift)](https://www.twilio.com/docs/voice/sdks/ios/get-started)\n  - [JavaScript SDK](https://www.twilio.com/docs/voice/sdks/javascript/get-started)\n  - [React Native SDK](https://www.twilio.com/docs/voice/sdks/react-native/getting-started-with-the-voice-react-native-sdk)\n\n## Tutorials\n\n- [Make outbound phone calls](https://www.twilio.com/docs/voice/tutorials/how-to-make-outbound-phone-calls)\n- [Respond to incoming phone calls](https://www.twilio.com/docs/voice/tutorials/how-to-respond-to-incoming-phone-calls)\n- [Modify calls in progress](https://www.twilio.com/docs/voice/tutorials/how-to-modify-calls-in-progress)\n- [Record phone calls](https://www.twilio.com/docs/voice/tutorials/how-to-record-phone-calls)\n- [Create conference calls](https://www.twilio.com/docs/voice/tutorials/how-to-create-conference-calls)\n- [Gather user input via keypad](https://www.twilio.com/docs/voice/tutorials/how-to-gather-user-input-via-keypad)\n- [Retrieve call logs](https://www.twilio.com/docs/voice/tutorials/how-to-retrieve-call-logs)\n\n## Media Streams\n\n### Overview\n\nMedia Streams allows access to the raw audio stream of your Programmable Voice calls via WebSockets. Use cases include real-time transcriptions, sentiment analysis, and integrations with AI chat bots.\n\n### Support for Twilio Regions\n\nAvailable in Ireland (IE1) and Australia (AU1) Regions for both inbound and outbound calls.\n\n### Unidirectional Media Streams\n\n- Only receives a Call's audio stream.\n- Use `<Start><Stream>` TwiML instructions or the [Stream resource API](https://www.twilio.com/docs/voice/api/stream-resource) to initiate.\n- Not supported for sending DTMF from your server to Twilio.\n\n### Bidirectional Media Streams\n\n- Allows receiving and sending audio to/from Twilio.\n- Starts using `<Connect><Stream>` in TwiML.\n- Supports DTMF in the inbound direction only.\n\n### Limits\n\n- Unidirectional: Up to four tracks.\n- Bidirectional: One Stream per Call.\n\n### Communicate with Twilio's Media Servers\n\nEnsure secure WebSocket connections from Twilio are allowed and validate `X-Twilio-Signature` for authenticity.\n\n## Resources\n\n- [Stream TwiML Reference](https://www.twilio.com/docs/voice/twiml/stream)\n- [WebSocket Messages](https://www.twilio.com/docs/voice/media-streams/websocket-messages)\n- [Sample GitHub Repos](https://github.com/twilio/media-streams)\n\n## Need Help?\n\nAccess support via [Twilio's support team](https://help.twilio.com) or engage with the community on [Twilio's Stack Overflow Collective](https://stackoverflow.com/collectives/twilio)."}
{"timestamp":"2024-11-07 16:30:47.214","prompt":"Twilio_Programmable_Voice_Full_Documentation_and_Tutorials","response":"Twilio_Programmable_Voice_Full_Documentation_and_Tutorials"}
{"timestamp":"2024-11-07 16:31:24.470","prompt":"# TwiML™️ Voice: `<Stream>`\n\nThe `<Stream>` TwiML noun is used with `<Start>` or `<Connect>`. When Twilio executes `<Start><Stream>` or `<Connect><Stream>`, it forks the raw audio stream and streams it to your WebSocket server in near real-time.\n\n- For more about Media Streams, [visit the overview page](https://www.twilio.com/docs/voice/media-streams).\n\n- `<Start><Stream>` creates a [unidirectional Stream](https://www.twilio.com/docs/voice/media-streams#unidirectional-media-streams).\n- `<Connect><Stream>` creates a [bidirectional Stream](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams).\n\n## Examples\n\n### Start a MediaStream\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nstart.stream({\n  name: 'Example Audio Stream',\n  url: 'wss://example.com/audiostream',\n});\nresponse.say('The stream has started.');\n\nconsole.log(response.toString());\n```\n\n#### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream name=\"Example Audio Stream\" url=\"wss://example.com/audiostream\" />\n    </Start>\n    <Say>The stream has started.</Say>\n</Response>\n```\n\n### Connect to a bidirectional MediaStream\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst connect = response.connect();\nconnect.stream({ url: 'wss://example.com/audiostream' });\nresponse.say('This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.');\n\nconsole.log(response.toString());\n```\n\n#### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n   <Connect>\n       <Stream url=\"wss://example.com/audiostream\" />\n   </Connect>\n   <Say>This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.</Say>\n</Response>\n```\n\n## Attributes\n\n`<Stream>` supports the following attributes:\n\n- **url**: A relative or absolute URL. Default value is none. Only `wss` protocol is supported.\n- **name**: Optional. Unique name for the Stream. Default value is none.\n- **track**: Optional. Possible values: `inbound_track`, `outbound_track`, `both_tracks`. Default is `inbound_track`.\n- **statusCallback**: Optional. URL for status callbacks. Default value is none.\n- **statusCallbackMethod**: Optional. HTTP methods: `GET` or `POST`. Default is `POST`.\n\n## Custom Parameters\n\nInclude additional key-value pairs using the `<Parameter>` TwiML noun.\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nconst stream = start.stream({\n    url: 'wss://mystream.ngrok.io/example'\n});\nstream.parameter({\n    name: 'FirstName',\n    value: 'Jane'\n});\nstream.parameter({\n    name: 'LastName',\n    value: 'Doe'\n});\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream url=\"wss://mystream.ngrok.io/example\">\n            <Parameter name=\"FirstName\" value=\"Jane\" />\n            <Parameter name=\"LastName\" value=\"Doe\" />\n        </Stream>\n    </Start>\n</Response>\n```\n\n## Stop a Stream\n\nUse the `<Stop>` TwiML verb to stop a Stream by `name`.\n\n```xml\n<Stop>\n   <Stream name=\"my_first_stream\" />\n</Stop>\n```\n\nTo stop a unidirectional Stream via API, visit the [Stream resource API reference page](https://www.twilio.com/docs/voice/api/stream-resource).\n\n---\n\n## Need some help?\n\nGet help from [our support team](https://help.twilio.com) or visit Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio).\n\n---\n\n**Legal Notices**\n\n- [Terms of service](https://www.twilio.com/en-us/legal/tos)\n- [Privacy Policy](https://www.twilio.com/en-us/legal/privacy)\n\nopyright © 2024 Twilio Inc.","response":"# TwiML™️ Voice: `<Stream>`\n\nThe `<Stream>` TwiML noun is used with `<Start>` or `<Connect>`. When Twilio executes `<Start><Stream>` or `<Connect><Stream>`, it forks the raw audio stream and streams it to your WebSocket server in near real-time.\n\n- For more about Media Streams, [visit the overview page](https://www.twilio.com/docs/voice/media-streams).\n\n- `<Start><Stream>` creates a [unidirectional Stream](https://www.twilio.com/docs/voice/media-streams#unidirectional-media-streams).\n- `<Connect><Stream>` creates a [bidirectional Stream](https://www.twilio.com/docs/voice/media-streams#bidirectional-media-streams).\n\n## Examples\n\n### Start a MediaStream\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nstart.stream({\n  name: 'Example Audio Stream',\n  url: 'wss://example.com/audiostream',\n});\nresponse.say('The stream has started.');\n\nconsole.log(response.toString());\n```\n\n#### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream name=\"Example Audio Stream\" url=\"wss://example.com/audiostream\" />\n    </Start>\n    <Say>The stream has started.</Say>\n</Response>\n```\n\n### Connect to a bidirectional MediaStream\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst connect = response.connect();\nconnect.stream({ url: 'wss://example.com/audiostream' });\nresponse.say('This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.');\n\nconsole.log(response.toString());\n```\n\n#### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n   <Connect>\n       <Stream url=\"wss://example.com/audiostream\" />\n   </Connect>\n   <Say>This TwiML instruction is unreachable unless the Stream is ended by your WebSocket server.</Say>\n</Response>\n```\n\n## Attributes\n\n`<Stream>` supports the following attributes:\n\n- **url**: A relative or absolute URL. Default value is none. Only `wss` protocol is supported.\n- **name**: Optional. Unique name for the Stream. Default value is none.\n- **track**: Optional. Possible values: `inbound_track`, `outbound_track`, `both_tracks`. Default is `inbound_track`.\n- **statusCallback**: Optional. URL for status callbacks. Default value is none.\n- **statusCallbackMethod**: Optional. HTTP methods: `GET` or `POST`. Default is `POST`.\n\n## Custom Parameters\n\nInclude additional key-value pairs using the `<Parameter>` TwiML noun.\n\n```javascript\nconst VoiceResponse = require('twilio').twiml.VoiceResponse;\n\nconst response = new VoiceResponse();\nconst start = response.start();\nconst stream = start.stream({\n    url: 'wss://mystream.ngrok.io/example'\n});\nstream.parameter({\n    name: 'FirstName',\n    value: 'Jane'\n});\nstream.parameter({\n    name: 'LastName',\n    value: 'Doe'\n});\n\nconsole.log(response.toString());\n```\n\n### Output\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Start>\n        <Stream url=\"wss://mystream.ngrok.io/example\">\n            <Parameter name=\"FirstName\" value=\"Jane\" />\n            <Parameter name=\"LastName\" value=\"Doe\" />\n        </Stream>\n    </Start>\n</Response>\n```\n\n## Stop a Stream\n\nUse the `<Stop>` TwiML verb to stop a Stream by `name`.\n\n```xml\n<Stop>\n   <Stream name=\"my_first_stream\" />\n</Stop>\n```\n\nTo stop a unidirectional Stream via API, visit the [Stream resource API reference page](https://www.twilio.com/docs/voice/api/stream-resource).\n\n---\n\n## Need some help?\n\nGet help from [our support team](https://help.twilio.com) or visit Twilio's [Stack Overflow Collective](https://stackoverflow.com/collectives/twilio).\n\n---\n\n**Legal Notices**\n\n- [Terms of service](https://www.twilio.com/en-us/legal/tos)\n- [Privacy Policy](https://www.twilio.com/en-us/legal/privacy)\n\nopyright © 2024 Twilio Inc."}
{"timestamp":"2024-11-07 16:31:25.582","prompt":"twiml_voice_stream_documentation_with_examples_and_attributes","response":"twiml_voice_stream_documentation_with_examples_and_attributes"}
{"timestamp":"2024-11-07 16:35:26.523","prompt":"# OpenAI API Documentation: Real-time API\n\n## Introduction\n\nYou can interact with the OpenAI API via HTTP requests, using official Python bindings, an official Node.js library, or other community-maintained libraries. Here's how you can install the official libraries:\n\n- **Python**: \n  ```sh\n  pip install openai\n  ```\n\n- **Node.js**: \n  ```sh\n  npm install openai\n  ```\n\n## Authentication\n\n### API Keys\n\nThe OpenAI API utilizes API keys for authentication. API keys can be managed at a user or service account level. Secure your API keys and do not expose them publicly. Use an environment variable or a key management service to load your keys on your backend server.\n\nTo authenticate requests, include your API key in the `Authorization` HTTP header:\n```http\nAuthorization: Bearer OPENAI_API_KEY\n```\n\nFor users in multiple organizations or using legacy keys, specify the organization and project in your request headers. \n\nExample of using `curl` for authorization with project and organization IDs:\n```sh\ncurl https://api.openai.com/v1/models \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Organization: YOUR_ORG_ID\" \\\n  -H \"OpenAI-Project: $PROJECT_ID\"\n```\n\nExample using the Python package:\n```python\nfrom openai import OpenAI\n\nclient = OpenAI(\n  organization='YOUR_ORG_ID',\n  project='$PROJECT_ID',\n)\n```\n\nExample using the Node.js package:\n```javascript\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI({\n    organization: \"YOUR_ORG_ID\",\n    project: \"$PROJECT_ID\",\n});\n```\n\n## Making Requests\n\nYou can execute API requests using `curl`, as shown in this example:\n```sh\ncurl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n     \"model\": \"gpt-4o-mini\",\n     \"messages\": [{\"role\": \"user\", \"content\": \"Say this is a test!\"}],\n     \"temperature\": 0.7\n   }'\n```\n\nThis request queries a model to complete the text after the prompt \"Say this is a test\".\n\n## Streaming\n\nOpenAI API supports streaming responses which allow partial results delivery. The service follows the Server-sent events standard. Official libraries for Node.js and Python facilitate parsing these streaming data.\n\nPython streaming example:\n```python\nfrom openai import OpenAI\n\nclient = OpenAI()\n\nstream = client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Say this is a test\"}],\n    stream=True,\n)\nfor chunk in stream:\n    if chunk.choices[0].delta.content is not None:\n        print(chunk.choices[0].delta.content, end=\"\")\n```\n\nNode.js streaming example:\n```javascript\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI();\n\nasync function main() {\n    const stream = await openai.chat.completions.create({\n        model: \"gpt-4o-mini\",\n        messages: [{ role: \"user\", content: \"Say this is a test\" }],\n        stream: true,\n    });\n    for await (const chunk of stream) {\n        process.stdout.write(chunk.choices[0]?.delta?.content || \"\");\n    }\n}\n\nmain();\n```\n\n## Debugging Requests\n\nInspect HTTP response headers to debug requests. Headers include organization info, processing time, API version, unique request ID, and rate limiting details. \n\nLog request IDs from production requests for efficient troubleshooting.\n\nPython to access request ID:\n```python\nfrom openai import OpenAI\nclient = OpenAI()\n\nresponse = client.chat.completions.create(\n    messages=[{\n        \"role\": \"user\",\n        \"content\": \"Say this is a test\",\n    }],\n    model=\"gpt-4o-mini\",\n)\n\nprint(response._request_id)\n```\n\nJavaScript to access request ID:\n```javascript\nimport OpenAI from 'openai';\nconst client = new OpenAI();\n\nconst response = await client.chat.completions.create({\n    messages: [{ role: 'user', content: 'Say this is a test' }],\n    model: 'gpt-4o-mini'\n});\n\nconsole.log(response._request_id);\n```\n\n## Access Raw Response Objects\n\nFor accessing raw HTTP responses in SDKs:\n\n- **Python**:\n  ```python\n  from openai import OpenAI\n  client = OpenAI()\n\n  response = client.chat.completions.with_raw_response.create(\n      messages=[{\n          \"role\": \"user\",\n          \"content\": \"Say this is a test\",\n      }],\n      model=\"gpt-4o-mini\",\n  )\n  print(response.headers.get('x-ratelimit-limit-tokens'))\n  ```\n\n- **JavaScript**:\n  ```javascript\n  import OpenAI from 'openai';\n  const client = new OpenAI();\n\n  const response = await client.chat.completions.create({\n      messages: [{ role: 'user', content: 'Say this is a test' }],\n      model: 'gpt-4o-mini'\n  }).asResponse();\n\n  console.log(response.headers.get('x-ratelimit-limit-tokens'));\n  ```\n\nThis documentation provides an overview of using the OpenAI API with best practices for authentication, request making, streaming responses, debugging, and accessing raw headers.","response":"# OpenAI API Documentation: Real-time API\n\n## Introduction\n\nYou can interact with the OpenAI API via HTTP requests, using official Python bindings, an official Node.js library, or other community-maintained libraries. Here's how you can install the official libraries:\n\n- **Python**: \n  ```sh\n  pip install openai\n  ```\n\n- **Node.js**: \n  ```sh\n  npm install openai\n  ```\n\n## Authentication\n\n### API Keys\n\nThe OpenAI API utilizes API keys for authentication. API keys can be managed at a user or service account level. Secure your API keys and do not expose them publicly. Use an environment variable or a key management service to load your keys on your backend server.\n\nTo authenticate requests, include your API key in the `Authorization` HTTP header:\n```http\nAuthorization: Bearer OPENAI_API_KEY\n```\n\nFor users in multiple organizations or using legacy keys, specify the organization and project in your request headers. \n\nExample of using `curl` for authorization with project and organization IDs:\n```sh\ncurl https://api.openai.com/v1/models \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Organization: YOUR_ORG_ID\" \\\n  -H \"OpenAI-Project: $PROJECT_ID\"\n```\n\nExample using the Python package:\n```python\nfrom openai import OpenAI\n\nclient = OpenAI(\n  organization='YOUR_ORG_ID',\n  project='$PROJECT_ID',\n)\n```\n\nExample using the Node.js package:\n```javascript\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI({\n    organization: \"YOUR_ORG_ID\",\n    project: \"$PROJECT_ID\",\n});\n```\n\n## Making Requests\n\nYou can execute API requests using `curl`, as shown in this example:\n```sh\ncurl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n     \"model\": \"gpt-4o-mini\",\n     \"messages\": [{\"role\": \"user\", \"content\": \"Say this is a test!\"}],\n     \"temperature\": 0.7\n   }'\n```\n\nThis request queries a model to complete the text after the prompt \"Say this is a test\".\n\n## Streaming\n\nOpenAI API supports streaming responses which allow partial results delivery. The service follows the Server-sent events standard. Official libraries for Node.js and Python facilitate parsing these streaming data.\n\nPython streaming example:\n```python\nfrom openai import OpenAI\n\nclient = OpenAI()\n\nstream = client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Say this is a test\"}],\n    stream=True,\n)\nfor chunk in stream:\n    if chunk.choices[0].delta.content is not None:\n        print(chunk.choices[0].delta.content, end=\"\")\n```\n\nNode.js streaming example:\n```javascript\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI();\n\nasync function main() {\n    const stream = await openai.chat.completions.create({\n        model: \"gpt-4o-mini\",\n        messages: [{ role: \"user\", content: \"Say this is a test\" }],\n        stream: true,\n    });\n    for await (const chunk of stream) {\n        process.stdout.write(chunk.choices[0]?.delta?.content || \"\");\n    }\n}\n\nmain();\n```\n\n## Debugging Requests\n\nInspect HTTP response headers to debug requests. Headers include organization info, processing time, API version, unique request ID, and rate limiting details. \n\nLog request IDs from production requests for efficient troubleshooting.\n\nPython to access request ID:\n```python\nfrom openai import OpenAI\nclient = OpenAI()\n\nresponse = client.chat.completions.create(\n    messages=[{\n        \"role\": \"user\",\n        \"content\": \"Say this is a test\",\n    }],\n    model=\"gpt-4o-mini\",\n)\n\nprint(response._request_id)\n```\n\nJavaScript to access request ID:\n```javascript\nimport OpenAI from 'openai';\nconst client = new OpenAI();\n\nconst response = await client.chat.completions.create({\n    messages: [{ role: 'user', content: 'Say this is a test' }],\n    model: 'gpt-4o-mini'\n});\n\nconsole.log(response._request_id);\n```\n\n## Access Raw Response Objects\n\nFor accessing raw HTTP responses in SDKs:\n\n- **Python**:\n  ```python\n  from openai import OpenAI\n  client = OpenAI()\n\n  response = client.chat.completions.with_raw_response.create(\n      messages=[{\n          \"role\": \"user\",\n          \"content\": \"Say this is a test\",\n      }],\n      model=\"gpt-4o-mini\",\n  )\n  print(response.headers.get('x-ratelimit-limit-tokens'))\n  ```\n\n- **JavaScript**:\n  ```javascript\n  import OpenAI from 'openai';\n  const client = new OpenAI();\n\n  const response = await client.chat.completions.create({\n      messages: [{ role: 'user', content: 'Say this is a test' }],\n      model: 'gpt-4o-mini'\n  }).asResponse();\n\n  console.log(response.headers.get('x-ratelimit-limit-tokens'));\n  ```\n\nThis documentation provides an overview of using the OpenAI API with best practices for authentication, request making, streaming responses, debugging, and accessing raw headers."}
{"timestamp":"2024-11-07 16:35:57.162","prompt":"# Real-time API Documentation\n\n## Batch Object\n\nThe Batch Object represents a batch of requests. Important fields include timestamps for different stages, counts of request statuses, and metadata for additional information.\n\nExample Batch Object:\n\n```json\n{\n  \"id\": \"batch_abc123\",\n  \"object\": \"batch\",\n  \"endpoint\": \"/v1/completions\",\n  \"errors\": null,\n  \"input_file_id\": \"file-abc123\",\n  \"completion_window\": \"24h\",\n  \"status\": \"completed\",\n  \"output_file_id\": \"file-cvaTdG\",\n  \"error_file_id\": \"file-HOWS94\",\n  \"created_at\": 1711471533,\n  \"in_progress_at\": 1711471538,\n  \"expires_at\": 1711557933,\n  \"finalizing_at\": 1711493133,\n  \"completed_at\": 1711493163,\n  \"failed_at\": null,\n  \"expired_at\": null,\n  \"cancelling_at\": null,\n  \"cancelled_at\": null,\n  \"request_counts\": {\n    \"total\": 100,\n    \"completed\": 95,\n    \"failed\": 5\n  },\n  \"metadata\": {\n    \"customer_id\": \"user_123456789\",\n    \"batch_description\": \"Nightly eval job\"\n  }\n}\n```\n\n## Request Input Object\n\nDescribes the input for a batch. Important fields include a developer-provided ID, HTTP method, and URL.\n\nExample Request Input Object:\n\n```json\n{\n  \"custom_id\": \"request-1\",\n  \"method\": \"POST\",\n  \"url\": \"/v1/chat/completions\",\n  \"body\": {\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [\n      {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n      {\"role\": \"user\", \"content\": \"What is 2+2?\"}\n    ]\n  }\n}\n```\n\n## Request Output Object\n\nRepresents the output for a request in a batch. Includes an ID, a developer-provided custom ID, response details, and error information.\n\nExample Request Output Object:\n\n```json\n{\n  \"id\": \"batch_req_wnaDys\",\n  \"custom_id\": \"request-2\",\n  \"response\": {\n    \"status_code\": 200,\n    \"request_id\": \"req_c187b3\",\n    \"body\": {\n      \"id\": \"chatcmpl-9758Iw\",\n      \"object\": \"chat.completion\",\n      \"created\": 1711475054,\n      \"model\": \"gpt-4o-mini\",\n      \"choices\": [\n        {\n          \"index\": 0,\n          \"message\": {\"role\": \"assistant\", \"content\": \"2 + 2 equals 4.\"},\n          \"finish_reason\": \"stop\"\n        }\n      ],\n      \"usage\": {\"prompt_tokens\": 24, \"completion_tokens\": 15, \"total_tokens\": 39},\n      \"system_fingerprint\": null\n    }\n  },\n  \"error\": null\n}\n```\n\n## Files\n\nDescribes operations related to file uploads and management within the API.\n\n### Upload File\n\nEndpoint to upload files for various purposes like assistants or fine-tuning.\n\n```plaintext\nPOST https://api.openai.com/v1/files\n```\n\n**Request parameters include:**\n\n- **file**: Required. The file to be uploaded.\n- **purpose**: Required. The intended purpose, such as \"assistants\", \"batch\", or \"fine-tune\".\n\n### Example Upload Request\n\nExample using `curl`:\n\n```sh\ncurl https://api.openai.com/v1/files \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -F purpose=\"fine-tune\" \\\n  -F file=\"@mydata.jsonl\"\n```\n\n### List Files\n\nEndpoint to retrieve a list of files.\n\n```plaintext\nGET https://api.openai.com/v1/files\n```\n\n### Retrieve File\n\nEndpoint to get details about a specific file.\n\n```plaintext\nGET https://api.openai.com/v1/files/{file_id}\n```\n\n### Delete File\n\nEndpoint to delete a file.\n\n```plaintext\nDELETE https://api.openai.com/v1/files/{file_id}\n```\n\n### Example Delete Request\n\nExample using `curl`:\n\n```sh\ncurl https://api.openai.com/v1/files/file-abc123 \\\n  -X DELETE \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\"\n```\n\n### File Object\n\nDescribes an uploaded file in the system.\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"file\",\n  \"bytes\": 120000,\n  \"created_at\": 1677610602,\n  \"filename\": \"mydata.jsonl\",\n  \"purpose\": \"fine-tune\"\n}\n```\n\n## Uploads\n\nFor handling large files in multiple parts.\n\n### Create Upload\n\nCreates an intermediate object to which parts can be added.\n\n```plaintext\nPOST https://api.openai.com/v1/uploads\n```\n\n### Add Upload Part\n\nAdds a part to the upload.\n\n### Complete Upload\n\nFinalizes the upload operation, creating a usable file object.\n\n### Cancel Upload\n\nCancels an upload operation.\n\n### Upload Part Object\n\nDescribes a chunk that is part of a larger upload operation.\n\n### Upload Object\n\nRepresents the overall upload process with details like status and file information.\n\n```json\n{\n  \"id\": \"upload_abc123\",\n  \"object\": \"upload\",\n  \"bytes\": 2147483648,\n  \"created_at\": 1719184911,\n  \"filename\": \"training_examples.jsonl\",\n  \"purpose\": \"fine-tune\",\n  \"status\": \"completed\"\n}\n```\n\n## Moderations\n\nClassifies if text or image inputs are potentially harmful.\n\n### Create Moderation\n\nIssues a classification request.\n\n```plaintext\nPOST https://api.openai.com/v1/moderations\n```\n\nExample request for text moderation:\n\n```sh\ncurl https://api.openai.com/v1/moderations \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\"input\": \"I want to kill them.\"}'\n```\n\n## Assistants\n\n**Beta:** Build assistants that can use models and tools to accomplish tasks.\n\n### Create Assistant\n\nCreates an assistant with specified models and instructions.\n\n```plaintext\nPOST https://api.openai.com/v1/assistants\n```\n\n### Modify Assistant\n\nModifies existing assistant settings.\n\n### Delete Assistant\n\nDeletes an assistant.\n\n### Assistant Object\n\nDescribes an assistant, including model, tools, instructions, and metadata.\n\n```json\n{\n  \"id\": \"asst_abc123\",\n  \"object\": \"assistant\",\n  \"created_at\": 1698984975,\n  \"name\": \"Math Tutor\",\n  \"model\": \"gpt-4o\",\n  \"instructions\": \"You are a personal math tutor. When asked a question, write and run Python code to answer.\",\n  \"tools\": [\n    {\"type\": \"code_interpreter\"}\n  ],\n  \"metadata\": {},\n  \"top_p\": 1.0,\n  \"temperature\": 1.0,\n  \"response_format\": \"auto\"\n}\n```\n\n## Threads\n\n**Beta:** Create threads for assistants to interact with.\n\n### Thread Object\n\nRepresents a thread containing messages.\n\n### Create Thread\n\nInitiates a thread.\n\n### Retrieve Thread\n\nRetrieves an existing thread by ID.\n\n### Modify Thread\n\nUpdates specific details of a thread.\n\n### Delete Thread\n\nRemoves a thread.\n\n## Messages\n\n**Beta:** Manage messages within threads.\n\n### Create Message\n\nAdds a message to a thread.\n\n### Retrieve Message\n\nGets a specific message from a thread.\n\n### Modify Message\n\nAlters existing message details.","response":"# Real-time API Documentation\n\n## Batch Object\n\nThe Batch Object represents a batch of requests. Important fields include timestamps for different stages, counts of request statuses, and metadata for additional information.\n\nExample Batch Object:\n\n```json\n{\n  \"id\": \"batch_abc123\",\n  \"object\": \"batch\",\n  \"endpoint\": \"/v1/completions\",\n  \"errors\": null,\n  \"input_file_id\": \"file-abc123\",\n  \"completion_window\": \"24h\",\n  \"status\": \"completed\",\n  \"output_file_id\": \"file-cvaTdG\",\n  \"error_file_id\": \"file-HOWS94\",\n  \"created_at\": 1711471533,\n  \"in_progress_at\": 1711471538,\n  \"expires_at\": 1711557933,\n  \"finalizing_at\": 1711493133,\n  \"completed_at\": 1711493163,\n  \"failed_at\": null,\n  \"expired_at\": null,\n  \"cancelling_at\": null,\n  \"cancelled_at\": null,\n  \"request_counts\": {\n    \"total\": 100,\n    \"completed\": 95,\n    \"failed\": 5\n  },\n  \"metadata\": {\n    \"customer_id\": \"user_123456789\",\n    \"batch_description\": \"Nightly eval job\"\n  }\n}\n```\n\n## Request Input Object\n\nDescribes the input for a batch. Important fields include a developer-provided ID, HTTP method, and URL.\n\nExample Request Input Object:\n\n```json\n{\n  \"custom_id\": \"request-1\",\n  \"method\": \"POST\",\n  \"url\": \"/v1/chat/completions\",\n  \"body\": {\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [\n      {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n      {\"role\": \"user\", \"content\": \"What is 2+2?\"}\n    ]\n  }\n}\n```\n\n## Request Output Object\n\nRepresents the output for a request in a batch. Includes an ID, a developer-provided custom ID, response details, and error information.\n\nExample Request Output Object:\n\n```json\n{\n  \"id\": \"batch_req_wnaDys\",\n  \"custom_id\": \"request-2\",\n  \"response\": {\n    \"status_code\": 200,\n    \"request_id\": \"req_c187b3\",\n    \"body\": {\n      \"id\": \"chatcmpl-9758Iw\",\n      \"object\": \"chat.completion\",\n      \"created\": 1711475054,\n      \"model\": \"gpt-4o-mini\",\n      \"choices\": [\n        {\n          \"index\": 0,\n          \"message\": {\"role\": \"assistant\", \"content\": \"2 + 2 equals 4.\"},\n          \"finish_reason\": \"stop\"\n        }\n      ],\n      \"usage\": {\"prompt_tokens\": 24, \"completion_tokens\": 15, \"total_tokens\": 39},\n      \"system_fingerprint\": null\n    }\n  },\n  \"error\": null\n}\n```\n\n## Files\n\nDescribes operations related to file uploads and management within the API.\n\n### Upload File\n\nEndpoint to upload files for various purposes like assistants or fine-tuning.\n\n```plaintext\nPOST https://api.openai.com/v1/files\n```\n\n**Request parameters include:**\n\n- **file**: Required. The file to be uploaded.\n- **purpose**: Required. The intended purpose, such as \"assistants\", \"batch\", or \"fine-tune\".\n\n### Example Upload Request\n\nExample using `curl`:\n\n```sh\ncurl https://api.openai.com/v1/files \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -F purpose=\"fine-tune\" \\\n  -F file=\"@mydata.jsonl\"\n```\n\n### List Files\n\nEndpoint to retrieve a list of files.\n\n```plaintext\nGET https://api.openai.com/v1/files\n```\n\n### Retrieve File\n\nEndpoint to get details about a specific file.\n\n```plaintext\nGET https://api.openai.com/v1/files/{file_id}\n```\n\n### Delete File\n\nEndpoint to delete a file.\n\n```plaintext\nDELETE https://api.openai.com/v1/files/{file_id}\n```\n\n### Example Delete Request\n\nExample using `curl`:\n\n```sh\ncurl https://api.openai.com/v1/files/file-abc123 \\\n  -X DELETE \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\"\n```\n\n### File Object\n\nDescribes an uploaded file in the system.\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"file\",\n  \"bytes\": 120000,\n  \"created_at\": 1677610602,\n  \"filename\": \"mydata.jsonl\",\n  \"purpose\": \"fine-tune\"\n}\n```\n\n## Uploads\n\nFor handling large files in multiple parts.\n\n### Create Upload\n\nCreates an intermediate object to which parts can be added.\n\n```plaintext\nPOST https://api.openai.com/v1/uploads\n```\n\n### Add Upload Part\n\nAdds a part to the upload.\n\n### Complete Upload\n\nFinalizes the upload operation, creating a usable file object.\n\n### Cancel Upload\n\nCancels an upload operation.\n\n### Upload Part Object\n\nDescribes a chunk that is part of a larger upload operation.\n\n### Upload Object\n\nRepresents the overall upload process with details like status and file information.\n\n```json\n{\n  \"id\": \"upload_abc123\",\n  \"object\": \"upload\",\n  \"bytes\": 2147483648,\n  \"created_at\": 1719184911,\n  \"filename\": \"training_examples.jsonl\",\n  \"purpose\": \"fine-tune\",\n  \"status\": \"completed\"\n}\n```\n\n## Moderations\n\nClassifies if text or image inputs are potentially harmful.\n\n### Create Moderation\n\nIssues a classification request.\n\n```plaintext\nPOST https://api.openai.com/v1/moderations\n```\n\nExample request for text moderation:\n\n```sh\ncurl https://api.openai.com/v1/moderations \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\"input\": \"I want to kill them.\"}'\n```\n\n## Assistants\n\n**Beta:** Build assistants that can use models and tools to accomplish tasks.\n\n### Create Assistant\n\nCreates an assistant with specified models and instructions.\n\n```plaintext\nPOST https://api.openai.com/v1/assistants\n```\n\n### Modify Assistant\n\nModifies existing assistant settings.\n\n### Delete Assistant\n\nDeletes an assistant.\n\n### Assistant Object\n\nDescribes an assistant, including model, tools, instructions, and metadata.\n\n```json\n{\n  \"id\": \"asst_abc123\",\n  \"object\": \"assistant\",\n  \"created_at\": 1698984975,\n  \"name\": \"Math Tutor\",\n  \"model\": \"gpt-4o\",\n  \"instructions\": \"You are a personal math tutor. When asked a question, write and run Python code to answer.\",\n  \"tools\": [\n    {\"type\": \"code_interpreter\"}\n  ],\n  \"metadata\": {},\n  \"top_p\": 1.0,\n  \"temperature\": 1.0,\n  \"response_format\": \"auto\"\n}\n```\n\n## Threads\n\n**Beta:** Create threads for assistants to interact with.\n\n### Thread Object\n\nRepresents a thread containing messages.\n\n### Create Thread\n\nInitiates a thread.\n\n### Retrieve Thread\n\nRetrieves an existing thread by ID.\n\n### Modify Thread\n\nUpdates specific details of a thread.\n\n### Delete Thread\n\nRemoves a thread.\n\n## Messages\n\n**Beta:** Manage messages within threads.\n\n### Create Message\n\nAdds a message to a thread.\n\n### Retrieve Message\n\nGets a specific message from a thread.\n\n### Modify Message\n\nAlters existing message details."}
{"timestamp":"2024-11-07 16:41:01.109","prompt":"```markdown\n## Delete Message (Beta)\n\n**Endpoint:**  \n`DELETE https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}`\n\nDeletes a message.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread to which this message belongs.\n- `message_id` (string, Required): The ID of the message to delete.\n\n### Returns\n\n- Deletion status.\n\n### Example Request (cURL)\n\n```bash\ncurl -X DELETE https://api.openai.com/v1/threads/thread_abc123/messages/msg_abc123 \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"msg_abc123\",\n  \"object\": \"thread.message.deleted\",\n  \"deleted\": true\n}\n```\n\n## The Message Object (Beta)\n\nRepresents a message within a thread.\n\n### Properties\n\n- `id` (string): The identifier, used in API endpoints.\n- `object` (string): The object type, always `thread.message`.\n- `created_at` (integer): Unix timestamp of message creation.\n- `thread_id` (string): The ID of the thread that this message belongs to.\n- `status` (string): Status of the message: `in_progress`, `incomplete`, or `completed`.\n- `incomplete_details` (object or null): Details about why the message is incomplete.\n- `completed_at` (integer or null): Unix timestamp when the message was completed.\n- `incomplete_at` (integer or null): Unix timestamp when the message was marked as incomplete.\n- `role` (string): Entity that produced the message, either `user` or `assistant`.\n- `content` (array): Array of text and/or images.\n- `assistant_id` (string or null): ID of the assistant that authored this message, if applicable.\n- `run_id` (string or null): ID of the run associated with the message creation.\n- `attachments` (array or null): List of files attached to the message.\n- `metadata` (map): Key-value pairs for additional information, with keys up to 64 characters and values up to 512 characters.\n\n### Example of Message Object\n\n```json\n{\n  \"id\": \"msg_abc123\",\n  \"object\": \"thread.message\",\n  \"created_at\": 1698983503,\n  \"thread_id\": \"thread_abc123\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"value\": \"Hi! How can I help you today?\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"assistant_id\": \"asst_abc123\",\n  \"run_id\": \"run_abc123\",\n  \"attachments\": [],\n  \"metadata\": {}\n}\n```\n```markdown\n## Create Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs`\n\nCreates a new execution run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n\n### Query Parameters\n\n- `include[]` (array, Optional): Additional fields to include. Supports `step_details.tool_calls[*].file_search.results[*].content`.\n\n### Request Body\n\n- `assistant_id` (string, Required): The ID of the assistant to use.\n- `model` (string, Optional): The model ID to override the assistant's model.\n- `instructions` (string or null, Optional): Override assistant instructions.\n- `additional_instructions` (string or null, Optional): Append instructions for the run.\n- `additional_messages` (array or null, Optional): Additional messages for the thread before the run.\n- `tools` (array or null, Optional): Override assistant's tools for the run.\n- `metadata` (map, Optional): Structured additional information.\n- `temperature` (number or null, Optional, Defaults to 1): Sampling temperature.\n- `top_p` (number or null, Optional, Defaults to 1): Nucleus sampling probability mass.\n- `stream` (boolean or null, Optional): Returns server-sent event streams if true.\n- `max_prompt_tokens` (integer or null, Optional): Max number of prompt tokens.\n- `max_completion_tokens` (integer or null, Optional): Max number of completion tokens.\n- `truncation_strategy` (object, Optional): Controls run context initialization.\n- `tool_choice` (string or object, Optional): Tool call control strategy.\n- `parallel_tool_calls` (boolean, Optional, Defaults to true): Enables parallel function calling.\n- `response_format` (\"auto\" or object, Optional): Specifies model output format.\n\n### Returns\n\n- A run object\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"assistant_id\": \"asst_abc123\"\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699063290,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"queued\",\n  \"started_at\": 1699063290,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699063291,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"incomplete_details\": null,\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"metadata\": {},\n  \"usage\": null,\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n\n## Create Thread and Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/runs`\n\nCreates a thread and runs it in one request.\n\n### Request Body\n\n- `assistant_id` (string, Required): The ID of the assistant to use.\n- `thread` (object, Optional): Thread object with messages.\n- `model` (string, Optional): Model ID to override the assistant's default model.\n- `instructions` (string or null, Optional): Override the assistant's default system message.\n- `tools` (array or null, Optional): Override tools for the run.\n- `tool_resources` (object or null, Optional): Resources required by the assistant's tools.\n- `metadata` (map, Optional): Structured additional information.\n- `temperature` (number or null, Optional, Defaults to 1): Sampling temperature.\n- `top_p` (number or null, Optional, Defaults to 1): Nucleus sampling probability mass.\n- `stream` (boolean or null, Optional): Stream server-sent events if true.\n- `max_prompt_tokens` (integer or null, Optional): Max prompt tokens.\n- `max_completion_tokens` (integer or null, Optional): Max completion tokens.\n- `truncation_strategy` (object, Optional): Controls thread truncation strategy.\n- `tool_choice` (string or object, Optional): Tool call control strategy.\n- `parallel_tool_calls` (boolean, Optional, Defaults to true): Enable parallel function calling.\n- `response_format` (\"auto\" or object, Optional): Specifies model output format.\n\n### Returns\n\n- A run object\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n      \"assistant_id\": \"asst_abc123\",\n      \"thread\": {\n        \"messages\": [\n          {\"role\": \"user\", \"content\": \"Explain deep learning to a 5 year old.\"}\n        ]\n      }\n    }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699076792,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"queued\",\n  \"started_at\": null,\n  \"expires_at\": 1699077392,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": null,\n  \"required_action\": null,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": \"You are a helpful assistant.\",\n  \"tools\": [],\n  \"tool_resources\": {},\n  \"metadata\": {},\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_completion_tokens\": null,\n  \"max_prompt_tokens\": null,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"incomplete_details\": null,\n  \"usage\": null,\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## List Runs (Beta)\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs`\n\nReturns a list of runs for a thread.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n\n### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination, defines starting point.\n- `before` (string, Optional): Cursor for pagination, defines ending point.\n\n### Returns\n\n- A list of run objects.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"run_abc123\",\n      \"object\": \"thread.run\",\n      \"created_at\": 1699075072,\n      \"assistant_id\": \"asst_abc123\",\n      \"thread_id\": \"thread_abc123\",\n      \"status\": \"completed\",\n      \"started_at\": 1699075072,\n      \"expires_at\": null,\n      \"cancelled_at\": null,\n      \"failed_at\": null,\n      \"completed_at\": 1699075073,\n      \"last_error\": null,\n      \"model\": \"gpt-4o\",\n      \"instructions\": null,\n      \"incomplete_details\": null,\n      \"tools\": [\n        {\n          \"type\": \"code_interpreter\"\n        }\n      ],\n      \"tool_resources\": {\n        \"code_interpreter\": {\n          \"file_ids\": [\n            \"file-abc123\",\n            \"file-abc456\"\n          ]\n        }\n      },\n      \"metadata\": {},\n      \"usage\": {\n        \"prompt_tokens\": 123,\n        \"completion_tokens\": 456,\n        \"total_tokens\": 579\n      },\n      \"temperature\": 1.0,\n      \"top_p\": 1.0,\n      \"max_prompt_tokens\": 1000,\n      \"max_completion_tokens\": 1000,\n      \"truncation_strategy\": {\n        \"type\": \"auto\",\n        \"last_messages\": null\n      },\n      \"response_format\": \"auto\",\n      \"tool_choice\": \"auto\",\n      \"parallel_tool_calls\": true\n    }\n  ],\n  \"first_id\": \"run_abc123\",\n  \"last_id\": \"run_abc456\",\n  \"has_more\": false\n}\n```\n```markdown\n## Retrieve Run (Beta)\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}`\n\nRetrieves a specific run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run.\n\n### Returns\n\n- The run object matching the specified ID.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699075072,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"completed\",\n  \"started_at\": 1699075072,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699075073,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"incomplete_details\": null,\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"metadata\": {},\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  },\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Modify Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}`\n\nModifies an existing run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run to modify.\n\n### Request Body\n\n- `metadata` (map, Optional): Key-value pairs for additional information, with keys up to 64 characters and values up to 512 characters.\n\n### Returns\n\n- The modified run object.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"metadata\": {\n      \"user_id\": \"user_abc123\"\n    }\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699075072,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"completed\",\n  \"started_at\": 1699075072,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699075073,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"incomplete_details\": null,\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"tool_resources\": {\n    \"code_interpreter\": {\n      \"file_ids\": [\n        \"file-abc123\",\n        \"file-abc456\"\n      ]\n    }\n  },\n  \"metadata\": {\n    \"user_id\": \"user_abc123\"\n  },\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  },\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Submit Tool Outputs to Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/submit_tool_outputs`\n\nSubmits the outputs from tool calls once completed, if the run has `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run requiring the tool output submission.\n\n### Request Body\n\n- `tool_outputs` (array, Required): A list of tools with their outputs.\n\n- `stream` (boolean or null, Optional): If `true`, returns a stream of events during the run, ending with a `data: [DONE]` message.\n\n### Returns\n\n- The modified run object.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_123/runs/run_123/submit_tool_outputs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"tool_outputs\": [\n      {\n        \"tool_call_id\": \"call_001\",\n        \"output\": \"70 degrees and sunny.\"\n      }\n    ]\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699075592,\n  \"assistant_id\": \"asst_123\",\n  \"thread_id\": \"thread_123\",\n  \"status\": \"queued\",\n  \"started_at\": 1699075592,\n  \"expires_at\": 1699076192,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": null,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"tools\": [\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"get_current_weather\",\n        \"description\": \"Get the current weather in a given location\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"location\": {\n              \"type\": \"string\",\n              \"description\": \"The city and state, e.g., San Francisco, CA\"\n            },\n            \"unit\": {\n              \"type\": \"string\",\n              \"enum\": [\"celsius\", \"fahrenheit\"]\n            }\n          },\n          \"required\": [\"location\"]\n        }\n      }\n    }\n  ],\n  \"metadata\": {},\n  \"usage\": null,\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Cancel a Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/cancel`\n\nCancels an in-progress run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run to cancel.\n\n### Returns\n\n- The modified run object reflecting the cancellation.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123/cancel \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X POST\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699076126,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"cancelling\",\n  \"started_at\": 1699076126,\n  \"expires_at\": 1699076726,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": null,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": \"You summarize books.\",\n  \"tools\": [\n    {\n      \"type\": \"file_search\"\n    }\n  ],\n  \"tool_resources\": {\n    \"file_search\": {\n      \"vector_store_ids\": [\"vs_123\"]\n    }\n  },\n  \"metadata\": {},\n  \"usage\": null,\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## The Run Object (Beta)\n\nRepresents an execution run on a thread.\n\n### Properties\n\n- `id` (string): The identifier, used in API endpoints.\n- `object` (string): The object type, always `thread.run`.\n- `created_at` (integer): Unix timestamp when the run was created.\n- `thread_id` (string): The ID of the thread executed on this run.\n- `assistant_id` (string): The ID of the assistant used.\n- `status` (string): Status of the run: `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, `incomplete`, or `expired`.\n- `required_action` (object or null): Action required to continue, null if none.\n- `last_error` (object or null): Last error associated with this run.\n- `expires_at` (integer or null): Unix timestamp when the run will expire.\n- `started_at` (integer or null): Unix timestamp when the run started.\n- `cancelled_at` (integer or null): Unix timestamp when the run was cancelled.\n- `failed_at` (integer or null): Unix timestamp when the run failed.\n- `completed_at` (integer or null): Unix timestamp when the run completed.\n- `incomplete_details` (object or null): Details on why the run is incomplete.\n- `model` (string): The model used for this run.\n- `instructions` (string): Instructions used by the assistant.\n- `tools` (array): List of tools used during the run.\n- `metadata` (map): Key-value pairs for additional information.\n- `usage` (object or null): Usage statistics, null if not in a terminal state.\n- `temperature` (number or null): Sampling temperature, defaults to 1.\n- `top_p` (number or null): Nucleus sampling value, defaults to 1.\n- `max_prompt_tokens` (integer or null): Max number of prompt tokens used.\n- `max_completion_tokens` (integer or null): Max number of completion tokens used.\n- `truncation_strategy` (object): Controls initial context window of the run.\n- `tool_choice` (string or object): Controls tool calling strategy.\n- `parallel_tool_calls` (boolean): Parallel function calling during tool use.\n- `response_format` (\"auto\" or object): Format of model output.\n\n### Example Run Object\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1698107661,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"completed\",\n  \"started_at\": 1699073476,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699073498,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"tools\": [{\"type\": \"file_search\"}, {\"type\": \"code_interpreter\"}],\n  \"metadata\": {},\n  \"incomplete_details\": null,\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  },\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Run Steps (Beta)\n\nRepresents the steps (model and tool calls) taken during the run.\n\n### List Run Steps\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/steps`\n\nReturns a list of run steps for a run.\n\n#### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run.\n\n#### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination, defines starting point.\n- `before` (string, Optional): Cursor for pagination, defines ending point.\n- `include[]` (array, Optional): Additional fields to include, supports `step_details.tool_calls[*].file_search.results[*].content`.\n\n#### Returns\n\n- A list of run step objects.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123/steps \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"step_abc123\",\n      \"object\": \"thread.run.step\",\n      \"created_at\": 1699063291,\n      \"run_id\": \"run_abc123\",\n      \"assistant_id\": \"asst_abc123\",\n      \"thread_id\": \"thread_abc123\",\n      \"type\": \"message_creation\",\n      \"status\": \"completed\",\n      \"cancelled_at\": null,\n      \"completed_at\": 1699063291,\n      \"expired_at\": null,\n      \"failed_at\": null,\n      \"last_error\": null,\n      \"step_details\": {\n        \"type\": \"message_creation\",\n        \"message_creation\": {\n          \"message_id\": \"msg_abc123\"\n        }\n      },\n      \"usage\": {\n        \"prompt_tokens\": 123,\n        \"completion_tokens\": 456,\n        \"total_tokens\": 579\n      }\n    }\n  ],\n  \"first_id\": \"step_abc123\",\n  \"last_id\": \"step_abc456\",\n  \"has_more\": false\n}\n```\n\n### Retrieve Run Step\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/steps/{step_id}`\n\nRetrieves a specific run step.\n\n#### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run.\n- `step_id` (string, Required): The ID of the run step.\n\n#### Query Parameters\n\n- `include[]` (array, Optional): Additional fields to include, supports `step_details.tool_calls[*].file_search.results[*].content`.\n\n#### Returns\n\n- The run step object matching the specified ID.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123/steps/step_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"step_abc123\",\n  \"object\": \"thread.run.step\",\n  \"created_at\": 1699063291,\n  \"run_id\": \"run_abc123\",\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"type\": \"message_creation\",\n  \"status\": \"completed\",\n  \"cancelled_at\": null,\n  \"completed_at\": 1699063291,\n  \"expired_at\": null,\n  \"failed_at\": null,\n  \"last_error\": null,\n  \"step_details\": {\n    \"type\": \"message_creation\",\n    \"message_creation\": {\n      \"message_id\": \"msg_abc123\"\n    }\n  },\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  }\n}\n```\n```markdown\n## The Run Step Object (Beta)\n\nRepresents a step in the execution of a run.\n\n### Properties\n\n- `id` (string): Identifier of the run step.\n- `object` (string): The object type, always `thread.run.step`.\n- `created_at` (integer): Unix timestamp when the run step was created.\n- `assistant_id` (string): The ID of the assistant associated with the run step.\n- `thread_id` (string): The ID of the thread that was run.\n- `run_id` (string): The ID of the run this step is part of.\n- `type` (string): Type of run step: `message_creation` or `tool_calls`.\n- `status` (string): Status of the run step: `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.\n- `step_details` (object): Details of the run step.\n- `last_error` (object or null): The last error associated with this step.\n- `expired_at` (integer or null): Unix timestamp when the step expired.\n- `cancelled_at` (integer or null): Unix timestamp when the step was cancelled.\n- `failed_at` (integer or null): Unix timestamp when the step failed.\n- `completed_at` (integer or null): Unix timestamp when the step completed.\n- `metadata` (map): Key-value pairs for additional information.\n- `usage` (object or null): Usage statistics, null if the status is `in_progress`.\n\n### Example Run Step Object\n\n```json\n{\n  \"id\": \"step_abc123\",\n  \"object\": \"thread.run.step\",\n  \"created_at\": 1699063291,\n  \"run_id\": \"run_abc123\",\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"type\": \"message_creation\",\n  \"status\": \"completed\",\n  \"cancelled_at\": null,\n  \"completed_at\": 1699063291,\n  \"expired_at\": null,\n  \"failed_at\": null,\n  \"last_error\": null,\n  \"step_details\": {\n    \"type\": \"message_creation\",\n    \"message_creation\": {\n      \"message_id\": \"msg_abc123\"\n    }\n  },\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  }\n}\n```\n```markdown\n## Vector Stores (Beta)\n\nVector stores are collections of processed files used with the `file_search` tool.\n\n### Create Vector Store\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores`\n\nCreates a vector store.\n\n#### Request Body\n\n- `file_ids` (array, Optional): List of file IDs that the vector store should use.\n- `name` (string, Optional): Name of the vector store.\n- `expires_after` (object, Optional): Expiration policy for the vector store.\n- `chunking_strategy` (object, Optional): Strategy for chunking files.\n- `metadata` (map, Optional): Key-value pairs for additional information.\n\n#### Returns\n\n- A vector store object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"name\": \"Support FAQ\"\n  }'\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1699061776,\n  \"name\": \"Support FAQ\",\n  \"bytes\": 139920,\n  \"file_counts\": {\n    \"in_progress\": 0,\n    \"completed\": 3,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 3\n  }\n}\n```\n\n### List Vector Stores\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores`\n\nReturns a list of vector stores.\n\n#### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination, defines starting point.\n- `before` (string, Optional): Cursor for pagination, defines ending point.\n\n#### Returns\n\n- A list of vector store objects.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"vs_abc123\",\n      \"object\": \"vector_store\",\n      \"created_at\": 1699061776,\n      \"name\": \"Support FAQ\",\n      \"bytes\": 139920,\n      \"file_counts\": {\n        \"in_progress\": 0,\n        \"completed\": 3,\n        \"failed\": 0,\n        \"cancelled\": 0,\n        \"total\": 3\n      }\n    },\n    {\n      \"id\": \"vs_abc456\",\n      \"object\": \"vector_store\",\n      \"created_at\": 1699061776,\n      \"name\": \"Support FAQ v2\",\n      \"bytes\": 139920,\n      \"file_counts\": {\n        \"in_progress\": 0,\n        \"completed\": 3,\n        \"failed\": 0,\n        \"cancelled\": 0,\n        \"total\": 3\n      }\n    }\n  ],\n  \"first_id\": \"vs_abc123\",\n  \"last_id\": \"vs_abc456\",\n  \"has_more\": false\n}\n```\n```markdown\n## Retrieve Vector Store (Beta)\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}`\n\nRetrieves a vector store.\n\n### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n### Returns\n\n- The vector store object matching the specified ID.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1699061776\n}\n```\n\n## Modify Vector Store (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}`\n\nModifies an existing vector store.\n\n### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n### Request Body\n\n- `name` (string or null, Optional): The name of the vector store.\n- `expires_after` (object, Optional): Expiration policy for the vector store.\n- `metadata` (map, Optional): Key-value pairs for additional information.\n\n### Returns\n\n- The modified vector store object.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"name\": \"Support FAQ\"\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1699061776,\n  \"name\": \"Support FAQ\",\n  \"bytes\": 139920,\n  \"file_counts\": {\n    \"in_progress\": 0,\n    \"completed\": 3,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 3\n  }\n}\n```\n\n## Delete Vector Store (Beta)\n\n**Endpoint:**  \n`DELETE https://api.openai.com/v1/vector_stores/{vector_store_id}`\n\nDeletes a vector store.\n\n### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store to delete.\n\n### Returns\n\n- Deletion status.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X DELETE\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store.deleted\",\n  \"deleted\": true\n}\n```\n\n## The Vector Store Object (Beta)\n\nA vector store is a collection of processed files used by the `file_search` tool.\n\n### Properties\n\n- `id` (string): Identifier used in API endpoints.\n- `object` (string): The object type, always `vector_store`.\n- `created_at` (integer): Unix timestamp when the vector store was created.\n- `name` (string): Name of the vector store.\n- `usage_bytes` (integer): Total bytes used by files in the store.\n- `file_counts` (object): Number of files in different states.\n- `status` (string): Status of the store: `expired`, `in_progress`, or `completed`.\n- `expires_after` (object): Expiration policy of the store.\n- `expires_at` (integer or null): Unix timestamp when the store will expire.\n- `last_active_at` (integer or null): Last active timestamp.\n- `metadata` (map): Key-value pairs for additional information.\n\n### Example Vector Store Object\n\n```json\n{\n  \"id\": \"vs_123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1698107661,\n  \"usage_bytes\": 123456,\n  \"last_active_at\": 1698107661,\n  \"name\": \"my_vector_store\",\n  \"status\": \"completed\",\n  \"file_counts\": {\n    \"in_progress\": 0,\n    \"completed\": 100,\n    \"cancelled\": 0,\n    \"failed\": 0,\n    \"total\": 100\n  },\n  \"metadata\": {},\n  \"last_used_at\": 1698107661\n}\n```\n```markdown\n## Vector Store Files (Beta)\n\nVector store files represent files inside a vector store.\n\n### Create Vector Store File\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}/files`\n\nAttaches a file to a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n#### Request Body\n\n- `file_id` (string, Required): The file ID to attach.\n- `chunking_strategy` (object, Optional): Strategy for chunking files.\n\n#### Returns\n\n- A vector store file object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"file_id\": \"file-abc123\"\n  }'\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file\",\n  \"created_at\": 1699061776,\n  \"usage_bytes\": 1234,\n  \"vector_store_id\": \"vs_abcd\",\n  \"status\": \"completed\",\n  \"last_error\": null\n}\n```\n\n### List Vector Store Files\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}/files`\n\nReturns a list of files within a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n#### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination.\n- `before` (string, Optional): Cursor for pagination.\n- `filter` (string, Optional): Filter by file status: `in_progress`, `completed`, `failed`, `cancelled`.\n\n#### Returns\n\n- A list of vector store file objects.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"file-abc123\",\n      \"object\": \"vector_store.file\",\n      \"created_at\": 1699061776,\n      \"vector_store_id\": \"vs_abc123\"\n    },\n    {\n      \"id\": \"file-abc456\",\n      \"object\": \"vector_store.file\",\n      \"created_at\": 1699061776,\n      \"vector_store_id\": \"vs_abc123\"\n    }\n  ],\n  \"first_id\": \"file-abc123\",\n  \"last_id\": \"file-abc456\",\n  \"has_more\": false\n}\n```\n\n### Retrieve Vector Store File\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}/files/{file_id}`\n\nRetrieves a specific file from a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n- `file_id` (string, Required): The ID of the file.\n\n#### Returns\n\n- The vector store file object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files/file-abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abcd\",\n  \"status\": \"completed\",\n  \"last_error\": null\n}\n```\n\n### Delete Vector Store File\n\n**Endpoint:**  \n`DELETE https://api.openai.com/v1/vector_stores/{vector_store_id}/files/{file_id}`\n\nDeletes a file from a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n- `file_id` (string, Required): The ID of the file to delete.\n\n#### Returns\n\n- Deletion status.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files/file-abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X DELETE\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file.deleted\",\n  \"deleted\": true\n}\n```\n\n## The Vector Store File Object (Beta)\n\nDetails for a file attached to a vector store.\n\n### Properties\n\n- `id` (string): Identifier of the file.\n- `object` (string): The object type, always `vector_store.file`.\n- `usage_bytes` (integer): Total bytes used by the vector store file.\n- `created_at` (integer): Unix timestamp when the file was created.\n- `vector_store_id` (string): The vector store's ID that the file belongs to.\n- `status` (string): Status of the file: `in_progress`, `completed`, `cancelled`, or `failed`.\n- `last_error` (object or null): Last error related to the file, null if no errors.\n- `chunking_strategy` (object): File chunking strategy used.\n\n### Example Vector Store File Object\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file\",\n  \"usage_bytes\": 1234,\n  \"created_at\": 1698107661,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"completed\",\n  \"last_error\": null,\n  \"chunking_strategy\": {\n    \"type\": \"static\",\n    \"static\": {\n      \"max_chunk_size_tokens\": 800,\n      \"chunk_overlap_tokens\": 400\n    }\n  }\n}\n```\n```markdown\n## Vector Store File Batches (Beta)\n\nVector store file batches represent operations to add multiple files to a vector store.\n\n### Create Vector Store File Batch\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}/file_batches`\n\nCreates a batch of files to add to a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The vector store's ID.\n\n#### Request Body\n\n- `file_ids` (array, Required): List of file IDs to add.\n- `chunking_strategy` (object, Optional): Strategy for chunking files.\n\n#### Returns\n\n- A vector store file batch object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/file_batches \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"file_ids\": [\"file-abc123\", \"file-abc456\"]\n  }'\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vsfb_abc123\",\n  \"object\": \"vector_store.file_batch\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"in_progress\",\n  \"file_counts\": {\n    \"in_progress\": 1,\n    \"completed\": 1,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 0\n  }\n}\n```\n\n### Retrieve Vector Store File Batch\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}/file_batches/{batch_id}`\n\nRetrieves a batch of files from a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The vector store's ID.\n- `batch_id` (string, Required): The batch ID.\n\n#### Returns\n\n- The vector store file batch object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files_batches/vsfb_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vsfb_abc123\",\n  \"object\": \"vector_store.file_batch\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"in_progress\",\n  \"file_counts\": {\n    \"in_progress\": 1,\n    \"completed\": 1,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 0\n  }\n}\n```\n\n### Cancel Vector Store File Batch\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}/file_batches/{batch_id}/cancel`\n\nCancels a file batch process for a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The vector store's ID.\n- `batch_id` (string, Required): The batch ID to cancel.\n\n#### Returns\n\n- The modified vector store file batch object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files_batches/vsfb_abc123/cancel \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X POST\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vsfb_abc123\",\n  \"object\": \"vector_store.file_batch\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"cancelling\",\n  \"file_counts\": {\n    \"in_progress\": 12,\n    \"completed\": 3,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 15\n  }\n}\n```\n```markdown\n## List Vector Store Files in a Batch (Beta)\n\n**Note:** This section appears incomplete in your document content. Please provide the necessary information and context for the retrieval process related to listing vector store files in a batch. For accurate document authoring, consider including endpoint details, path parameters, query parameters, and expected outputs for future updates.\n```\n","response":"```markdown\n## Delete Message (Beta)\n\n**Endpoint:**  \n`DELETE https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}`\n\nDeletes a message.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread to which this message belongs.\n- `message_id` (string, Required): The ID of the message to delete.\n\n### Returns\n\n- Deletion status.\n\n### Example Request (cURL)\n\n```bash\ncurl -X DELETE https://api.openai.com/v1/threads/thread_abc123/messages/msg_abc123 \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"msg_abc123\",\n  \"object\": \"thread.message.deleted\",\n  \"deleted\": true\n}\n```\n\n## The Message Object (Beta)\n\nRepresents a message within a thread.\n\n### Properties\n\n- `id` (string): The identifier, used in API endpoints.\n- `object` (string): The object type, always `thread.message`.\n- `created_at` (integer): Unix timestamp of message creation.\n- `thread_id` (string): The ID of the thread that this message belongs to.\n- `status` (string): Status of the message: `in_progress`, `incomplete`, or `completed`.\n- `incomplete_details` (object or null): Details about why the message is incomplete.\n- `completed_at` (integer or null): Unix timestamp when the message was completed.\n- `incomplete_at` (integer or null): Unix timestamp when the message was marked as incomplete.\n- `role` (string): Entity that produced the message, either `user` or `assistant`.\n- `content` (array): Array of text and/or images.\n- `assistant_id` (string or null): ID of the assistant that authored this message, if applicable.\n- `run_id` (string or null): ID of the run associated with the message creation.\n- `attachments` (array or null): List of files attached to the message.\n- `metadata` (map): Key-value pairs for additional information, with keys up to 64 characters and values up to 512 characters.\n\n### Example of Message Object\n\n```json\n{\n  \"id\": \"msg_abc123\",\n  \"object\": \"thread.message\",\n  \"created_at\": 1698983503,\n  \"thread_id\": \"thread_abc123\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"value\": \"Hi! How can I help you today?\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"assistant_id\": \"asst_abc123\",\n  \"run_id\": \"run_abc123\",\n  \"attachments\": [],\n  \"metadata\": {}\n}\n```\n```markdown\n## Create Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs`\n\nCreates a new execution run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n\n### Query Parameters\n\n- `include[]` (array, Optional): Additional fields to include. Supports `step_details.tool_calls[*].file_search.results[*].content`.\n\n### Request Body\n\n- `assistant_id` (string, Required): The ID of the assistant to use.\n- `model` (string, Optional): The model ID to override the assistant's model.\n- `instructions` (string or null, Optional): Override assistant instructions.\n- `additional_instructions` (string or null, Optional): Append instructions for the run.\n- `additional_messages` (array or null, Optional): Additional messages for the thread before the run.\n- `tools` (array or null, Optional): Override assistant's tools for the run.\n- `metadata` (map, Optional): Structured additional information.\n- `temperature` (number or null, Optional, Defaults to 1): Sampling temperature.\n- `top_p` (number or null, Optional, Defaults to 1): Nucleus sampling probability mass.\n- `stream` (boolean or null, Optional): Returns server-sent event streams if true.\n- `max_prompt_tokens` (integer or null, Optional): Max number of prompt tokens.\n- `max_completion_tokens` (integer or null, Optional): Max number of completion tokens.\n- `truncation_strategy` (object, Optional): Controls run context initialization.\n- `tool_choice` (string or object, Optional): Tool call control strategy.\n- `parallel_tool_calls` (boolean, Optional, Defaults to true): Enables parallel function calling.\n- `response_format` (\"auto\" or object, Optional): Specifies model output format.\n\n### Returns\n\n- A run object\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"assistant_id\": \"asst_abc123\"\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699063290,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"queued\",\n  \"started_at\": 1699063290,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699063291,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"incomplete_details\": null,\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"metadata\": {},\n  \"usage\": null,\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n\n## Create Thread and Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/runs`\n\nCreates a thread and runs it in one request.\n\n### Request Body\n\n- `assistant_id` (string, Required): The ID of the assistant to use.\n- `thread` (object, Optional): Thread object with messages.\n- `model` (string, Optional): Model ID to override the assistant's default model.\n- `instructions` (string or null, Optional): Override the assistant's default system message.\n- `tools` (array or null, Optional): Override tools for the run.\n- `tool_resources` (object or null, Optional): Resources required by the assistant's tools.\n- `metadata` (map, Optional): Structured additional information.\n- `temperature` (number or null, Optional, Defaults to 1): Sampling temperature.\n- `top_p` (number or null, Optional, Defaults to 1): Nucleus sampling probability mass.\n- `stream` (boolean or null, Optional): Stream server-sent events if true.\n- `max_prompt_tokens` (integer or null, Optional): Max prompt tokens.\n- `max_completion_tokens` (integer or null, Optional): Max completion tokens.\n- `truncation_strategy` (object, Optional): Controls thread truncation strategy.\n- `tool_choice` (string or object, Optional): Tool call control strategy.\n- `parallel_tool_calls` (boolean, Optional, Defaults to true): Enable parallel function calling.\n- `response_format` (\"auto\" or object, Optional): Specifies model output format.\n\n### Returns\n\n- A run object\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n      \"assistant_id\": \"asst_abc123\",\n      \"thread\": {\n        \"messages\": [\n          {\"role\": \"user\", \"content\": \"Explain deep learning to a 5 year old.\"}\n        ]\n      }\n    }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699076792,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"queued\",\n  \"started_at\": null,\n  \"expires_at\": 1699077392,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": null,\n  \"required_action\": null,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": \"You are a helpful assistant.\",\n  \"tools\": [],\n  \"tool_resources\": {},\n  \"metadata\": {},\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_completion_tokens\": null,\n  \"max_prompt_tokens\": null,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"incomplete_details\": null,\n  \"usage\": null,\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## List Runs (Beta)\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs`\n\nReturns a list of runs for a thread.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n\n### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination, defines starting point.\n- `before` (string, Optional): Cursor for pagination, defines ending point.\n\n### Returns\n\n- A list of run objects.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"run_abc123\",\n      \"object\": \"thread.run\",\n      \"created_at\": 1699075072,\n      \"assistant_id\": \"asst_abc123\",\n      \"thread_id\": \"thread_abc123\",\n      \"status\": \"completed\",\n      \"started_at\": 1699075072,\n      \"expires_at\": null,\n      \"cancelled_at\": null,\n      \"failed_at\": null,\n      \"completed_at\": 1699075073,\n      \"last_error\": null,\n      \"model\": \"gpt-4o\",\n      \"instructions\": null,\n      \"incomplete_details\": null,\n      \"tools\": [\n        {\n          \"type\": \"code_interpreter\"\n        }\n      ],\n      \"tool_resources\": {\n        \"code_interpreter\": {\n          \"file_ids\": [\n            \"file-abc123\",\n            \"file-abc456\"\n          ]\n        }\n      },\n      \"metadata\": {},\n      \"usage\": {\n        \"prompt_tokens\": 123,\n        \"completion_tokens\": 456,\n        \"total_tokens\": 579\n      },\n      \"temperature\": 1.0,\n      \"top_p\": 1.0,\n      \"max_prompt_tokens\": 1000,\n      \"max_completion_tokens\": 1000,\n      \"truncation_strategy\": {\n        \"type\": \"auto\",\n        \"last_messages\": null\n      },\n      \"response_format\": \"auto\",\n      \"tool_choice\": \"auto\",\n      \"parallel_tool_calls\": true\n    }\n  ],\n  \"first_id\": \"run_abc123\",\n  \"last_id\": \"run_abc456\",\n  \"has_more\": false\n}\n```\n```markdown\n## Retrieve Run (Beta)\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}`\n\nRetrieves a specific run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run.\n\n### Returns\n\n- The run object matching the specified ID.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699075072,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"completed\",\n  \"started_at\": 1699075072,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699075073,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"incomplete_details\": null,\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"metadata\": {},\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  },\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Modify Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}`\n\nModifies an existing run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run to modify.\n\n### Request Body\n\n- `metadata` (map, Optional): Key-value pairs for additional information, with keys up to 64 characters and values up to 512 characters.\n\n### Returns\n\n- The modified run object.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"metadata\": {\n      \"user_id\": \"user_abc123\"\n    }\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699075072,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"completed\",\n  \"started_at\": 1699075072,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699075073,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"incomplete_details\": null,\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"tool_resources\": {\n    \"code_interpreter\": {\n      \"file_ids\": [\n        \"file-abc123\",\n        \"file-abc456\"\n      ]\n    }\n  },\n  \"metadata\": {\n    \"user_id\": \"user_abc123\"\n  },\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  },\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Submit Tool Outputs to Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/submit_tool_outputs`\n\nSubmits the outputs from tool calls once completed, if the run has `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run requiring the tool output submission.\n\n### Request Body\n\n- `tool_outputs` (array, Required): A list of tools with their outputs.\n\n- `stream` (boolean or null, Optional): If `true`, returns a stream of events during the run, ending with a `data: [DONE]` message.\n\n### Returns\n\n- The modified run object.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_123/runs/run_123/submit_tool_outputs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"tool_outputs\": [\n      {\n        \"tool_call_id\": \"call_001\",\n        \"output\": \"70 degrees and sunny.\"\n      }\n    ]\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699075592,\n  \"assistant_id\": \"asst_123\",\n  \"thread_id\": \"thread_123\",\n  \"status\": \"queued\",\n  \"started_at\": 1699075592,\n  \"expires_at\": 1699076192,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": null,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"tools\": [\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"get_current_weather\",\n        \"description\": \"Get the current weather in a given location\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"location\": {\n              \"type\": \"string\",\n              \"description\": \"The city and state, e.g., San Francisco, CA\"\n            },\n            \"unit\": {\n              \"type\": \"string\",\n              \"enum\": [\"celsius\", \"fahrenheit\"]\n            }\n          },\n          \"required\": [\"location\"]\n        }\n      }\n    }\n  ],\n  \"metadata\": {},\n  \"usage\": null,\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Cancel a Run (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/cancel`\n\nCancels an in-progress run.\n\n### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run to cancel.\n\n### Returns\n\n- The modified run object reflecting the cancellation.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123/cancel \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X POST\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699076126,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"cancelling\",\n  \"started_at\": 1699076126,\n  \"expires_at\": 1699076726,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": null,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": \"You summarize books.\",\n  \"tools\": [\n    {\n      \"type\": \"file_search\"\n    }\n  ],\n  \"tool_resources\": {\n    \"file_search\": {\n      \"vector_store_ids\": [\"vs_123\"]\n    }\n  },\n  \"metadata\": {},\n  \"usage\": null,\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## The Run Object (Beta)\n\nRepresents an execution run on a thread.\n\n### Properties\n\n- `id` (string): The identifier, used in API endpoints.\n- `object` (string): The object type, always `thread.run`.\n- `created_at` (integer): Unix timestamp when the run was created.\n- `thread_id` (string): The ID of the thread executed on this run.\n- `assistant_id` (string): The ID of the assistant used.\n- `status` (string): Status of the run: `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, `incomplete`, or `expired`.\n- `required_action` (object or null): Action required to continue, null if none.\n- `last_error` (object or null): Last error associated with this run.\n- `expires_at` (integer or null): Unix timestamp when the run will expire.\n- `started_at` (integer or null): Unix timestamp when the run started.\n- `cancelled_at` (integer or null): Unix timestamp when the run was cancelled.\n- `failed_at` (integer or null): Unix timestamp when the run failed.\n- `completed_at` (integer or null): Unix timestamp when the run completed.\n- `incomplete_details` (object or null): Details on why the run is incomplete.\n- `model` (string): The model used for this run.\n- `instructions` (string): Instructions used by the assistant.\n- `tools` (array): List of tools used during the run.\n- `metadata` (map): Key-value pairs for additional information.\n- `usage` (object or null): Usage statistics, null if not in a terminal state.\n- `temperature` (number or null): Sampling temperature, defaults to 1.\n- `top_p` (number or null): Nucleus sampling value, defaults to 1.\n- `max_prompt_tokens` (integer or null): Max number of prompt tokens used.\n- `max_completion_tokens` (integer or null): Max number of completion tokens used.\n- `truncation_strategy` (object): Controls initial context window of the run.\n- `tool_choice` (string or object): Controls tool calling strategy.\n- `parallel_tool_calls` (boolean): Parallel function calling during tool use.\n- `response_format` (\"auto\" or object): Format of model output.\n\n### Example Run Object\n\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1698107661,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"completed\",\n  \"started_at\": 1699073476,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699073498,\n  \"last_error\": null,\n  \"model\": \"gpt-4o\",\n  \"instructions\": null,\n  \"tools\": [{\"type\": \"file_search\"}, {\"type\": \"code_interpreter\"}],\n  \"metadata\": {},\n  \"incomplete_details\": null,\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  },\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\",\n  \"parallel_tool_calls\": true\n}\n```\n```markdown\n## Run Steps (Beta)\n\nRepresents the steps (model and tool calls) taken during the run.\n\n### List Run Steps\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/steps`\n\nReturns a list of run steps for a run.\n\n#### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run.\n\n#### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination, defines starting point.\n- `before` (string, Optional): Cursor for pagination, defines ending point.\n- `include[]` (array, Optional): Additional fields to include, supports `step_details.tool_calls[*].file_search.results[*].content`.\n\n#### Returns\n\n- A list of run step objects.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123/steps \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"step_abc123\",\n      \"object\": \"thread.run.step\",\n      \"created_at\": 1699063291,\n      \"run_id\": \"run_abc123\",\n      \"assistant_id\": \"asst_abc123\",\n      \"thread_id\": \"thread_abc123\",\n      \"type\": \"message_creation\",\n      \"status\": \"completed\",\n      \"cancelled_at\": null,\n      \"completed_at\": 1699063291,\n      \"expired_at\": null,\n      \"failed_at\": null,\n      \"last_error\": null,\n      \"step_details\": {\n        \"type\": \"message_creation\",\n        \"message_creation\": {\n          \"message_id\": \"msg_abc123\"\n        }\n      },\n      \"usage\": {\n        \"prompt_tokens\": 123,\n        \"completion_tokens\": 456,\n        \"total_tokens\": 579\n      }\n    }\n  ],\n  \"first_id\": \"step_abc123\",\n  \"last_id\": \"step_abc456\",\n  \"has_more\": false\n}\n```\n\n### Retrieve Run Step\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/threads/{thread_id}/runs/{run_id}/steps/{step_id}`\n\nRetrieves a specific run step.\n\n#### Path Parameters\n\n- `thread_id` (string, Required): The ID of the thread.\n- `run_id` (string, Required): The ID of the run.\n- `step_id` (string, Required): The ID of the run step.\n\n#### Query Parameters\n\n- `include[]` (array, Optional): Additional fields to include, supports `step_details.tool_calls[*].file_search.results[*].content`.\n\n#### Returns\n\n- The run step object matching the specified ID.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs/run_abc123/steps/step_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"step_abc123\",\n  \"object\": \"thread.run.step\",\n  \"created_at\": 1699063291,\n  \"run_id\": \"run_abc123\",\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"type\": \"message_creation\",\n  \"status\": \"completed\",\n  \"cancelled_at\": null,\n  \"completed_at\": 1699063291,\n  \"expired_at\": null,\n  \"failed_at\": null,\n  \"last_error\": null,\n  \"step_details\": {\n    \"type\": \"message_creation\",\n    \"message_creation\": {\n      \"message_id\": \"msg_abc123\"\n    }\n  },\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  }\n}\n```\n```markdown\n## The Run Step Object (Beta)\n\nRepresents a step in the execution of a run.\n\n### Properties\n\n- `id` (string): Identifier of the run step.\n- `object` (string): The object type, always `thread.run.step`.\n- `created_at` (integer): Unix timestamp when the run step was created.\n- `assistant_id` (string): The ID of the assistant associated with the run step.\n- `thread_id` (string): The ID of the thread that was run.\n- `run_id` (string): The ID of the run this step is part of.\n- `type` (string): Type of run step: `message_creation` or `tool_calls`.\n- `status` (string): Status of the run step: `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.\n- `step_details` (object): Details of the run step.\n- `last_error` (object or null): The last error associated with this step.\n- `expired_at` (integer or null): Unix timestamp when the step expired.\n- `cancelled_at` (integer or null): Unix timestamp when the step was cancelled.\n- `failed_at` (integer or null): Unix timestamp when the step failed.\n- `completed_at` (integer or null): Unix timestamp when the step completed.\n- `metadata` (map): Key-value pairs for additional information.\n- `usage` (object or null): Usage statistics, null if the status is `in_progress`.\n\n### Example Run Step Object\n\n```json\n{\n  \"id\": \"step_abc123\",\n  \"object\": \"thread.run.step\",\n  \"created_at\": 1699063291,\n  \"run_id\": \"run_abc123\",\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"type\": \"message_creation\",\n  \"status\": \"completed\",\n  \"cancelled_at\": null,\n  \"completed_at\": 1699063291,\n  \"expired_at\": null,\n  \"failed_at\": null,\n  \"last_error\": null,\n  \"step_details\": {\n    \"type\": \"message_creation\",\n    \"message_creation\": {\n      \"message_id\": \"msg_abc123\"\n    }\n  },\n  \"usage\": {\n    \"prompt_tokens\": 123,\n    \"completion_tokens\": 456,\n    \"total_tokens\": 579\n  }\n}\n```\n```markdown\n## Vector Stores (Beta)\n\nVector stores are collections of processed files used with the `file_search` tool.\n\n### Create Vector Store\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores`\n\nCreates a vector store.\n\n#### Request Body\n\n- `file_ids` (array, Optional): List of file IDs that the vector store should use.\n- `name` (string, Optional): Name of the vector store.\n- `expires_after` (object, Optional): Expiration policy for the vector store.\n- `chunking_strategy` (object, Optional): Strategy for chunking files.\n- `metadata` (map, Optional): Key-value pairs for additional information.\n\n#### Returns\n\n- A vector store object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"name\": \"Support FAQ\"\n  }'\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1699061776,\n  \"name\": \"Support FAQ\",\n  \"bytes\": 139920,\n  \"file_counts\": {\n    \"in_progress\": 0,\n    \"completed\": 3,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 3\n  }\n}\n```\n\n### List Vector Stores\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores`\n\nReturns a list of vector stores.\n\n#### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination, defines starting point.\n- `before` (string, Optional): Cursor for pagination, defines ending point.\n\n#### Returns\n\n- A list of vector store objects.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"vs_abc123\",\n      \"object\": \"vector_store\",\n      \"created_at\": 1699061776,\n      \"name\": \"Support FAQ\",\n      \"bytes\": 139920,\n      \"file_counts\": {\n        \"in_progress\": 0,\n        \"completed\": 3,\n        \"failed\": 0,\n        \"cancelled\": 0,\n        \"total\": 3\n      }\n    },\n    {\n      \"id\": \"vs_abc456\",\n      \"object\": \"vector_store\",\n      \"created_at\": 1699061776,\n      \"name\": \"Support FAQ v2\",\n      \"bytes\": 139920,\n      \"file_counts\": {\n        \"in_progress\": 0,\n        \"completed\": 3,\n        \"failed\": 0,\n        \"cancelled\": 0,\n        \"total\": 3\n      }\n    }\n  ],\n  \"first_id\": \"vs_abc123\",\n  \"last_id\": \"vs_abc456\",\n  \"has_more\": false\n}\n```\n```markdown\n## Retrieve Vector Store (Beta)\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}`\n\nRetrieves a vector store.\n\n### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n### Returns\n\n- The vector store object matching the specified ID.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1699061776\n}\n```\n\n## Modify Vector Store (Beta)\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}`\n\nModifies an existing vector store.\n\n### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n### Request Body\n\n- `name` (string or null, Optional): The name of the vector store.\n- `expires_after` (object, Optional): Expiration policy for the vector store.\n- `metadata` (map, Optional): Key-value pairs for additional information.\n\n### Returns\n\n- The modified vector store object.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"name\": \"Support FAQ\"\n  }'\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1699061776,\n  \"name\": \"Support FAQ\",\n  \"bytes\": 139920,\n  \"file_counts\": {\n    \"in_progress\": 0,\n    \"completed\": 3,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 3\n  }\n}\n```\n\n## Delete Vector Store (Beta)\n\n**Endpoint:**  \n`DELETE https://api.openai.com/v1/vector_stores/{vector_store_id}`\n\nDeletes a vector store.\n\n### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store to delete.\n\n### Returns\n\n- Deletion status.\n\n### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X DELETE\n```\n\n### Example Response\n\n```json\n{\n  \"id\": \"vs_abc123\",\n  \"object\": \"vector_store.deleted\",\n  \"deleted\": true\n}\n```\n\n## The Vector Store Object (Beta)\n\nA vector store is a collection of processed files used by the `file_search` tool.\n\n### Properties\n\n- `id` (string): Identifier used in API endpoints.\n- `object` (string): The object type, always `vector_store`.\n- `created_at` (integer): Unix timestamp when the vector store was created.\n- `name` (string): Name of the vector store.\n- `usage_bytes` (integer): Total bytes used by files in the store.\n- `file_counts` (object): Number of files in different states.\n- `status` (string): Status of the store: `expired`, `in_progress`, or `completed`.\n- `expires_after` (object): Expiration policy of the store.\n- `expires_at` (integer or null): Unix timestamp when the store will expire.\n- `last_active_at` (integer or null): Last active timestamp.\n- `metadata` (map): Key-value pairs for additional information.\n\n### Example Vector Store Object\n\n```json\n{\n  \"id\": \"vs_123\",\n  \"object\": \"vector_store\",\n  \"created_at\": 1698107661,\n  \"usage_bytes\": 123456,\n  \"last_active_at\": 1698107661,\n  \"name\": \"my_vector_store\",\n  \"status\": \"completed\",\n  \"file_counts\": {\n    \"in_progress\": 0,\n    \"completed\": 100,\n    \"cancelled\": 0,\n    \"failed\": 0,\n    \"total\": 100\n  },\n  \"metadata\": {},\n  \"last_used_at\": 1698107661\n}\n```\n```markdown\n## Vector Store Files (Beta)\n\nVector store files represent files inside a vector store.\n\n### Create Vector Store File\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}/files`\n\nAttaches a file to a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n#### Request Body\n\n- `file_id` (string, Required): The file ID to attach.\n- `chunking_strategy` (object, Optional): Strategy for chunking files.\n\n#### Returns\n\n- A vector store file object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"file_id\": \"file-abc123\"\n  }'\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file\",\n  \"created_at\": 1699061776,\n  \"usage_bytes\": 1234,\n  \"vector_store_id\": \"vs_abcd\",\n  \"status\": \"completed\",\n  \"last_error\": null\n}\n```\n\n### List Vector Store Files\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}/files`\n\nReturns a list of files within a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n\n#### Query Parameters\n\n- `limit` (integer, Optional, Defaults to 20): Number of objects to return. Range: 1-100.\n- `order` (string, Optional, Defaults to desc): Sort order by `created_at` timestamp. `asc` or `desc`.\n- `after` (string, Optional): Cursor for pagination.\n- `before` (string, Optional): Cursor for pagination.\n- `filter` (string, Optional): Filter by file status: `in_progress`, `completed`, `failed`, `cancelled`.\n\n#### Returns\n\n- A list of vector store file objects.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\": \"file-abc123\",\n      \"object\": \"vector_store.file\",\n      \"created_at\": 1699061776,\n      \"vector_store_id\": \"vs_abc123\"\n    },\n    {\n      \"id\": \"file-abc456\",\n      \"object\": \"vector_store.file\",\n      \"created_at\": 1699061776,\n      \"vector_store_id\": \"vs_abc123\"\n    }\n  ],\n  \"first_id\": \"file-abc123\",\n  \"last_id\": \"file-abc456\",\n  \"has_more\": false\n}\n```\n\n### Retrieve Vector Store File\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}/files/{file_id}`\n\nRetrieves a specific file from a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n- `file_id` (string, Required): The ID of the file.\n\n#### Returns\n\n- The vector store file object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files/file-abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abcd\",\n  \"status\": \"completed\",\n  \"last_error\": null\n}\n```\n\n### Delete Vector Store File\n\n**Endpoint:**  \n`DELETE https://api.openai.com/v1/vector_stores/{vector_store_id}/files/{file_id}`\n\nDeletes a file from a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The ID of the vector store.\n- `file_id` (string, Required): The ID of the file to delete.\n\n#### Returns\n\n- Deletion status.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files/file-abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X DELETE\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file.deleted\",\n  \"deleted\": true\n}\n```\n\n## The Vector Store File Object (Beta)\n\nDetails for a file attached to a vector store.\n\n### Properties\n\n- `id` (string): Identifier of the file.\n- `object` (string): The object type, always `vector_store.file`.\n- `usage_bytes` (integer): Total bytes used by the vector store file.\n- `created_at` (integer): Unix timestamp when the file was created.\n- `vector_store_id` (string): The vector store's ID that the file belongs to.\n- `status` (string): Status of the file: `in_progress`, `completed`, `cancelled`, or `failed`.\n- `last_error` (object or null): Last error related to the file, null if no errors.\n- `chunking_strategy` (object): File chunking strategy used.\n\n### Example Vector Store File Object\n\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"vector_store.file\",\n  \"usage_bytes\": 1234,\n  \"created_at\": 1698107661,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"completed\",\n  \"last_error\": null,\n  \"chunking_strategy\": {\n    \"type\": \"static\",\n    \"static\": {\n      \"max_chunk_size_tokens\": 800,\n      \"chunk_overlap_tokens\": 400\n    }\n  }\n}\n```\n```markdown\n## Vector Store File Batches (Beta)\n\nVector store file batches represent operations to add multiple files to a vector store.\n\n### Create Vector Store File Batch\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}/file_batches`\n\nCreates a batch of files to add to a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The vector store's ID.\n\n#### Request Body\n\n- `file_ids` (array, Required): List of file IDs to add.\n- `chunking_strategy` (object, Optional): Strategy for chunking files.\n\n#### Returns\n\n- A vector store file batch object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/file_batches \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -d '{\n    \"file_ids\": [\"file-abc123\", \"file-abc456\"]\n  }'\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vsfb_abc123\",\n  \"object\": \"vector_store.file_batch\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"in_progress\",\n  \"file_counts\": {\n    \"in_progress\": 1,\n    \"completed\": 1,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 0\n  }\n}\n```\n\n### Retrieve Vector Store File Batch\n\n**Endpoint:**  \n`GET https://api.openai.com/v1/vector_stores/{vector_store_id}/file_batches/{batch_id}`\n\nRetrieves a batch of files from a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The vector store's ID.\n- `batch_id` (string, Required): The batch ID.\n\n#### Returns\n\n- The vector store file batch object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files_batches/vsfb_abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\"\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vsfb_abc123\",\n  \"object\": \"vector_store.file_batch\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"in_progress\",\n  \"file_counts\": {\n    \"in_progress\": 1,\n    \"completed\": 1,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 0\n  }\n}\n```\n\n### Cancel Vector Store File Batch\n\n**Endpoint:**  \n`POST https://api.openai.com/v1/vector_stores/{vector_store_id}/file_batches/{batch_id}/cancel`\n\nCancels a file batch process for a vector store.\n\n#### Path Parameters\n\n- `vector_store_id` (string, Required): The vector store's ID.\n- `batch_id` (string, Required): The batch ID to cancel.\n\n#### Returns\n\n- The modified vector store file batch object.\n\n#### Example Request (cURL)\n\n```bash\ncurl https://api.openai.com/v1/vector_stores/vs_abc123/files_batches/vsfb_abc123/cancel \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v2\" \\\n  -X POST\n```\n\n#### Example Response\n\n```json\n{\n  \"id\": \"vsfb_abc123\",\n  \"object\": \"vector_store.file_batch\",\n  \"created_at\": 1699061776,\n  \"vector_store_id\": \"vs_abc123\",\n  \"status\": \"cancelling\",\n  \"file_counts\": {\n    \"in_progress\": 12,\n    \"completed\": 3,\n    \"failed\": 0,\n    \"cancelled\": 0,\n    \"total\": 15\n  }\n}\n```\n```markdown\n## List Vector Store Files in a Batch (Beta)\n\n**Note:** This section appears incomplete in your document content. Please provide the necessary information and context for the retrieval process related to listing vector store files in a batch. For accurate document authoring, consider including endpoint details, path parameters, query parameters, and expected outputs for future updates.\n```\n"}
{"timestamp":"2024-11-07 16:41:21.876","prompt":"```markdown\n# Realtime API\n\n## Client Events\n\n### session.update\n\n- **Purpose**: Update session’s default configuration.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"session.update\".\n  - `session`: *object* - Realtime session object configuration.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_123\",\n      \"type\": \"session.update\",\n      \"session\": {\n          \"modalities\": [\"text\", \"audio\"],\n          \"instructions\": \"Your knowledge cutoff is 2023-10. You are a helpful assistant.\",\n          \"voice\": \"alloy\",\n          ...\n      }\n  }\n  ```\n\n### input_audio_buffer.append\n\n- **Purpose**: Append audio bytes to the input audio buffer.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"input_audio_buffer.append\".\n  - `audio`: *string* - Base64-encoded audio bytes.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_456\",\n      \"type\": \"input_audio_buffer.append\",\n      \"audio\": \"Base64EncodedAudioData\"\n  }\n  ```\n\n### input_audio_buffer.commit\n\n- **Purpose**: Commit user input audio buffer to create a new user message.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"input_audio_buffer.commit\".\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_789\",\n      \"type\": \"input_audio_buffer.commit\"\n  }\n  ```\n\n### conversation.item.create\n\n- **Purpose**: Add a new item to the conversation.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"conversation.item.create\".\n  - `previous_item_id`: *string* - ID of the preceding item.\n  - `item`: *object* - The item to add.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_345\",\n      \"type\": \"conversation.item.create\",\n      \"previous_item_id\": null,\n      \"item\": {\n          \"id\": \"msg_001\",\n          ...\n      }\n  }\n  ```\n\n### response.create\n\n- **Purpose**: Trigger model inference to create a Response.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"response.create\".\n  - `response`: *object* - The response resource.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_234\",\n      \"type\": \"response.create\",\n      \"response\": {\n          ...\n      }\n  }\n  ```\n\n## Server Events\n\n### error\n\n- **Purpose**: Indicate an error occurred.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"error\".\n  - `error`: *object* - Details of the error.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_890\",\n      \"type\": \"error\",\n      \"error\": {\n          \"type\": \"invalid_request_error\",\n          ...\n      }\n  }\n  ```\n\n### session.created\n\n- **Purpose**: Notify that a session is created.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"session.created\".\n  - `session`: *object* - Realtime session object configuration.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_1234\",\n      \"type\": \"session.created\",\n      ...\n  }\n  ```\n\n### conversation.item.created\n\n- **Purpose**: Indicate a new conversation item is created.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"conversation.item.created\".\n  - `previous_item_id`: *string* - ID of the preceding item.\n  - `item`: *object* - The item to add.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_1920\",\n      \"type\": \"conversation.item.created\",\n      ...\n  }\n  ```\n\n### conversation.item.input_audio_transcription.completed\n\n- **Purpose**: Signal completion of audio transcription for user audio.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"conversation.item.input_audio_transcription.completed\".\n  - `item_id`: *string* - ID of the user message item.\n  - `content_index`: *integer* - Index of the content part with the audio.\n  - `transcript`: *string* - The transcribed text.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_2122\",\n      \"type\": \"conversation.item.input_audio_transcription.completed\",\n      \"item_id\": \"msg_003\",\n      ...\n  }\n  ```\n\n## Conclusion\n\nThe Realtime API allows for seamless interaction and communication in real time, providing functionalities to update sessions, manage audio buffers, and handle conversations. Detailed error and event responses help in debugging and ensuring smooth interaction with the system.\n```","response":"```markdown\n# Realtime API\n\n## Client Events\n\n### session.update\n\n- **Purpose**: Update session’s default configuration.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"session.update\".\n  - `session`: *object* - Realtime session object configuration.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_123\",\n      \"type\": \"session.update\",\n      \"session\": {\n          \"modalities\": [\"text\", \"audio\"],\n          \"instructions\": \"Your knowledge cutoff is 2023-10. You are a helpful assistant.\",\n          \"voice\": \"alloy\",\n          ...\n      }\n  }\n  ```\n\n### input_audio_buffer.append\n\n- **Purpose**: Append audio bytes to the input audio buffer.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"input_audio_buffer.append\".\n  - `audio`: *string* - Base64-encoded audio bytes.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_456\",\n      \"type\": \"input_audio_buffer.append\",\n      \"audio\": \"Base64EncodedAudioData\"\n  }\n  ```\n\n### input_audio_buffer.commit\n\n- **Purpose**: Commit user input audio buffer to create a new user message.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"input_audio_buffer.commit\".\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_789\",\n      \"type\": \"input_audio_buffer.commit\"\n  }\n  ```\n\n### conversation.item.create\n\n- **Purpose**: Add a new item to the conversation.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"conversation.item.create\".\n  - `previous_item_id`: *string* - ID of the preceding item.\n  - `item`: *object* - The item to add.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_345\",\n      \"type\": \"conversation.item.create\",\n      \"previous_item_id\": null,\n      \"item\": {\n          \"id\": \"msg_001\",\n          ...\n      }\n  }\n  ```\n\n### response.create\n\n- **Purpose**: Trigger model inference to create a Response.\n- **Fields**:\n  - `event_id`: *string* (Optional) - Identifier for the event.\n  - `type`: *string* - Must be \"response.create\".\n  - `response`: *object* - The response resource.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_234\",\n      \"type\": \"response.create\",\n      \"response\": {\n          ...\n      }\n  }\n  ```\n\n## Server Events\n\n### error\n\n- **Purpose**: Indicate an error occurred.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"error\".\n  - `error`: *object* - Details of the error.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_890\",\n      \"type\": \"error\",\n      \"error\": {\n          \"type\": \"invalid_request_error\",\n          ...\n      }\n  }\n  ```\n\n### session.created\n\n- **Purpose**: Notify that a session is created.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"session.created\".\n  - `session`: *object* - Realtime session object configuration.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_1234\",\n      \"type\": \"session.created\",\n      ...\n  }\n  ```\n\n### conversation.item.created\n\n- **Purpose**: Indicate a new conversation item is created.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"conversation.item.created\".\n  - `previous_item_id`: *string* - ID of the preceding item.\n  - `item`: *object* - The item to add.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_1920\",\n      \"type\": \"conversation.item.created\",\n      ...\n  }\n  ```\n\n### conversation.item.input_audio_transcription.completed\n\n- **Purpose**: Signal completion of audio transcription for user audio.\n- **Fields**:\n  - `event_id`: *string* - Unique ID of the server event.\n  - `type`: *string* - Must be \"conversation.item.input_audio_transcription.completed\".\n  - `item_id`: *string* - ID of the user message item.\n  - `content_index`: *integer* - Index of the content part with the audio.\n  - `transcript`: *string* - The transcribed text.\n- **Example**:\n  ```json\n  {\n      \"event_id\": \"event_2122\",\n      \"type\": \"conversation.item.input_audio_transcription.completed\",\n      \"item_id\": \"msg_003\",\n      ...\n  }\n  ```\n\n## Conclusion\n\nThe Realtime API allows for seamless interaction and communication in real time, providing functionalities to update sessions, manage audio buffers, and handle conversations. Detailed error and event responses help in debugging and ensuring smooth interaction with the system.\n```"}
{"timestamp":"2024-11-07 16:41:47.399","prompt":"# Realtime API Events\n\n## Events Overview\n\nThe realtime API involves several events that are triggered under different scenarios during server-client interactions. Below are the detailed specifications of each event type.\n\n### `input_audio_buffer.committed`\n\nAn event fired when a user message item is created by committing the input audio buffer.\n\n```json\n{\n    \"event_id\": \"event_1121\",\n    \"type\": \"input_audio_buffer.committed\",\n    \"previous_item_id\": \"msg_001\",\n    \"item_id\": \"msg_002\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.committed`.\n  - `previous_item_id`: String, ID of the preceding item.\n  - `item_id`: String, ID of the user message item to be created.\n\n### `input_audio_buffer.cleared`\n\nIndicates the clearing of the input audio buffer.\n\n```json\n{\n    \"event_id\": \"event_1314\",\n    \"type\": \"input_audio_buffer.cleared\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.cleared`.\n\n### `input_audio_buffer.speech_started`\n\nTriggered when the server detects the start of speech in the audio buffer.\n\n```json\n{\n    \"event_id\": \"event_1516\",\n    \"type\": \"input_audio_buffer.speech_started\",\n    \"audio_start_ms\": 1000,\n    \"item_id\": \"msg_003\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.speech_started`.\n  - `audio_start_ms`: Integer, milliseconds from the session start when speech was detected.\n  - `item_id`: String, ID of the user message item to be created when speech stops.\n\n### `input_audio_buffer.speech_stopped`\n\nThis event occurs when the server detects an end of speech.\n\n```json\n{\n    \"event_id\": \"event_1718\",\n    \"type\": \"input_audio_buffer.speech_stopped\",\n    \"audio_end_ms\": 2000,\n    \"item_id\": \"msg_003\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.speech_stopped`.\n  - `audio_end_ms`: Integer, milliseconds from the session start when speech stopped.\n  - `item_id`: String, ID of the user message item created.\n\n### `response.created`\n\nDenotes the creation of a new Response object, initially in the `in_progress` state.\n\n```json\n{\n    \"event_id\": \"event_2930\",\n    \"type\": \"response.created\",\n    \"response\": {\n        \"id\": \"resp_001\",\n        \"object\": \"realtime.response\",\n        \"status\": \"in_progress\",\n        \"status_details\": null,\n        \"output\": [],\n        \"usage\": null\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.created`.\n  - `response`: Object, details about the response.\n\n### `response.done`\n\nSignals the completion of a Response, including all output items but excluding raw audio data.\n\n```json\n{\n    \"event_id\": \"event_3132\",\n    \"type\": \"response.done\",\n    \"response\": {\n        \"id\": \"resp_001\",\n        \"object\": \"realtime.response\",\n        \"status\": \"completed\",\n        \"output\": [\n            {\n                \"id\": \"msg_006\",\n                \"object\": \"realtime.item\",\n                \"type\": \"message\",\n                \"content\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Sure, how can I assist you today?\"\n                    }\n                ]\n            }\n        ],\n        \"usage\": {\n            \"total_tokens\": 275,\n            \"input_tokens\": 127,\n            \"output_tokens\": 148\n        }\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.done`.\n  - `response`: Object, detailed response information.\n\n### `response.output_item.added`\n\nThis event indicates the addition of a new item during Response generation.\n\n```json\n{\n    \"event_id\": \"event_3334\",\n    \"type\": \"response.output_item.added\",\n    \"response_id\": \"resp_001\",\n    \"output_index\": 0,\n    \"item\": {\n        \"id\": \"msg_007\",\n        \"object\": \"realtime.item\",\n        \"status\": \"in_progress\",\n        \"role\": \"assistant\",\n        \"content\": []\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.output_item.added`.\n  - `response_id`: String, ID of the Response to which the item belongs.\n  - `output_index`: Integer, index of the output item.\n  - `item`: Object, details of the item.\n\n### `response.output_item.done`\n\nIndicates that an item has completed streaming, or the streaming has been interrupted.\n\n```json\n{\n    \"event_id\": \"event_3536\",\n    \"type\": \"response.output_item.done\",\n    \"response_id\": \"resp_001\",\n    \"output_index\": 0,\n    \"item\": {\n        \"id\": \"msg_007\",\n        \"object\": \"realtime.item\",\n        \"status\": \"completed\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"Sure, I can help with that.\"\n            }\n        ]\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.output_item.done`.\n  - `response_id`: String, ID of the Response.\n  - `output_index`: Integer, index of the output item.\n  - `item`: Object, containing the completed item.\n\n... \n\nThe above specifications provide detailed guidance for the server/client implementations of real-time API event handling and tracking. Each event is equipped with the required JSON structure, ensuring clear, consistent communications between the server and client applications.","response":"# Realtime API Events\n\n## Events Overview\n\nThe realtime API involves several events that are triggered under different scenarios during server-client interactions. Below are the detailed specifications of each event type.\n\n### `input_audio_buffer.committed`\n\nAn event fired when a user message item is created by committing the input audio buffer.\n\n```json\n{\n    \"event_id\": \"event_1121\",\n    \"type\": \"input_audio_buffer.committed\",\n    \"previous_item_id\": \"msg_001\",\n    \"item_id\": \"msg_002\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.committed`.\n  - `previous_item_id`: String, ID of the preceding item.\n  - `item_id`: String, ID of the user message item to be created.\n\n### `input_audio_buffer.cleared`\n\nIndicates the clearing of the input audio buffer.\n\n```json\n{\n    \"event_id\": \"event_1314\",\n    \"type\": \"input_audio_buffer.cleared\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.cleared`.\n\n### `input_audio_buffer.speech_started`\n\nTriggered when the server detects the start of speech in the audio buffer.\n\n```json\n{\n    \"event_id\": \"event_1516\",\n    \"type\": \"input_audio_buffer.speech_started\",\n    \"audio_start_ms\": 1000,\n    \"item_id\": \"msg_003\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.speech_started`.\n  - `audio_start_ms`: Integer, milliseconds from the session start when speech was detected.\n  - `item_id`: String, ID of the user message item to be created when speech stops.\n\n### `input_audio_buffer.speech_stopped`\n\nThis event occurs when the server detects an end of speech.\n\n```json\n{\n    \"event_id\": \"event_1718\",\n    \"type\": \"input_audio_buffer.speech_stopped\",\n    \"audio_end_ms\": 2000,\n    \"item_id\": \"msg_003\"\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `input_audio_buffer.speech_stopped`.\n  - `audio_end_ms`: Integer, milliseconds from the session start when speech stopped.\n  - `item_id`: String, ID of the user message item created.\n\n### `response.created`\n\nDenotes the creation of a new Response object, initially in the `in_progress` state.\n\n```json\n{\n    \"event_id\": \"event_2930\",\n    \"type\": \"response.created\",\n    \"response\": {\n        \"id\": \"resp_001\",\n        \"object\": \"realtime.response\",\n        \"status\": \"in_progress\",\n        \"status_details\": null,\n        \"output\": [],\n        \"usage\": null\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.created`.\n  - `response`: Object, details about the response.\n\n### `response.done`\n\nSignals the completion of a Response, including all output items but excluding raw audio data.\n\n```json\n{\n    \"event_id\": \"event_3132\",\n    \"type\": \"response.done\",\n    \"response\": {\n        \"id\": \"resp_001\",\n        \"object\": \"realtime.response\",\n        \"status\": \"completed\",\n        \"output\": [\n            {\n                \"id\": \"msg_006\",\n                \"object\": \"realtime.item\",\n                \"type\": \"message\",\n                \"content\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Sure, how can I assist you today?\"\n                    }\n                ]\n            }\n        ],\n        \"usage\": {\n            \"total_tokens\": 275,\n            \"input_tokens\": 127,\n            \"output_tokens\": 148\n        }\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.done`.\n  - `response`: Object, detailed response information.\n\n### `response.output_item.added`\n\nThis event indicates the addition of a new item during Response generation.\n\n```json\n{\n    \"event_id\": \"event_3334\",\n    \"type\": \"response.output_item.added\",\n    \"response_id\": \"resp_001\",\n    \"output_index\": 0,\n    \"item\": {\n        \"id\": \"msg_007\",\n        \"object\": \"realtime.item\",\n        \"status\": \"in_progress\",\n        \"role\": \"assistant\",\n        \"content\": []\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.output_item.added`.\n  - `response_id`: String, ID of the Response to which the item belongs.\n  - `output_index`: Integer, index of the output item.\n  - `item`: Object, details of the item.\n\n### `response.output_item.done`\n\nIndicates that an item has completed streaming, or the streaming has been interrupted.\n\n```json\n{\n    \"event_id\": \"event_3536\",\n    \"type\": \"response.output_item.done\",\n    \"response_id\": \"resp_001\",\n    \"output_index\": 0,\n    \"item\": {\n        \"id\": \"msg_007\",\n        \"object\": \"realtime.item\",\n        \"status\": \"completed\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"Sure, I can help with that.\"\n            }\n        ]\n    }\n}\n```\n\n- **Properties:**\n  - `event_id`: String, a unique identifier for the event.\n  - `type`: String, must be `response.output_item.done`.\n  - `response_id`: String, ID of the Response.\n  - `output_index`: Integer, index of the output item.\n  - `item`: Object, containing the completed item.\n\n... \n\nThe above specifications provide detailed guidance for the server/client implementations of real-time API event handling and tracking. Each event is equipped with the required JSON structure, ensuring clear, consistent communications between the server and client applications."}
{"timestamp":"2024-11-07 16:42:13.466","prompt":"# Real-Time API Overview\n\n## Retrieve File from Message\n\n### Request\n\n- **Endpoint**: `GET https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}/files/{file_id}`\n- **Parameter**: \n  - `file_id` (string, required): The ID of the file being retrieved.\n\n### Response\n\nReturns the `message file` object.\n\n**Example Request**\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/messages/msg_abc123/files/file-abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v1\"\n```\n\n**Example Response**\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"thread.message.file\",\n  \"created_at\": 1699061776,\n  \"message_id\": \"msg_abc123\"\n}\n```\n\n## Modify Message\n\n### Request\n\n- **Endpoint**: `POST https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}`\n- **Path Parameters**:\n  - `thread_id` (string, required): The ID of the thread.\n  - `message_id` (string, required): The ID of the message to modify.\n- **Request Body**:\n  - `metadata` (map, optional): Key-value pairs for additional information.\n\n### Response\n\nReturns the modified `message` object.\n\n**Example Request**\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/messages/msg_abc123 \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v1\" \\\n  -d '{\n      \"metadata\": {\n        \"modified\": \"true\",\n        \"user\": \"abc123\"\n      }\n    }'\n```\n\n**Example Response**\n```json\n{\n  \"id\": \"msg_abc123\",\n  \"object\": \"thread.message\",\n  \"created_at\": 1699017614,\n  \"thread_id\": \"thread_abc123\",\n  \"role\": \"user\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"value\": \"How does AI work? Explain it in simple terms.\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"file_ids\": [],\n  \"assistant_id\": null,\n  \"run_id\": null,\n  \"metadata\": {\n    \"modified\": \"true\",\n    \"user\": \"abc123\"\n  }\n}\n```\n\n## Message Object\n\nRepresents a message within a thread.\n\n### Fields\n\n- `id` (string): The identifier.\n- `object` (string): The object type, always `thread.message`.\n- `created_at` (integer): Unix timestamp for creation.\n- `thread_id` (string): The thread ID.\n- `status` (string): `in_progress`, `incomplete`, or `completed`.\n- `role` (string): `user` or `assistant`.\n- `content` (array): Content of the message.\n- `assistant_id` (string or null)\n- `run_id` (string or null)\n- `file_ids` (array): List of file IDs.\n- `metadata` (map): Additional information.\n\n## Create Run\n\n### Request\n\n- **Endpoint**: `POST https://api.openai.com/v1/threads/{thread_id}/runs`\n- **Path Parameters**:\n  - `thread_id` (string, required)\n- **Request Body**:\n  - `assistant_id` (string, required)\n  - Various optional parameters such as `model`, `instructions`, etc.\n\n### Response\n\nReturns a `run` object.\n\n**Example Request**\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v1\" \\\n  -d '{\n    \"assistant_id\": \"asst_abc123\"\n  }'\n```\n\n**Example Response**\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699063290,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"queued\",\n  \"started_at\": 1699063290,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699063291,\n  \"last_error\": null,\n  \"model\": \"gpt-4-turbo\",\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"file_ids\": [\n    \"file-abc123\",\n    \"file-abc456\"\n  ],\n  \"metadata\": {},\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\"\n}\n```\n\n## Run Object\n\nRepresents an execution run on a thread.\n\n### Fields\n\n- `id` (string): The identifier.\n- `object` (string): Object type, always `thread.run`.\n- `created_at` (integer): Unix timestamp for creation.\n- `thread_id` (string): Thread ID.\n- `assistant_id` (string): Assistant ID used for the run.\n- `status` (string): Status such as `queued`, `in_progress`.\n- `tools` (array): List of tools used.\n- `file_ids` (array): List of file IDs.\n- `metadata` (map): Additional key-value pairs.\n- `temperature` (number): Sampling temperature.\n- `max_prompt_tokens` (integer): Max tokens for prompts, and other fields related to the execution settings.\n\n## Use of Streaming in Runs\n\nStreaming is facilitated by passing `\"stream\": true` in requests to endpoints like `Create Thread and Run`, `Create Run`, and `Submit Tool Outputs`. The responses stream as server-sent events, aiding in real-time interaction.\n\n## Events and Deltas\n\nSeveral types of events such as `thread.message.delta`, `thread.run.step.delta`, and `message delta object` are emitted during streaming. These convey changes in state or data associated with a message or run step. \n\n**Event Handling**\n\nHandle unknown events gracefully using mechanisms in the Assistants API to capture streaming events, especially during run executions. \n\nFor further information and details on integrating these streaming functionalities and handling, consult examples and guides for effective implementation in varied environments like Node.js or Python.","response":"# Real-Time API Overview\n\n## Retrieve File from Message\n\n### Request\n\n- **Endpoint**: `GET https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}/files/{file_id}`\n- **Parameter**: \n  - `file_id` (string, required): The ID of the file being retrieved.\n\n### Response\n\nReturns the `message file` object.\n\n**Example Request**\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/messages/msg_abc123/files/file-abc123 \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v1\"\n```\n\n**Example Response**\n```json\n{\n  \"id\": \"file-abc123\",\n  \"object\": \"thread.message.file\",\n  \"created_at\": 1699061776,\n  \"message_id\": \"msg_abc123\"\n}\n```\n\n## Modify Message\n\n### Request\n\n- **Endpoint**: `POST https://api.openai.com/v1/threads/{thread_id}/messages/{message_id}`\n- **Path Parameters**:\n  - `thread_id` (string, required): The ID of the thread.\n  - `message_id` (string, required): The ID of the message to modify.\n- **Request Body**:\n  - `metadata` (map, optional): Key-value pairs for additional information.\n\n### Response\n\nReturns the modified `message` object.\n\n**Example Request**\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/messages/msg_abc123 \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Beta: assistants=v1\" \\\n  -d '{\n      \"metadata\": {\n        \"modified\": \"true\",\n        \"user\": \"abc123\"\n      }\n    }'\n```\n\n**Example Response**\n```json\n{\n  \"id\": \"msg_abc123\",\n  \"object\": \"thread.message\",\n  \"created_at\": 1699017614,\n  \"thread_id\": \"thread_abc123\",\n  \"role\": \"user\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"value\": \"How does AI work? Explain it in simple terms.\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"file_ids\": [],\n  \"assistant_id\": null,\n  \"run_id\": null,\n  \"metadata\": {\n    \"modified\": \"true\",\n    \"user\": \"abc123\"\n  }\n}\n```\n\n## Message Object\n\nRepresents a message within a thread.\n\n### Fields\n\n- `id` (string): The identifier.\n- `object` (string): The object type, always `thread.message`.\n- `created_at` (integer): Unix timestamp for creation.\n- `thread_id` (string): The thread ID.\n- `status` (string): `in_progress`, `incomplete`, or `completed`.\n- `role` (string): `user` or `assistant`.\n- `content` (array): Content of the message.\n- `assistant_id` (string or null)\n- `run_id` (string or null)\n- `file_ids` (array): List of file IDs.\n- `metadata` (map): Additional information.\n\n## Create Run\n\n### Request\n\n- **Endpoint**: `POST https://api.openai.com/v1/threads/{thread_id}/runs`\n- **Path Parameters**:\n  - `thread_id` (string, required)\n- **Request Body**:\n  - `assistant_id` (string, required)\n  - Various optional parameters such as `model`, `instructions`, etc.\n\n### Response\n\nReturns a `run` object.\n\n**Example Request**\n```bash\ncurl https://api.openai.com/v1/threads/thread_abc123/runs \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"OpenAI-Beta: assistants=v1\" \\\n  -d '{\n    \"assistant_id\": \"asst_abc123\"\n  }'\n```\n\n**Example Response**\n```json\n{\n  \"id\": \"run_abc123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1699063290,\n  \"assistant_id\": \"asst_abc123\",\n  \"thread_id\": \"thread_abc123\",\n  \"status\": \"queued\",\n  \"started_at\": 1699063290,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699063291,\n  \"last_error\": null,\n  \"model\": \"gpt-4-turbo\",\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\n    }\n  ],\n  \"file_ids\": [\n    \"file-abc123\",\n    \"file-abc456\"\n  ],\n  \"metadata\": {},\n  \"temperature\": 1.0,\n  \"top_p\": 1.0,\n  \"max_prompt_tokens\": 1000,\n  \"max_completion_tokens\": 1000,\n  \"truncation_strategy\": {\n    \"type\": \"auto\",\n    \"last_messages\": null\n  },\n  \"response_format\": \"auto\",\n  \"tool_choice\": \"auto\"\n}\n```\n\n## Run Object\n\nRepresents an execution run on a thread.\n\n### Fields\n\n- `id` (string): The identifier.\n- `object` (string): Object type, always `thread.run`.\n- `created_at` (integer): Unix timestamp for creation.\n- `thread_id` (string): Thread ID.\n- `assistant_id` (string): Assistant ID used for the run.\n- `status` (string): Status such as `queued`, `in_progress`.\n- `tools` (array): List of tools used.\n- `file_ids` (array): List of file IDs.\n- `metadata` (map): Additional key-value pairs.\n- `temperature` (number): Sampling temperature.\n- `max_prompt_tokens` (integer): Max tokens for prompts, and other fields related to the execution settings.\n\n## Use of Streaming in Runs\n\nStreaming is facilitated by passing `\"stream\": true` in requests to endpoints like `Create Thread and Run`, `Create Run`, and `Submit Tool Outputs`. The responses stream as server-sent events, aiding in real-time interaction.\n\n## Events and Deltas\n\nSeveral types of events such as `thread.message.delta`, `thread.run.step.delta`, and `message delta object` are emitted during streaming. These convey changes in state or data associated with a message or run step. \n\n**Event Handling**\n\nHandle unknown events gracefully using mechanisms in the Assistants API to capture streaming events, especially during run executions. \n\nFor further information and details on integrating these streaming functionalities and handling, consult examples and guides for effective implementation in varied environments like Node.js or Python."}
{"timestamp":"2024-11-07 16:43:03.652","prompt":"# Realtime API Documentation\n\nThis document provides a comprehensive guide to implementing a full server/client system that utilizes the Realtime API, with an emphasis on both client and server events. It's crucial for the system to be designed in consideration of the structures and types highlighted below.\n\n## Client Events\n\nThese events illustrate how clients can interact in real-time, spanning from session updates to audio buffer manipulation and conversation item management.\n\n### Session Events\n- **Session Update**  \n  - `update-event_id`: Identifier for the session update event.\n  - `update-type`: Type of update applied to the session.\n  - `update-session`: Data containing the session update details.\n\n### Input Audio Buffer Events\n\n- **Append Audio**  \n  - `append-event_id`: Identifier for the audio append event.\n  - `append-type`: Event type for appending audio.\n  - `append-audio`: The audio data being appended.\n\n- **Commit Buffer**  \n  - `commit-event_id`: Identifier for buffer commit event.\n  - `commit-type`: Event type for committing audio input buffer.\n\n- **Clear Buffer**  \n  - `clear-event_id`: Identifier for buffer clear event.\n  - `clear-type`: Event type for clearing the audio buffer.\n\n### Conversation Item Events\n\n- **Create Item**  \n  - `create-event_id`: Identifier for item creation event.\n  - `create-type`: Type of the item creation event.\n  - `create-previous_item_id`: ID of the previous item in a sequence.\n  - `create-item`: The newly created item.\n\n- **Truncate Item**  \n  - `truncate-event_id`: Identifier for item truncation event.\n  - `truncate-type`: Event type related to item truncation.\n  - `truncate-item_id`: ID of the truncated item.\n  - `truncate-content_index`: Index within the item content to truncate.\n  - `truncate-audio_end_ms`: Millisecond mark for truncating audio.\n\n- **Delete Item**  \n  - `delete-event_id`: Identifier for item deletion event.\n  - `delete-type`: Event type concerning item deletion.\n  - `delete-item_id`: ID of the item to be deleted.\n\n### Response Events\n\n- **Create Response**  \n  - `create-event_id`: Identifier for response creation.\n  - `create-type`: Event type for creating a response.\n  - `create-response`: The response data being created.\n\n- **Cancel Response**  \n  - `cancel-event_id`: Identifier for cancelling a response.\n  - `cancel-type`: Event type for response cancellation.\n\n## Server Events\n\nServer events detail the responses and actions the server takes in handling sessions, conversations, buffer management, and responses.\n\n### Error Events\n\n- **Error Occurred**  \n  - `error-event_id`: Identifier for an error event.\n  - `error-type`: Type of error.\n  - `error-error`: Details of the error message.\n\n### Session Events\n\n- **Session Created**  \n  - `created-event_id`: Identifier of the session creation.\n  - `created-type`: Event type for session creation.\n  - `created-session`: Details of the created session.\n\n- **Session Updated**  \n  - `updated-event_id`: Identifier for a session update.\n  - `updated-type`: Update event type.\n  - `updated-session`: Details of the session update.\n\n### Conversation Events\n\n- **Conversation Created**  \n  - `created-event_id`: Identifier for conversation creation.\n  - `created-type`: Event type for conversation creation.\n  - `created-conversation`: Details of the created conversation.\n\n- **Item Created**  \n  - `created-event_id`: Identifier for created item in conversation.\n  - `created-type`: The type of event for item creation.\n  - `created-previous_item_id`: ID of preceding item.\n  - `created-item`: The item information.\n\n- **Input Audio Transcription**\n\n  - Completed\n    - `completed-event_id`: Identifier for completed transcription.\n    - `completed-type`: Event type indicating transcription completion.\n    - `completed-item_id`: ID of the item associated with transcription.\n    - `completed-transcript`: Completed transcript text.\n\n  - Failed\n    - `failed-event_id`: Identifier of failed transcription.\n    - `failed-type`: Type indicating failed transcription.\n    - `failed-error`: Error information related to failure.\n\n### Response Events\n\n- **Response Created**  \n  - `created-event_id`: Identifier for response creation.\n  - `created-type`: Event type indicating a response was created.\n  - `created-response`: Details of the created response.\n\n- **Response Done**  \n  - `done-event_id`: Identifier signifying completion.\n  - `done-type`: Event type marking completion.\n\n### Rate Limits\n\n- **Rate Limits Updated**  \n  - `updated-event_id`: Identifier for rate limiting update.\n  - `updated-type`: Event type corresponding to rate limit changes.\n  - `updated-rate_limits`: Details of the new rate limits.\n\n## Conclusion\n\nThis guide should provide you with the necessary specifications and events for implementing a real-time communication interface using these categorized client and server events. Each event type is designed to handle specific actions or updates within a session or conversation, making it essential to map out interactions for efficient and comprehensive system design.","response":"# Realtime API Documentation\n\nThis document provides a comprehensive guide to implementing a full server/client system that utilizes the Realtime API, with an emphasis on both client and server events. It's crucial for the system to be designed in consideration of the structures and types highlighted below.\n\n## Client Events\n\nThese events illustrate how clients can interact in real-time, spanning from session updates to audio buffer manipulation and conversation item management.\n\n### Session Events\n- **Session Update**  \n  - `update-event_id`: Identifier for the session update event.\n  - `update-type`: Type of update applied to the session.\n  - `update-session`: Data containing the session update details.\n\n### Input Audio Buffer Events\n\n- **Append Audio**  \n  - `append-event_id`: Identifier for the audio append event.\n  - `append-type`: Event type for appending audio.\n  - `append-audio`: The audio data being appended.\n\n- **Commit Buffer**  \n  - `commit-event_id`: Identifier for buffer commit event.\n  - `commit-type`: Event type for committing audio input buffer.\n\n- **Clear Buffer**  \n  - `clear-event_id`: Identifier for buffer clear event.\n  - `clear-type`: Event type for clearing the audio buffer.\n\n### Conversation Item Events\n\n- **Create Item**  \n  - `create-event_id`: Identifier for item creation event.\n  - `create-type`: Type of the item creation event.\n  - `create-previous_item_id`: ID of the previous item in a sequence.\n  - `create-item`: The newly created item.\n\n- **Truncate Item**  \n  - `truncate-event_id`: Identifier for item truncation event.\n  - `truncate-type`: Event type related to item truncation.\n  - `truncate-item_id`: ID of the truncated item.\n  - `truncate-content_index`: Index within the item content to truncate.\n  - `truncate-audio_end_ms`: Millisecond mark for truncating audio.\n\n- **Delete Item**  \n  - `delete-event_id`: Identifier for item deletion event.\n  - `delete-type`: Event type concerning item deletion.\n  - `delete-item_id`: ID of the item to be deleted.\n\n### Response Events\n\n- **Create Response**  \n  - `create-event_id`: Identifier for response creation.\n  - `create-type`: Event type for creating a response.\n  - `create-response`: The response data being created.\n\n- **Cancel Response**  \n  - `cancel-event_id`: Identifier for cancelling a response.\n  - `cancel-type`: Event type for response cancellation.\n\n## Server Events\n\nServer events detail the responses and actions the server takes in handling sessions, conversations, buffer management, and responses.\n\n### Error Events\n\n- **Error Occurred**  \n  - `error-event_id`: Identifier for an error event.\n  - `error-type`: Type of error.\n  - `error-error`: Details of the error message.\n\n### Session Events\n\n- **Session Created**  \n  - `created-event_id`: Identifier of the session creation.\n  - `created-type`: Event type for session creation.\n  - `created-session`: Details of the created session.\n\n- **Session Updated**  \n  - `updated-event_id`: Identifier for a session update.\n  - `updated-type`: Update event type.\n  - `updated-session`: Details of the session update.\n\n### Conversation Events\n\n- **Conversation Created**  \n  - `created-event_id`: Identifier for conversation creation.\n  - `created-type`: Event type for conversation creation.\n  - `created-conversation`: Details of the created conversation.\n\n- **Item Created**  \n  - `created-event_id`: Identifier for created item in conversation.\n  - `created-type`: The type of event for item creation.\n  - `created-previous_item_id`: ID of preceding item.\n  - `created-item`: The item information.\n\n- **Input Audio Transcription**\n\n  - Completed\n    - `completed-event_id`: Identifier for completed transcription.\n    - `completed-type`: Event type indicating transcription completion.\n    - `completed-item_id`: ID of the item associated with transcription.\n    - `completed-transcript`: Completed transcript text.\n\n  - Failed\n    - `failed-event_id`: Identifier of failed transcription.\n    - `failed-type`: Type indicating failed transcription.\n    - `failed-error`: Error information related to failure.\n\n### Response Events\n\n- **Response Created**  \n  - `created-event_id`: Identifier for response creation.\n  - `created-type`: Event type indicating a response was created.\n  - `created-response`: Details of the created response.\n\n- **Response Done**  \n  - `done-event_id`: Identifier signifying completion.\n  - `done-type`: Event type marking completion.\n\n### Rate Limits\n\n- **Rate Limits Updated**  \n  - `updated-event_id`: Identifier for rate limiting update.\n  - `updated-type`: Event type corresponding to rate limit changes.\n  - `updated-rate_limits`: Details of the new rate limits.\n\n## Conclusion\n\nThis guide should provide you with the necessary specifications and events for implementing a real-time communication interface using these categorized client and server events. Each event type is designed to handle specific actions or updates within a session or conversation, making it essential to map out interactions for efficient and comprehensive system design."}
{"timestamp":"2024-11-07 16:43:05.526","prompt":"openai-realtime-api-server-client-implementation-guide","response":"openai-realtime-api-server-client-implementation-guide"}
